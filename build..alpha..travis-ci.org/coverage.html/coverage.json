{"/home/travis/build/npmtest/node-npmtest-jsforce/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jsforce */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/lib.npmtest_jsforce.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/lib.npmtest_jsforce.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jsforce */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jsforce = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jsforce = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":65},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jsforce && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jsforce */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jsforce","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jsforce.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_jsforce.rollup.js'] =","            local.assetsDict['/assets.npmtest_jsforce.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_jsforce.__dirname +","                    '/lib.npmtest_jsforce.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}}},"branchMap":{},"code":["module.exports = require('./lib/jsforce');",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/jsforce.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/jsforce.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":17}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}}},"branchMap":{},"code":["/**"," * @file JSforce API root object"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","require('./api');","require('./registry');","module.exports = require('./core');",""],"l":{"8":1,"9":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":18}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":18}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":21}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":22}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":18}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":21}}},"branchMap":{},"code":["require('./analytics');","require('./apex');","require('./bulk');","require('./chatter');","require('./metadata');","require('./soap');","require('./streaming');","require('./tooling');",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/analytics.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/analytics.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":1,"57":0,"58":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":21},"end":{"line":20,"column":42}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":36},"end":{"line":33,"column":55}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":13},"end":{"line":47,"column":32}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":28},"end":{"line":59,"column":47}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":27},"end":{"line":71,"column":46}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":27},"end":{"line":89,"column":55}}},"7":{"name":"(anonymous_7)","line":116,"loc":{"start":{"line":116,"column":32},"end":{"line":116,"column":60}}},"8":{"name":"(anonymous_8)","line":141,"loc":{"start":{"line":141,"column":28},"end":{"line":141,"column":41}}},"9":{"name":"(anonymous_9)","line":152,"loc":{"start":{"line":152,"column":29},"end":{"line":152,"column":48}}},"10":{"name":"(anonymous_10)","line":164,"loc":{"start":{"line":164,"column":16},"end":{"line":164,"column":31}}},"11":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":29},"end":{"line":174,"column":42}}},"12":{"name":"(anonymous_12)","line":184,"loc":{"start":{"line":184,"column":30},"end":{"line":184,"column":49}}},"13":{"name":"(anonymous_13)","line":194,"loc":{"start":{"line":194,"column":29},"end":{"line":194,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":37}},"2":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":24}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":28}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}},"6":{"start":{"line":33,"column":0},"end":{"line":38,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":35,"column":28}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":99}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":46}},"10":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":20}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":15}},"13":{"start":{"line":59,"column":0},"end":{"line":62,"column":2}},"14":{"start":{"line":60,"column":2},"end":{"line":60,"column":93}},"15":{"start":{"line":61,"column":2},"end":{"line":61,"column":52}},"16":{"start":{"line":71,"column":0},"end":{"line":74,"column":2}},"17":{"start":{"line":72,"column":2},"end":{"line":72,"column":41}},"18":{"start":{"line":73,"column":2},"end":{"line":73,"column":52}},"19":{"start":{"line":87,"column":0},"end":{"line":103,"column":2}},"20":{"start":{"line":90,"column":2},"end":{"line":90,"column":26}},"21":{"start":{"line":91,"column":2},"end":{"line":94,"column":3}},"22":{"start":{"line":92,"column":4},"end":{"line":92,"column":23}},"23":{"start":{"line":93,"column":4},"end":{"line":93,"column":17}},"24":{"start":{"line":95,"column":2},"end":{"line":95,"column":81}},"25":{"start":{"line":96,"column":2},"end":{"line":96,"column":67}},"26":{"start":{"line":97,"column":2},"end":{"line":97,"column":73}},"27":{"start":{"line":98,"column":2},"end":{"line":101,"column":3}},"28":{"start":{"line":99,"column":4},"end":{"line":99,"column":61}},"29":{"start":{"line":100,"column":4},"end":{"line":100,"column":51}},"30":{"start":{"line":102,"column":2},"end":{"line":102,"column":55}},"31":{"start":{"line":116,"column":0},"end":{"line":132,"column":2}},"32":{"start":{"line":117,"column":2},"end":{"line":117,"column":26}},"33":{"start":{"line":118,"column":2},"end":{"line":121,"column":3}},"34":{"start":{"line":119,"column":4},"end":{"line":119,"column":23}},"35":{"start":{"line":120,"column":4},"end":{"line":120,"column":17}},"36":{"start":{"line":122,"column":2},"end":{"line":122,"column":94}},"37":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"38":{"start":{"line":124,"column":4},"end":{"line":124,"column":34}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":56}},"40":{"start":{"line":127,"column":2},"end":{"line":130,"column":3}},"41":{"start":{"line":128,"column":4},"end":{"line":128,"column":61}},"42":{"start":{"line":129,"column":4},"end":{"line":129,"column":51}},"43":{"start":{"line":131,"column":2},"end":{"line":131,"column":55}},"44":{"start":{"line":141,"column":0},"end":{"line":143,"column":2}},"45":{"start":{"line":142,"column":2},"end":{"line":142,"column":38}},"46":{"start":{"line":152,"column":0},"end":{"line":155,"column":2}},"47":{"start":{"line":153,"column":2},"end":{"line":153,"column":94}},"48":{"start":{"line":154,"column":2},"end":{"line":154,"column":52}},"49":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"50":{"start":{"line":165,"column":2},"end":{"line":165,"column":20}},"51":{"start":{"line":174,"column":0},"end":{"line":176,"column":2}},"52":{"start":{"line":175,"column":2},"end":{"line":175,"column":36}},"53":{"start":{"line":184,"column":0},"end":{"line":187,"column":2}},"54":{"start":{"line":185,"column":2},"end":{"line":185,"column":72}},"55":{"start":{"line":186,"column":2},"end":{"line":186,"column":52}},"56":{"start":{"line":194,"column":0},"end":{"line":196,"column":3}},"57":{"start":{"line":195,"column":2},"end":{"line":195,"column":39}},"58":{"start":{"line":199,"column":0},"end":{"line":199,"column":27}}},"branchMap":{"1":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":19}},{"start":{"line":90,"column":23},"end":{"line":90,"column":25}}]},"2":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"3":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":49},"end":{"line":96,"column":55}},{"start":{"line":96,"column":58},"end":{"line":96,"column":65}}]},"4":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":45},"end":{"line":97,"column":51}},{"start":{"line":97,"column":54},"end":{"line":97,"column":59}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"6":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":12},"end":{"line":117,"column":19}},{"start":{"line":117,"column":23},"end":{"line":117,"column":25}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"9":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]}},"code":["/**"," * @file Manages Salesforce Analytics API"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _ = require('lodash/core'),","    jsforce = require('../core'),","    Promise  = require('../promise');","","/**"," * Report instance to retrieving asynchronously executed result"," *"," * @protected"," * @class Analytics~ReportInstance"," * @param {Analytics~Report} report - Report"," * @param {String} id - Report instance id"," */","var ReportInstance = function(report, id) {","  this._report = report;","  this._conn = report._conn;","  this.id = id;","};","","/**"," * Retrieve report result asynchronously executed"," *"," * @method Analytics~ReportInstance#retrieve"," * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function"," * @returns {Promise.<Analytics~ReportResult>}"," */","ReportInstance.prototype.retrieve = function(callback) {","  var conn = this._conn,","      report = this._report;","  var url = [ conn._baseUrl(), \"analytics\", \"reports\", report.id, \"instances\", this.id ].join('/');","  return conn.request(url).thenCall(callback);","};","","/**"," * Report object in Analytics API"," *"," * @protected"," * @class Analytics~Report"," * @param {Connection} conn Connection"," */","var Report = function(conn, id) {","  this._conn = conn;","  this.id = id;","};","","/**"," * Describe report metadata"," *"," * @method Analytics~Report#describe"," * @param {Callback.<Analytics~ReportMetadata>} [callback] - Callback function"," * @returns {Promise.<Analytics~ReportMetadata>}"," */","Report.prototype.describe = function(callback) {","  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"describe\" ].join('/');","  return this._conn.request(url).thenCall(callback);","};","","/**"," * Explain plan for executing report"," *"," * @method Analytics~Report#explain"," * @param {Callback.<ExplainInfo>} [callback] - Callback function"," * @returns {Promise.<ExplainInfo>}"," */","Report.prototype.explain = function(callback) {","  var url = \"/query/?explain=\" + this.id;","  return this._conn.request(url).thenCall(callback);","};","","","/**"," * Run report synchronously"," *"," * @method Analytics~Report#execute"," * @param {Object} [options] - Options"," * @param {Boolean} options.details - Flag if include detail in result"," * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata"," * @param {Callback.<Analytics~ReportResult>} [callback] - Callback function"," * @returns {Promise.<Analytics~ReportResult>}"," */","Report.prototype.run =","Report.prototype.exec =","Report.prototype.execute = function(options, callback) {","  options = options || {};","  if (_.isFunction(options)) {","    callback = options;","    options = {};","  }","  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id ].join('/');","  url += \"?includeDetails=\" + (options.details ? \"true\" : \"false\");","  var params = { method : options.metadata ? 'POST' : 'GET', url : url };","  if (options.metadata) {","    params.headers = { \"Content-Type\" : \"application/json\" };","    params.body = JSON.stringify(options.metadata);","  }","  return this._conn.request(params).thenCall(callback);","};","","","/**"," * Run report asynchronously"," *"," * @method Analytics~Report#executeAsync"," * @param {Object} [options] - Options"," * @param {Boolean} options.details - Flag if include detail in result"," * @param {Analytics~ReportMetadata} options.metadata - Overriding report metadata"," * @param {Callback.<Analytics~ReportInstanceAttrs>} [callback] - Callback function"," * @returns {Promise.<Analytics~ReportInstanceAttrs>}"," */","Report.prototype.executeAsync = function(options, callback) {","  options = options || {};","  if (_.isFunction(options)) {","    callback = options;","    options = {};","  }","  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');","  if (options.details) {","    url += \"?includeDetails=true\";","  }","  var params = { method : 'POST', url : url, body: \"\" };","  if (options.metadata) {","    params.headers = { \"Content-Type\" : \"application/json\" };","    params.body = JSON.stringify(options.metadata);","  }","  return this._conn.request(params).thenCall(callback);","};","","/**"," * Get report instance for specified instance ID"," *"," * @method Analytics~Report#instance"," * @param {String} id - Report instance ID"," * @returns {Analytics~ReportInstance}"," */","Report.prototype.instance = function(id) {","  return new ReportInstance(this, id);","};","","/**"," * List report instances which had been executed asynchronously"," *"," * @method Analytics~Report#instances"," * @param {Callback.<Array.<Analytics~ReportInstanceAttrs>>} [callback] - Callback function"," * @returns {Promise.<Array.<Analytics~ReportInstanceAttrs>>}"," */","Report.prototype.instances = function(callback) {","  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\", this.id, \"instances\" ].join('/');","  return this._conn.request(url).thenCall(callback);","};","","","/**"," * API class for Analytics API"," *"," * @class"," * @param {Connection} conn Connection"," */","var Analytics = function(conn) {","  this._conn = conn;","};","","/**"," * Get report object of Analytics API"," *"," * @param {String} id - Report Id"," * @returns {Analytics~Report}"," */","Analytics.prototype.report = function(id) {","  return new Report(this._conn, id);","};","","/**"," * Get recent report list"," *"," * @param {Callback.<Array.<Analytics~ReportInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<Analytics~ReportInfo>>}"," */","Analytics.prototype.reports = function(callback) {","  var url = [ this._conn._baseUrl(), \"analytics\", \"reports\" ].join('/');","  return this._conn.request(url).thenCall(callback);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.analytics = new Analytics(conn);","});","","","module.exports = Analytics;",""],"l":{"8":1,"20":1,"21":0,"22":0,"23":0,"33":1,"34":0,"36":0,"37":0,"47":1,"48":0,"49":0,"59":1,"60":0,"61":0,"71":1,"72":0,"73":0,"87":1,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"116":1,"117":0,"118":0,"119":0,"120":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"129":0,"131":0,"141":1,"142":0,"152":1,"153":0,"154":0,"164":1,"165":0,"174":1,"175":0,"184":1,"185":0,"186":0,"194":1,"195":0,"199":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/core.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}}},"branchMap":{},"code":["/**"," * @file JSforce Core"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","'use strict';","","var EventEmitter = require('events').EventEmitter;","","var jsforce = module.exports = new EventEmitter();","jsforce.VERSION = require('./VERSION');","jsforce.Connection = require('./connection');","jsforce.OAuth2 = require('./oauth2');","jsforce.Date = jsforce.SfDate = require(\"./date\");","jsforce.RecordStream = require('./record-stream');","jsforce.Promise = require('./promise');","jsforce.require = require('./require');",""],"l":{"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/VERSION.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/VERSION.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}}},"branchMap":{},"code":["'use strict';","module.exports = '1.7.1';",""],"l":{"2":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/connection.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":0,"106":1,"107":0,"108":0,"109":1,"110":0,"111":0,"112":1,"113":0,"114":0,"115":1,"116":1,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":1,"267":0,"268":0,"269":1,"270":0,"271":0,"272":1,"273":0,"274":0,"275":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":0,"301":0,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":1,"320":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":1,"348":0,"349":0,"350":0,"351":1,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":1,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":1,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":1,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":1,"425":0,"426":0,"427":1,"428":0,"429":0,"430":1,"431":0,"432":0,"433":1,"434":0,"435":1,"436":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"fnMap":{"1":{"name":"(anonymous_1)","line":49,"loc":{"start":{"line":49,"column":34},"end":{"line":49,"column":52}}},"2":{"name":"(anonymous_2)","line":149,"loc":{"start":{"line":149,"column":9},"end":{"line":149,"column":24}}},"3":{"name":"(anonymous_3)","line":178,"loc":{"start":{"line":178,"column":34},"end":{"line":178,"column":52}}},"4":{"name":"(anonymous_4)","line":206,"loc":{"start":{"line":206,"column":54},"end":{"line":206,"column":68}}},"5":{"name":"(anonymous_5)","line":208,"loc":{"start":{"line":208,"column":45},"end":{"line":208,"column":58}}},"6":{"name":"oauthRefreshFn","line":222,"loc":{"start":{"line":222,"column":0},"end":{"line":222,"column":40}}},"7":{"name":"(anonymous_7)","line":223,"loc":{"start":{"line":223,"column":46},"end":{"line":223,"column":65}}},"8":{"name":"parseSignedRequest","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":32}}},"9":{"name":"(anonymous_9)","line":252,"loc":{"start":{"line":252,"column":32},"end":{"line":252,"column":43}}},"10":{"name":"(anonymous_10)","line":260,"loc":{"start":{"line":260,"column":37},"end":{"line":260,"column":51}}},"11":{"name":"(anonymous_11)","line":287,"loc":{"start":{"line":287,"column":31},"end":{"line":287,"column":68}}},"12":{"name":"(anonymous_12)","line":305,"loc":{"start":{"line":305,"column":25},"end":{"line":305,"column":44}}},"13":{"name":"(anonymous_13)","line":333,"loc":{"start":{"line":333,"column":34},"end":{"line":333,"column":67}}},"14":{"name":"(anonymous_14)","line":355,"loc":{"start":{"line":355,"column":35},"end":{"line":355,"column":74}}},"15":{"name":"(anonymous_15)","line":378,"loc":{"start":{"line":378,"column":34},"end":{"line":378,"column":73}}},"16":{"name":"(anonymous_16)","line":401,"loc":{"start":{"line":401,"column":36},"end":{"line":401,"column":75}}},"17":{"name":"(anonymous_17)","line":423,"loc":{"start":{"line":423,"column":37},"end":{"line":423,"column":70}}},"18":{"name":"formatDate","line":433,"loc":{"start":{"line":433,"column":0},"end":{"line":433,"column":26}}},"19":{"name":"pad","line":434,"loc":{"start":{"line":434,"column":2},"end":{"line":434,"column":23}}},"20":{"name":"parseIdUrl","line":452,"loc":{"start":{"line":452,"column":0},"end":{"line":452,"column":27}}},"21":{"name":"(anonymous_21)","line":487,"loc":{"start":{"line":487,"column":29},"end":{"line":487,"column":63}}},"22":{"name":"(anonymous_22)","line":508,"loc":{"start":{"line":508,"column":32},"end":{"line":508,"column":66}}},"23":{"name":"(anonymous_23)","line":530,"loc":{"start":{"line":530,"column":33},"end":{"line":530,"column":70}}},"24":{"name":"(anonymous_24)","line":551,"loc":{"start":{"line":551,"column":32},"end":{"line":551,"column":71}}},"25":{"name":"(anonymous_25)","line":564,"loc":{"start":{"line":564,"column":15},"end":{"line":564,"column":28}}},"26":{"name":"(anonymous_26)","line":569,"loc":{"start":{"line":569,"column":9},"end":{"line":569,"column":27}}},"27":{"name":"(anonymous_27)","line":602,"loc":{"start":{"line":602,"column":30},"end":{"line":602,"column":73}}},"28":{"name":"(anonymous_28)","line":622,"loc":{"start":{"line":622,"column":19},"end":{"line":622,"column":36}}},"29":{"name":"(anonymous_29)","line":642,"loc":{"start":{"line":642,"column":9},"end":{"line":642,"column":27}}},"30":{"name":"(anonymous_30)","line":656,"loc":{"start":{"line":656,"column":30},"end":{"line":656,"column":73}}},"31":{"name":"(anonymous_31)","line":676,"loc":{"start":{"line":676,"column":19},"end":{"line":676,"column":36}}},"32":{"name":"(anonymous_32)","line":702,"loc":{"start":{"line":702,"column":9},"end":{"line":702,"column":27}}},"33":{"name":"(anonymous_33)","line":717,"loc":{"start":{"line":717,"column":30},"end":{"line":717,"column":85}}},"34":{"name":"(anonymous_34)","line":739,"loc":{"start":{"line":739,"column":19},"end":{"line":739,"column":36}}},"35":{"name":"(anonymous_35)","line":762,"loc":{"start":{"line":762,"column":9},"end":{"line":762,"column":27}}},"36":{"name":"(anonymous_36)","line":799,"loc":{"start":{"line":799,"column":31},"end":{"line":799,"column":70}}},"37":{"name":"(anonymous_37)","line":812,"loc":{"start":{"line":812,"column":15},"end":{"line":812,"column":28}}},"38":{"name":"(anonymous_38)","line":822,"loc":{"start":{"line":822,"column":9},"end":{"line":822,"column":27}}},"39":{"name":"(anonymous_39)","line":834,"loc":{"start":{"line":834,"column":30},"end":{"line":834,"column":55}}},"40":{"name":"(anonymous_40)","line":861,"loc":{"start":{"line":861,"column":39},"end":{"line":861,"column":64}}},"41":{"name":"(anonymous_41)","line":878,"loc":{"start":{"line":878,"column":38},"end":{"line":878,"column":57}}},"42":{"name":"(anonymous_42)","line":890,"loc":{"start":{"line":890,"column":31},"end":{"line":890,"column":46}}},"43":{"name":"(anonymous_43)","line":905,"loc":{"start":{"line":905,"column":32},"end":{"line":905,"column":60}}},"44":{"name":"(anonymous_44)","line":917,"loc":{"start":{"line":917,"column":9},"end":{"line":917,"column":23}}},"45":{"name":"(anonymous_45)","line":924,"loc":{"start":{"line":924,"column":10},"end":{"line":924,"column":24}}},"46":{"name":"(anonymous_46)","line":948,"loc":{"start":{"line":948,"column":33},"end":{"line":948,"column":58}}},"47":{"name":"(anonymous_47)","line":952,"loc":{"start":{"line":952,"column":45},"end":{"line":952,"column":59}}},"48":{"name":"(anonymous_48)","line":977,"loc":{"start":{"line":977,"column":29},"end":{"line":977,"column":68}}},"49":{"name":"createUsernamePasswordRefreshFn","line":988,"loc":{"start":{"line":988,"column":0},"end":{"line":988,"column":61}}},"50":{"name":"(anonymous_50)","line":989,"loc":{"start":{"line":989,"column":9},"end":{"line":989,"column":34}}},"51":{"name":"(anonymous_51)","line":990,"loc":{"start":{"line":990,"column":35},"end":{"line":990,"column":49}}},"52":{"name":"(anonymous_52)","line":1005,"loc":{"start":{"line":1005,"column":37},"end":{"line":1005,"column":76}}},"53":{"name":"(anonymous_53)","line":1008,"loc":{"start":{"line":1008,"column":59},"end":{"line":1008,"column":73}}},"54":{"name":"esc","line":1026,"loc":{"start":{"line":1026,"column":0},"end":{"line":1026,"column":18}}},"55":{"name":"(anonymous_55)","line":1039,"loc":{"start":{"line":1039,"column":35},"end":{"line":1039,"column":74}}},"56":{"name":"(anonymous_56)","line":1064,"loc":{"start":{"line":1064,"column":10},"end":{"line":1064,"column":29}}},"57":{"name":"(anonymous_57)","line":1105,"loc":{"start":{"line":1105,"column":30},"end":{"line":1105,"column":49}}},"58":{"name":"(anonymous_58)","line":1119,"loc":{"start":{"line":1119,"column":38},"end":{"line":1119,"column":57}}},"59":{"name":"(anonymous_59)","line":1123,"loc":{"start":{"line":1123,"column":56},"end":{"line":1123,"column":67}}},"60":{"name":"(anonymous_60)","line":1143,"loc":{"start":{"line":1143,"column":36},"end":{"line":1143,"column":55}}},"61":{"name":"(anonymous_61)","line":1168,"loc":{"start":{"line":1168,"column":10},"end":{"line":1168,"column":29}}},"62":{"name":"(anonymous_62)","line":1197,"loc":{"start":{"line":1197,"column":30},"end":{"line":1197,"column":62}}},"63":{"name":"(anonymous_63)","line":1210,"loc":{"start":{"line":1210,"column":34},"end":{"line":1210,"column":48}}},"64":{"name":"(anonymous_64)","line":1238,"loc":{"start":{"line":1238,"column":31},"end":{"line":1238,"column":69}}},"65":{"name":"(anonymous_65)","line":1286,"loc":{"start":{"line":1286,"column":31},"end":{"line":1286,"column":69}}},"66":{"name":"(anonymous_66)","line":1327,"loc":{"start":{"line":1327,"column":28},"end":{"line":1327,"column":47}}},"67":{"name":"(anonymous_67)","line":1343,"loc":{"start":{"line":1343,"column":30},"end":{"line":1343,"column":49}}},"68":{"name":"(anonymous_68)","line":1359,"loc":{"start":{"line":1359,"column":29},"end":{"line":1359,"column":48}}},"69":{"name":"(anonymous_69)","line":1370,"loc":{"start":{"line":1370,"column":36},"end":{"line":1370,"column":55}}},"70":{"name":"(anonymous_70)","line":1380,"loc":{"start":{"line":1380,"column":35},"end":{"line":1380,"column":56}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":21,"column":33}},"2":{"start":{"line":23,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":49,"column":0},"end":{"line":161,"column":2}},"4":{"start":{"line":50,"column":2},"end":{"line":50,"column":26}},"5":{"start":{"line":52,"column":2},"end":{"line":52,"column":46}},"6":{"start":{"line":54,"column":2},"end":{"line":60,"column":4}},"7":{"start":{"line":66,"column":2},"end":{"line":66,"column":80}},"8":{"start":{"line":68,"column":2},"end":{"line":68,"column":75}},"9":{"start":{"line":69,"column":2},"end":{"line":69,"column":53}},"10":{"start":{"line":70,"column":2},"end":{"line":70,"column":64}},"11":{"start":{"line":73,"column":2},"end":{"line":74,"column":88}},"12":{"start":{"line":76,"column":2},"end":{"line":76,"column":41}},"13":{"start":{"line":81,"column":2},"end":{"line":81,"column":34}},"14":{"start":{"line":82,"column":2},"end":{"line":82,"column":39}},"15":{"start":{"line":130,"column":2},"end":{"line":130,"column":35}},"16":{"start":{"line":136,"column":2},"end":{"line":136,"column":27}},"17":{"start":{"line":139,"column":2},"end":{"line":139,"column":18}},"18":{"start":{"line":140,"column":2},"end":{"line":140,"column":36}},"19":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"20":{"start":{"line":142,"column":4},"end":{"line":142,"column":31}},"21":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"22":{"start":{"line":145,"column":4},"end":{"line":145,"column":80}},"23":{"start":{"line":148,"column":2},"end":{"line":150,"column":4}},"24":{"start":{"line":149,"column":26},"end":{"line":149,"column":72}},"25":{"start":{"line":151,"column":2},"end":{"line":151,"column":79}},"26":{"start":{"line":152,"column":2},"end":{"line":152,"column":86}},"27":{"start":{"line":153,"column":2},"end":{"line":153,"column":41}},"28":{"start":{"line":154,"column":2},"end":{"line":154,"column":39}},"29":{"start":{"line":156,"column":2},"end":{"line":156,"column":43}},"30":{"start":{"line":157,"column":2},"end":{"line":157,"column":91}},"31":{"start":{"line":158,"column":2},"end":{"line":158,"column":98}},"32":{"start":{"line":160,"column":2},"end":{"line":160,"column":27}},"33":{"start":{"line":163,"column":0},"end":{"line":163,"column":42}},"34":{"start":{"line":178,"column":0},"end":{"line":219,"column":2}},"35":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"36":{"start":{"line":180,"column":4},"end":{"line":180,"column":77}},"37":{"start":{"line":182,"column":2},"end":{"line":182,"column":106}},"38":{"start":{"line":184,"column":2},"end":{"line":184,"column":82}},"39":{"start":{"line":185,"column":2},"end":{"line":185,"column":64}},"40":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"41":{"start":{"line":187,"column":4},"end":{"line":187,"column":104}},"42":{"start":{"line":190,"column":2},"end":{"line":190,"column":90}},"43":{"start":{"line":191,"column":2},"end":{"line":196,"column":3}},"44":{"start":{"line":192,"column":4},"end":{"line":192,"column":60}},"45":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"46":{"start":{"line":194,"column":6},"end":{"line":194,"column":74}},"47":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"48":{"start":{"line":199,"column":4},"end":{"line":199,"column":37}},"49":{"start":{"line":202,"column":2},"end":{"line":202,"column":22}},"50":{"start":{"line":204,"column":2},"end":{"line":204,"column":21}},"51":{"start":{"line":205,"column":2},"end":{"line":205,"column":21}},"52":{"start":{"line":206,"column":2},"end":{"line":211,"column":12}},"53":{"start":{"line":207,"column":4},"end":{"line":210,"column":5}},"54":{"start":{"line":208,"column":6},"end":{"line":208,"column":79}},"55":{"start":{"line":208,"column":60},"end":{"line":208,"column":75}},"56":{"start":{"line":209,"column":6},"end":{"line":209,"column":40}},"57":{"start":{"line":213,"column":2},"end":{"line":215,"column":3}},"58":{"start":{"line":214,"column":4},"end":{"line":214,"column":30}},"59":{"start":{"line":217,"column":2},"end":{"line":217,"column":60}},"60":{"start":{"line":222,"column":0},"end":{"line":233,"column":1}},"61":{"start":{"line":223,"column":2},"end":{"line":232,"column":5}},"62":{"start":{"line":224,"column":4},"end":{"line":224,"column":38}},"63":{"start":{"line":224,"column":15},"end":{"line":224,"column":36}},"64":{"start":{"line":225,"column":4},"end":{"line":225,"column":38}},"65":{"start":{"line":226,"column":4},"end":{"line":230,"column":7}},"66":{"start":{"line":231,"column":4},"end":{"line":231,"column":42}},"67":{"start":{"line":236,"column":0},"end":{"line":248,"column":1}},"68":{"start":{"line":237,"column":2},"end":{"line":246,"column":3}},"69":{"start":{"line":238,"column":4},"end":{"line":244,"column":5}},"70":{"start":{"line":239,"column":6},"end":{"line":239,"column":28}},"71":{"start":{"line":241,"column":6},"end":{"line":241,"column":36}},"72":{"start":{"line":242,"column":6},"end":{"line":242,"column":61}},"73":{"start":{"line":243,"column":6},"end":{"line":243,"column":30}},"74":{"start":{"line":245,"column":4},"end":{"line":245,"column":16}},"75":{"start":{"line":247,"column":2},"end":{"line":247,"column":12}},"76":{"start":{"line":252,"column":0},"end":{"line":254,"column":2}},"77":{"start":{"line":253,"column":2},"end":{"line":253,"column":77}},"78":{"start":{"line":260,"column":0},"end":{"line":270,"column":2}},"79":{"start":{"line":261,"column":2},"end":{"line":269,"column":3}},"80":{"start":{"line":262,"column":4},"end":{"line":266,"column":5}},"81":{"start":{"line":263,"column":6},"end":{"line":263,"column":36}},"82":{"start":{"line":265,"column":6},"end":{"line":265,"column":35}},"83":{"start":{"line":268,"column":4},"end":{"line":268,"column":15}},"84":{"start":{"line":287,"column":0},"end":{"line":319,"column":2}},"85":{"start":{"line":288,"column":2},"end":{"line":291,"column":3}},"86":{"start":{"line":289,"column":4},"end":{"line":289,"column":23}},"87":{"start":{"line":290,"column":4},"end":{"line":290,"column":19}},"88":{"start":{"line":292,"column":2},"end":{"line":292,"column":26}},"89":{"start":{"line":293,"column":2},"end":{"line":293,"column":18}},"90":{"start":{"line":296,"column":2},"end":{"line":298,"column":3}},"91":{"start":{"line":297,"column":4},"end":{"line":297,"column":46}},"92":{"start":{"line":300,"column":2},"end":{"line":300,"column":48}},"93":{"start":{"line":302,"column":2},"end":{"line":302,"column":43}},"94":{"start":{"line":305,"column":2},"end":{"line":317,"column":5}},"95":{"start":{"line":306,"column":4},"end":{"line":316,"column":5}},"96":{"start":{"line":307,"column":6},"end":{"line":307,"column":92}},"97":{"start":{"line":308,"column":6},"end":{"line":315,"column":7}},"98":{"start":{"line":309,"column":8},"end":{"line":314,"column":10}},"99":{"start":{"line":318,"column":2},"end":{"line":318,"column":53}},"100":{"start":{"line":333,"column":0},"end":{"line":339,"column":2}},"101":{"start":{"line":334,"column":2},"end":{"line":337,"column":4}},"102":{"start":{"line":338,"column":2},"end":{"line":338,"column":50}},"103":{"start":{"line":355,"column":0},"end":{"line":363,"column":2}},"104":{"start":{"line":356,"column":2},"end":{"line":361,"column":4}},"105":{"start":{"line":362,"column":2},"end":{"line":362,"column":50}},"106":{"start":{"line":378,"column":0},"end":{"line":386,"column":2}},"107":{"start":{"line":379,"column":2},"end":{"line":384,"column":4}},"108":{"start":{"line":385,"column":2},"end":{"line":385,"column":50}},"109":{"start":{"line":401,"column":0},"end":{"line":409,"column":2}},"110":{"start":{"line":402,"column":2},"end":{"line":407,"column":4}},"111":{"start":{"line":408,"column":2},"end":{"line":408,"column":50}},"112":{"start":{"line":423,"column":0},"end":{"line":429,"column":2}},"113":{"start":{"line":424,"column":2},"end":{"line":427,"column":4}},"114":{"start":{"line":428,"column":2},"end":{"line":428,"column":50}},"115":{"start":{"line":433,"column":0},"end":{"line":448,"column":1}},"116":{"start":{"line":434,"column":2},"end":{"line":439,"column":3}},"117":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"118":{"start":{"line":436,"column":6},"end":{"line":436,"column":26}},"119":{"start":{"line":438,"column":4},"end":{"line":438,"column":18}},"120":{"start":{"line":441,"column":2},"end":{"line":447,"column":13}},"121":{"start":{"line":452,"column":0},"end":{"line":460,"column":1}},"122":{"start":{"line":453,"column":2},"end":{"line":453,"column":32}},"123":{"start":{"line":454,"column":2},"end":{"line":454,"column":50}},"124":{"start":{"line":455,"column":2},"end":{"line":459,"column":4}},"125":{"start":{"line":487,"column":0},"end":{"line":497,"column":2}},"126":{"start":{"line":488,"column":2},"end":{"line":491,"column":3}},"127":{"start":{"line":489,"column":4},"end":{"line":489,"column":23}},"128":{"start":{"line":490,"column":4},"end":{"line":490,"column":24}},"129":{"start":{"line":492,"column":2},"end":{"line":492,"column":45}},"130":{"start":{"line":493,"column":2},"end":{"line":495,"column":3}},"131":{"start":{"line":494,"column":4},"end":{"line":494,"column":24}},"132":{"start":{"line":496,"column":2},"end":{"line":496,"column":15}},"133":{"start":{"line":508,"column":0},"end":{"line":519,"column":2}},"134":{"start":{"line":509,"column":2},"end":{"line":512,"column":3}},"135":{"start":{"line":510,"column":4},"end":{"line":510,"column":23}},"136":{"start":{"line":511,"column":4},"end":{"line":511,"column":24}},"137":{"start":{"line":513,"column":2},"end":{"line":513,"column":45}},"138":{"start":{"line":514,"column":2},"end":{"line":514,"column":22}},"139":{"start":{"line":515,"column":2},"end":{"line":517,"column":3}},"140":{"start":{"line":516,"column":4},"end":{"line":516,"column":24}},"141":{"start":{"line":518,"column":2},"end":{"line":518,"column":15}},"142":{"start":{"line":530,"column":0},"end":{"line":540,"column":2}},"143":{"start":{"line":531,"column":2},"end":{"line":534,"column":3}},"144":{"start":{"line":532,"column":4},"end":{"line":532,"column":23}},"145":{"start":{"line":533,"column":4},"end":{"line":533,"column":24}},"146":{"start":{"line":535,"column":2},"end":{"line":535,"column":61}},"147":{"start":{"line":536,"column":2},"end":{"line":538,"column":3}},"148":{"start":{"line":537,"column":4},"end":{"line":537,"column":24}},"149":{"start":{"line":539,"column":2},"end":{"line":539,"column":15}},"150":{"start":{"line":551,"column":0},"end":{"line":572,"column":2}},"151":{"start":{"line":552,"column":2},"end":{"line":555,"column":3}},"152":{"start":{"line":553,"column":4},"end":{"line":553,"column":23}},"153":{"start":{"line":554,"column":4},"end":{"line":554,"column":17}},"154":{"start":{"line":556,"column":2},"end":{"line":556,"column":26}},"155":{"start":{"line":557,"column":2},"end":{"line":557,"column":18}},"156":{"start":{"line":558,"column":2},"end":{"line":558,"column":31}},"157":{"start":{"line":559,"column":2},"end":{"line":559,"column":32}},"158":{"start":{"line":560,"column":2},"end":{"line":562,"column":3}},"159":{"start":{"line":561,"column":4},"end":{"line":561,"column":97}},"160":{"start":{"line":563,"column":2},"end":{"line":571,"column":24}},"161":{"start":{"line":565,"column":6},"end":{"line":565,"column":123}},"162":{"start":{"line":565,"column":17},"end":{"line":565,"column":121}},"163":{"start":{"line":566,"column":6},"end":{"line":566,"column":68}},"164":{"start":{"line":567,"column":6},"end":{"line":567,"column":81}},"165":{"start":{"line":570,"column":4},"end":{"line":570,"column":65}},"166":{"start":{"line":601,"column":0},"end":{"line":645,"column":2}},"167":{"start":{"line":603,"column":2},"end":{"line":609,"column":3}},"168":{"start":{"line":605,"column":4},"end":{"line":605,"column":23}},"169":{"start":{"line":606,"column":4},"end":{"line":606,"column":22}},"170":{"start":{"line":607,"column":4},"end":{"line":607,"column":19}},"171":{"start":{"line":608,"column":4},"end":{"line":608,"column":16}},"172":{"start":{"line":610,"column":2},"end":{"line":613,"column":3}},"173":{"start":{"line":611,"column":4},"end":{"line":611,"column":23}},"174":{"start":{"line":612,"column":4},"end":{"line":612,"column":17}},"175":{"start":{"line":614,"column":2},"end":{"line":614,"column":26}},"176":{"start":{"line":615,"column":2},"end":{"line":615,"column":18}},"177":{"start":{"line":616,"column":2},"end":{"line":616,"column":35}},"178":{"start":{"line":617,"column":2},"end":{"line":617,"column":44}},"179":{"start":{"line":618,"column":2},"end":{"line":620,"column":3}},"180":{"start":{"line":619,"column":4},"end":{"line":619,"column":97}},"181":{"start":{"line":621,"column":2},"end":{"line":644,"column":24}},"182":{"start":{"line":623,"column":6},"end":{"line":623,"column":93}},"183":{"start":{"line":624,"column":6},"end":{"line":626,"column":7}},"184":{"start":{"line":625,"column":8},"end":{"line":625,"column":61}},"185":{"start":{"line":627,"column":6},"end":{"line":627,"column":31}},"186":{"start":{"line":628,"column":6},"end":{"line":628,"column":23}},"187":{"start":{"line":629,"column":6},"end":{"line":629,"column":25}},"188":{"start":{"line":630,"column":6},"end":{"line":630,"column":31}},"189":{"start":{"line":632,"column":6},"end":{"line":632,"column":71}},"190":{"start":{"line":633,"column":6},"end":{"line":640,"column":9}},"191":{"start":{"line":643,"column":4},"end":{"line":643,"column":65}},"192":{"start":{"line":656,"column":0},"end":{"line":705,"column":2}},"193":{"start":{"line":657,"column":2},"end":{"line":663,"column":3}},"194":{"start":{"line":659,"column":4},"end":{"line":659,"column":23}},"195":{"start":{"line":660,"column":4},"end":{"line":660,"column":22}},"196":{"start":{"line":661,"column":4},"end":{"line":661,"column":19}},"197":{"start":{"line":662,"column":4},"end":{"line":662,"column":16}},"198":{"start":{"line":664,"column":2},"end":{"line":667,"column":3}},"199":{"start":{"line":665,"column":4},"end":{"line":665,"column":23}},"200":{"start":{"line":666,"column":4},"end":{"line":666,"column":17}},"201":{"start":{"line":668,"column":2},"end":{"line":668,"column":26}},"202":{"start":{"line":669,"column":2},"end":{"line":669,"column":18}},"203":{"start":{"line":670,"column":2},"end":{"line":670,"column":35}},"204":{"start":{"line":671,"column":2},"end":{"line":671,"column":44}},"205":{"start":{"line":672,"column":2},"end":{"line":674,"column":3}},"206":{"start":{"line":673,"column":4},"end":{"line":673,"column":97}},"207":{"start":{"line":675,"column":2},"end":{"line":704,"column":24}},"208":{"start":{"line":677,"column":6},"end":{"line":677,"column":25}},"209":{"start":{"line":678,"column":6},"end":{"line":680,"column":7}},"210":{"start":{"line":679,"column":8},"end":{"line":679,"column":61}},"211":{"start":{"line":681,"column":6},"end":{"line":681,"column":93}},"212":{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},"213":{"start":{"line":683,"column":8},"end":{"line":683,"column":61}},"214":{"start":{"line":685,"column":6},"end":{"line":685,"column":31}},"215":{"start":{"line":686,"column":6},"end":{"line":686,"column":23}},"216":{"start":{"line":687,"column":6},"end":{"line":687,"column":25}},"217":{"start":{"line":688,"column":6},"end":{"line":688,"column":31}},"218":{"start":{"line":690,"column":6},"end":{"line":690,"column":75}},"219":{"start":{"line":691,"column":6},"end":{"line":700,"column":9}},"220":{"start":{"line":703,"column":4},"end":{"line":703,"column":65}},"221":{"start":{"line":717,"column":0},"end":{"line":765,"column":2}},"222":{"start":{"line":719,"column":2},"end":{"line":726,"column":3}},"223":{"start":{"line":721,"column":4},"end":{"line":721,"column":23}},"224":{"start":{"line":722,"column":4},"end":{"line":722,"column":25}},"225":{"start":{"line":723,"column":4},"end":{"line":723,"column":25}},"226":{"start":{"line":724,"column":4},"end":{"line":724,"column":19}},"227":{"start":{"line":725,"column":4},"end":{"line":725,"column":16}},"228":{"start":{"line":727,"column":2},"end":{"line":730,"column":3}},"229":{"start":{"line":728,"column":4},"end":{"line":728,"column":23}},"230":{"start":{"line":729,"column":4},"end":{"line":729,"column":17}},"231":{"start":{"line":731,"column":2},"end":{"line":731,"column":26}},"232":{"start":{"line":732,"column":2},"end":{"line":732,"column":18}},"233":{"start":{"line":733,"column":2},"end":{"line":733,"column":35}},"234":{"start":{"line":734,"column":2},"end":{"line":734,"column":44}},"235":{"start":{"line":735,"column":2},"end":{"line":737,"column":3}},"236":{"start":{"line":736,"column":4},"end":{"line":736,"column":97}},"237":{"start":{"line":738,"column":2},"end":{"line":764,"column":24}},"238":{"start":{"line":740,"column":6},"end":{"line":740,"column":93}},"239":{"start":{"line":741,"column":6},"end":{"line":741,"column":37}},"240":{"start":{"line":742,"column":6},"end":{"line":744,"column":7}},"241":{"start":{"line":743,"column":8},"end":{"line":743,"column":85}},"242":{"start":{"line":745,"column":6},"end":{"line":745,"column":31}},"243":{"start":{"line":746,"column":6},"end":{"line":746,"column":32}},"244":{"start":{"line":747,"column":6},"end":{"line":747,"column":25}},"245":{"start":{"line":748,"column":6},"end":{"line":748,"column":31}},"246":{"start":{"line":750,"column":6},"end":{"line":750,"column":90}},"247":{"start":{"line":751,"column":6},"end":{"line":760,"column":9}},"248":{"start":{"line":763,"column":4},"end":{"line":763,"column":65}},"249":{"start":{"line":797,"column":0},"end":{"line":825,"column":2}},"250":{"start":{"line":800,"column":2},"end":{"line":803,"column":3}},"251":{"start":{"line":801,"column":4},"end":{"line":801,"column":23}},"252":{"start":{"line":802,"column":4},"end":{"line":802,"column":17}},"253":{"start":{"line":804,"column":2},"end":{"line":804,"column":26}},"254":{"start":{"line":805,"column":2},"end":{"line":805,"column":18}},"255":{"start":{"line":806,"column":2},"end":{"line":806,"column":31}},"256":{"start":{"line":807,"column":2},"end":{"line":807,"column":32}},"257":{"start":{"line":808,"column":2},"end":{"line":810,"column":3}},"258":{"start":{"line":809,"column":4},"end":{"line":809,"column":97}},"259":{"start":{"line":811,"column":2},"end":{"line":824,"column":24}},"260":{"start":{"line":813,"column":6},"end":{"line":813,"column":68}},"261":{"start":{"line":814,"column":6},"end":{"line":820,"column":9}},"262":{"start":{"line":823,"column":4},"end":{"line":823,"column":65}},"263":{"start":{"line":834,"column":0},"end":{"line":837,"column":2}},"264":{"start":{"line":835,"column":2},"end":{"line":835,"column":70}},"265":{"start":{"line":836,"column":2},"end":{"line":836,"column":46}},"266":{"start":{"line":860,"column":0},"end":{"line":864,"column":2}},"267":{"start":{"line":862,"column":2},"end":{"line":862,"column":72}},"268":{"start":{"line":863,"column":2},"end":{"line":863,"column":46}},"269":{"start":{"line":878,"column":0},"end":{"line":881,"column":2}},"270":{"start":{"line":879,"column":2},"end":{"line":879,"column":42}},"271":{"start":{"line":880,"column":2},"end":{"line":880,"column":46}},"272":{"start":{"line":890,"column":0},"end":{"line":895,"column":2}},"273":{"start":{"line":891,"column":2},"end":{"line":891,"column":38}},"274":{"start":{"line":892,"column":2},"end":{"line":893,"column":51}},"275":{"start":{"line":894,"column":2},"end":{"line":894,"column":17}},"276":{"start":{"line":905,"column":0},"end":{"line":932,"column":2}},"277":{"start":{"line":906,"column":2},"end":{"line":909,"column":3}},"278":{"start":{"line":907,"column":4},"end":{"line":907,"column":23}},"279":{"start":{"line":908,"column":4},"end":{"line":908,"column":17}},"280":{"start":{"line":910,"column":2},"end":{"line":910,"column":26}},"281":{"start":{"line":911,"column":2},"end":{"line":911,"column":18}},"282":{"start":{"line":912,"column":2},"end":{"line":912,"column":49}},"283":{"start":{"line":913,"column":2},"end":{"line":931,"column":24}},"284":{"start":{"line":918,"column":4},"end":{"line":918,"column":27}},"285":{"start":{"line":919,"column":4},"end":{"line":919,"column":78}},"286":{"start":{"line":920,"column":4},"end":{"line":922,"column":16}},"287":{"start":{"line":923,"column":4},"end":{"line":923,"column":79}},"288":{"start":{"line":925,"column":4},"end":{"line":929,"column":6}},"289":{"start":{"line":930,"column":4},"end":{"line":930,"column":15}},"290":{"start":{"line":948,"column":0},"end":{"line":966,"column":2}},"291":{"start":{"line":949,"column":2},"end":{"line":949,"column":18}},"292":{"start":{"line":950,"column":2},"end":{"line":950,"column":28}},"293":{"start":{"line":952,"column":2},"end":{"line":964,"column":24}},"294":{"start":{"line":953,"column":4},"end":{"line":953,"column":67}},"295":{"start":{"line":954,"column":4},"end":{"line":954,"column":38}},"296":{"start":{"line":955,"column":4},"end":{"line":960,"column":7}},"297":{"start":{"line":961,"column":4},"end":{"line":961,"column":106}},"298":{"start":{"line":962,"column":4},"end":{"line":962,"column":20}},"299":{"start":{"line":977,"column":0},"end":{"line":985,"column":2}},"300":{"start":{"line":979,"column":2},"end":{"line":979,"column":120}},"301":{"start":{"line":980,"column":2},"end":{"line":984,"column":3}},"302":{"start":{"line":981,"column":4},"end":{"line":981,"column":60}},"303":{"start":{"line":983,"column":4},"end":{"line":983,"column":58}},"304":{"start":{"line":988,"column":0},"end":{"line":995,"column":1}},"305":{"start":{"line":989,"column":2},"end":{"line":994,"column":4}},"306":{"start":{"line":990,"column":4},"end":{"line":993,"column":7}},"307":{"start":{"line":991,"column":6},"end":{"line":991,"column":40}},"308":{"start":{"line":991,"column":17},"end":{"line":991,"column":38}},"309":{"start":{"line":992,"column":6},"end":{"line":992,"column":39}},"310":{"start":{"line":1005,"column":0},"end":{"line":1021,"column":2}},"311":{"start":{"line":1006,"column":2},"end":{"line":1006,"column":18}},"312":{"start":{"line":1007,"column":2},"end":{"line":1007,"column":28}},"313":{"start":{"line":1008,"column":2},"end":{"line":1019,"column":24}},"314":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":67}},"315":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":38}},"316":{"start":{"line":1011,"column":4},"end":{"line":1015,"column":7}},"317":{"start":{"line":1016,"column":4},"end":{"line":1016,"column":106}},"318":{"start":{"line":1017,"column":4},"end":{"line":1017,"column":20}},"319":{"start":{"line":1026,"column":0},"end":{"line":1029,"column":1}},"320":{"start":{"line":1027,"column":2},"end":{"line":1028,"column":74}},"321":{"start":{"line":1039,"column":0},"end":{"line":1097,"column":2}},"322":{"start":{"line":1040,"column":2},"end":{"line":1040,"column":18}},"323":{"start":{"line":1041,"column":2},"end":{"line":1041,"column":28}},"324":{"start":{"line":1042,"column":2},"end":{"line":1052,"column":13}},"325":{"start":{"line":1054,"column":2},"end":{"line":1054,"column":87}},"326":{"start":{"line":1056,"column":2},"end":{"line":1095,"column":24}},"327":{"start":{"line":1065,"column":4},"end":{"line":1065,"column":10}},"328":{"start":{"line":1066,"column":4},"end":{"line":1070,"column":5}},"329":{"start":{"line":1067,"column":6},"end":{"line":1067,"column":69}},"330":{"start":{"line":1068,"column":6},"end":{"line":1068,"column":34}},"331":{"start":{"line":1069,"column":6},"end":{"line":1069,"column":52}},"332":{"start":{"line":1071,"column":4},"end":{"line":1071,"column":53}},"333":{"start":{"line":1072,"column":4},"end":{"line":1072,"column":63}},"334":{"start":{"line":1073,"column":4},"end":{"line":1073,"column":30}},"335":{"start":{"line":1074,"column":4},"end":{"line":1074,"column":63}},"336":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":30}},"337":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":57}},"338":{"start":{"line":1077,"column":4},"end":{"line":1077,"column":27}},"339":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":73}},"340":{"start":{"line":1079,"column":4},"end":{"line":1079,"column":26}},"341":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":67}},"342":{"start":{"line":1081,"column":4},"end":{"line":1081,"column":43}},"343":{"start":{"line":1082,"column":4},"end":{"line":1086,"column":6}},"344":{"start":{"line":1087,"column":4},"end":{"line":1091,"column":7}},"345":{"start":{"line":1092,"column":4},"end":{"line":1092,"column":83}},"346":{"start":{"line":1093,"column":4},"end":{"line":1093,"column":20}},"347":{"start":{"line":1105,"column":0},"end":{"line":1111,"column":2}},"348":{"start":{"line":1106,"column":2},"end":{"line":1110,"column":3}},"349":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":41}},"350":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":39}},"351":{"start":{"line":1119,"column":0},"end":{"line":1134,"column":2}},"352":{"start":{"line":1120,"column":2},"end":{"line":1120,"column":18}},"353":{"start":{"line":1121,"column":2},"end":{"line":1121,"column":28}},"354":{"start":{"line":1123,"column":2},"end":{"line":1133,"column":24}},"355":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":28}},"356":{"start":{"line":1126,"column":4},"end":{"line":1126,"column":25}},"357":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":29}},"358":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":28}},"359":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":23}},"360":{"start":{"line":1132,"column":4},"end":{"line":1132,"column":21}},"361":{"start":{"line":1143,"column":0},"end":{"line":1187,"column":2}},"362":{"start":{"line":1144,"column":2},"end":{"line":1144,"column":18}},"363":{"start":{"line":1145,"column":2},"end":{"line":1145,"column":28}},"364":{"start":{"line":1147,"column":2},"end":{"line":1158,"column":13}},"365":{"start":{"line":1160,"column":2},"end":{"line":1186,"column":24}},"366":{"start":{"line":1169,"column":4},"end":{"line":1169,"column":95}},"367":{"start":{"line":1170,"column":4},"end":{"line":1174,"column":5}},"368":{"start":{"line":1171,"column":6},"end":{"line":1171,"column":73}},"369":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":34}},"370":{"start":{"line":1173,"column":6},"end":{"line":1173,"column":52}},"371":{"start":{"line":1177,"column":4},"end":{"line":1177,"column":28}},"372":{"start":{"line":1178,"column":4},"end":{"line":1178,"column":25}},"373":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":29}},"374":{"start":{"line":1180,"column":4},"end":{"line":1180,"column":28}},"375":{"start":{"line":1181,"column":4},"end":{"line":1181,"column":23}},"376":{"start":{"line":1184,"column":4},"end":{"line":1184,"column":21}},"377":{"start":{"line":1197,"column":0},"end":{"line":1221,"column":2}},"378":{"start":{"line":1198,"column":2},"end":{"line":1202,"column":3}},"379":{"start":{"line":1199,"column":4},"end":{"line":1199,"column":21}},"380":{"start":{"line":1200,"column":4},"end":{"line":1200,"column":17}},"381":{"start":{"line":1201,"column":4},"end":{"line":1201,"column":21}},"382":{"start":{"line":1203,"column":2},"end":{"line":1206,"column":3}},"383":{"start":{"line":1204,"column":4},"end":{"line":1204,"column":21}},"384":{"start":{"line":1205,"column":4},"end":{"line":1205,"column":22}},"385":{"start":{"line":1207,"column":2},"end":{"line":1207,"column":10}},"386":{"start":{"line":1208,"column":2},"end":{"line":1219,"column":3}},"387":{"start":{"line":1209,"column":4},"end":{"line":1209,"column":58}},"388":{"start":{"line":1210,"column":4},"end":{"line":1212,"column":26}},"389":{"start":{"line":1211,"column":6},"end":{"line":1211,"column":71}},"390":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":38}},"391":{"start":{"line":1215,"column":4},"end":{"line":1217,"column":5}},"392":{"start":{"line":1216,"column":6},"end":{"line":1216,"column":31}},"393":{"start":{"line":1218,"column":4},"end":{"line":1218,"column":48}},"394":{"start":{"line":1238,"column":0},"end":{"line":1266,"column":2}},"395":{"start":{"line":1239,"column":2},"end":{"line":1239,"column":71}},"396":{"start":{"line":1241,"column":2},"end":{"line":1243,"column":3}},"397":{"start":{"line":1242,"column":4},"end":{"line":1242,"column":28}},"398":{"start":{"line":1245,"column":2},"end":{"line":1247,"column":3}},"399":{"start":{"line":1246,"column":4},"end":{"line":1246,"column":30}},"400":{"start":{"line":1249,"column":2},"end":{"line":1251,"column":3}},"401":{"start":{"line":1250,"column":4},"end":{"line":1250,"column":49}},"402":{"start":{"line":1253,"column":2},"end":{"line":1255,"column":3}},"403":{"start":{"line":1254,"column":4},"end":{"line":1254,"column":24}},"404":{"start":{"line":1257,"column":2},"end":{"line":1259,"column":3}},"405":{"start":{"line":1258,"column":4},"end":{"line":1258,"column":26}},"406":{"start":{"line":1261,"column":2},"end":{"line":1263,"column":3}},"407":{"start":{"line":1262,"column":4},"end":{"line":1262,"column":45}},"408":{"start":{"line":1265,"column":2},"end":{"line":1265,"column":46}},"409":{"start":{"line":1286,"column":0},"end":{"line":1314,"column":2}},"410":{"start":{"line":1287,"column":2},"end":{"line":1287,"column":71}},"411":{"start":{"line":1289,"column":2},"end":{"line":1291,"column":3}},"412":{"start":{"line":1290,"column":4},"end":{"line":1290,"column":28}},"413":{"start":{"line":1293,"column":2},"end":{"line":1295,"column":3}},"414":{"start":{"line":1294,"column":4},"end":{"line":1294,"column":30}},"415":{"start":{"line":1297,"column":2},"end":{"line":1299,"column":3}},"416":{"start":{"line":1298,"column":4},"end":{"line":1298,"column":49}},"417":{"start":{"line":1301,"column":2},"end":{"line":1303,"column":3}},"418":{"start":{"line":1302,"column":4},"end":{"line":1302,"column":24}},"419":{"start":{"line":1305,"column":2},"end":{"line":1307,"column":3}},"420":{"start":{"line":1306,"column":4},"end":{"line":1306,"column":26}},"421":{"start":{"line":1309,"column":2},"end":{"line":1311,"column":3}},"422":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":45}},"423":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":46}},"424":{"start":{"line":1327,"column":0},"end":{"line":1330,"column":2}},"425":{"start":{"line":1328,"column":2},"end":{"line":1328,"column":50}},"426":{"start":{"line":1329,"column":2},"end":{"line":1329,"column":46}},"427":{"start":{"line":1343,"column":0},"end":{"line":1346,"column":2}},"428":{"start":{"line":1344,"column":2},"end":{"line":1344,"column":52}},"429":{"start":{"line":1345,"column":2},"end":{"line":1345,"column":46}},"430":{"start":{"line":1359,"column":0},"end":{"line":1362,"column":2}},"431":{"start":{"line":1360,"column":2},"end":{"line":1360,"column":51}},"432":{"start":{"line":1361,"column":2},"end":{"line":1361,"column":46}},"433":{"start":{"line":1370,"column":0},"end":{"line":1372,"column":2}},"434":{"start":{"line":1371,"column":2},"end":{"line":1371,"column":58}},"435":{"start":{"line":1380,"column":0},"end":{"line":1382,"column":2}},"436":{"start":{"line":1381,"column":2},"end":{"line":1381,"column":62}}},"branchMap":{"1":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":19}},{"start":{"line":50,"column":23},"end":{"line":50,"column":25}}]},"2":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":15},"end":{"line":54,"column":29}},{"start":{"line":54,"column":33},"end":{"line":60,"column":3}}]},"3":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":52},"end":{"line":66,"column":58}},{"start":{"line":66,"column":61},"end":{"line":66,"column":79}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":18},"end":{"line":68,"column":34}},{"start":{"line":68,"column":38},"end":{"line":68,"column":53}},{"start":{"line":68,"column":57},"end":{"line":68,"column":74}}]},"5":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":17},"end":{"line":69,"column":32}},{"start":{"line":69,"column":36},"end":{"line":69,"column":52}}]},"6":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":20},"end":{"line":70,"column":38}},{"start":{"line":70,"column":42},"end":{"line":70,"column":57}},{"start":{"line":70,"column":61},"end":{"line":70,"column":63}}]},"7":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":23},"end":{"line":74,"column":69}},{"start":{"line":74,"column":72},"end":{"line":74,"column":87}}]},"8":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"9":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":16}},{"start":{"line":141,"column":20},"end":{"line":141,"column":40}},{"start":{"line":141,"column":44},"end":{"line":141,"column":68}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"11":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":40},"end":{"line":149,"column":58}},{"start":{"line":149,"column":61},"end":{"line":149,"column":71}}]},"12":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"13":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":26}},{"start":{"line":179,"column":30},"end":{"line":179,"column":47}}]},"14":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":21},"end":{"line":182,"column":40}},{"start":{"line":182,"column":44},"end":{"line":182,"column":61}},{"start":{"line":182,"column":65},"end":{"line":182,"column":81}},{"start":{"line":182,"column":85},"end":{"line":182,"column":105}}]},"15":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":21},"end":{"line":184,"column":38}},{"start":{"line":184,"column":42},"end":{"line":184,"column":61}},{"start":{"line":184,"column":65},"end":{"line":184,"column":81}}]},"16":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":22},"end":{"line":185,"column":42}},{"start":{"line":185,"column":46},"end":{"line":185,"column":63}}]},"17":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"18":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":23}},{"start":{"line":186,"column":27},"end":{"line":186,"column":49}}]},"19":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":23},"end":{"line":190,"column":44}},{"start":{"line":190,"column":48},"end":{"line":190,"column":89}}]},"20":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"21":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"22":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"23":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"24":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"25":{"line":217,"type":"cond-expr","locations":[{"start":{"line":217,"column":42},"end":{"line":217,"column":48}},{"start":{"line":217,"column":51},"end":{"line":217,"column":59}}]},"26":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"27":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"28":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"29":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"30":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"31":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"32":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":19}},{"start":{"line":292,"column":23},"end":{"line":292,"column":25}}]},"33":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"34":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":4},"end":{"line":306,"column":4}},{"start":{"line":306,"column":4},"end":{"line":306,"column":4}}]},"35":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":24}},{"start":{"line":306,"column":28},"end":{"line":306,"column":65}}]},"36":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":6},"end":{"line":308,"column":6}},{"start":{"line":308,"column":6},"end":{"line":308,"column":6}}]},"37":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":435,"column":4}},{"start":{"line":435,"column":4},"end":{"line":435,"column":4}}]},"38":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":2},"end":{"line":488,"column":2}},{"start":{"line":488,"column":2},"end":{"line":488,"column":2}}]},"39":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"40":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":2},"end":{"line":509,"column":2}},{"start":{"line":509,"column":2},"end":{"line":509,"column":2}}]},"41":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":515,"column":2}},{"start":{"line":515,"column":2},"end":{"line":515,"column":2}}]},"42":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":2},"end":{"line":531,"column":2}},{"start":{"line":531,"column":2},"end":{"line":531,"column":2}}]},"43":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":2},"end":{"line":536,"column":2}},{"start":{"line":536,"column":2},"end":{"line":536,"column":2}}]},"44":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":2},"end":{"line":552,"column":2}},{"start":{"line":552,"column":2},"end":{"line":552,"column":2}}]},"45":{"line":556,"type":"binary-expr","locations":[{"start":{"line":556,"column":12},"end":{"line":556,"column":19}},{"start":{"line":556,"column":23},"end":{"line":556,"column":25}}]},"46":{"line":559,"type":"cond-expr","locations":[{"start":{"line":559,"column":18},"end":{"line":559,"column":21}},{"start":{"line":559,"column":24},"end":{"line":559,"column":31}}]},"47":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":2},"end":{"line":560,"column":2}},{"start":{"line":560,"column":2},"end":{"line":560,"column":2}}]},"48":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":6},"end":{"line":565,"column":6}},{"start":{"line":565,"column":6},"end":{"line":565,"column":6}}]},"49":{"line":570,"type":"cond-expr","locations":[{"start":{"line":570,"column":44},"end":{"line":570,"column":54}},{"start":{"line":570,"column":57},"end":{"line":570,"column":64}}]},"50":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":11},"end":{"line":570,"column":19}},{"start":{"line":570,"column":23},"end":{"line":570,"column":41}}]},"51":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":2},"end":{"line":603,"column":2}},{"start":{"line":603,"column":2},"end":{"line":603,"column":2}}]},"52":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":2},"end":{"line":610,"column":2}},{"start":{"line":610,"column":2},"end":{"line":610,"column":2}}]},"53":{"line":614,"type":"binary-expr","locations":[{"start":{"line":614,"column":12},"end":{"line":614,"column":19}},{"start":{"line":614,"column":23},"end":{"line":614,"column":25}}]},"54":{"line":617,"type":"cond-expr","locations":[{"start":{"line":617,"column":22},"end":{"line":617,"column":29}},{"start":{"line":617,"column":32},"end":{"line":617,"column":43}}]},"55":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":2},"end":{"line":618,"column":2}},{"start":{"line":618,"column":2},"end":{"line":618,"column":2}}]},"56":{"line":623,"type":"binary-expr","locations":[{"start":{"line":623,"column":24},"end":{"line":623,"column":28}},{"start":{"line":623,"column":33},"end":{"line":623,"column":50}},{"start":{"line":623,"column":54},"end":{"line":623,"column":76}},{"start":{"line":623,"column":81},"end":{"line":623,"column":92}}]},"57":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":6},"end":{"line":624,"column":6}},{"start":{"line":624,"column":6},"end":{"line":624,"column":6}}]},"58":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":29},"end":{"line":637,"column":44}},{"start":{"line":637,"column":48},"end":{"line":637,"column":50}}]},"59":{"line":643,"type":"cond-expr","locations":[{"start":{"line":643,"column":44},"end":{"line":643,"column":54}},{"start":{"line":643,"column":57},"end":{"line":643,"column":64}}]},"60":{"line":643,"type":"binary-expr","locations":[{"start":{"line":643,"column":11},"end":{"line":643,"column":19}},{"start":{"line":643,"column":23},"end":{"line":643,"column":41}}]},"61":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":2},"end":{"line":657,"column":2}},{"start":{"line":657,"column":2},"end":{"line":657,"column":2}}]},"62":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":2},"end":{"line":664,"column":2}},{"start":{"line":664,"column":2},"end":{"line":664,"column":2}}]},"63":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":12},"end":{"line":668,"column":19}},{"start":{"line":668,"column":23},"end":{"line":668,"column":25}}]},"64":{"line":671,"type":"cond-expr","locations":[{"start":{"line":671,"column":22},"end":{"line":671,"column":29}},{"start":{"line":671,"column":32},"end":{"line":671,"column":43}}]},"65":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":2},"end":{"line":672,"column":2}},{"start":{"line":672,"column":2},"end":{"line":672,"column":2}}]},"66":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":6},"end":{"line":678,"column":6}},{"start":{"line":678,"column":6},"end":{"line":678,"column":6}}]},"67":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":24},"end":{"line":681,"column":28}},{"start":{"line":681,"column":33},"end":{"line":681,"column":50}},{"start":{"line":681,"column":54},"end":{"line":681,"column":76}},{"start":{"line":681,"column":81},"end":{"line":681,"column":92}}]},"68":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":6},"end":{"line":682,"column":6}},{"start":{"line":682,"column":6},"end":{"line":682,"column":6}}]},"69":{"line":695,"type":"binary-expr","locations":[{"start":{"line":695,"column":29},"end":{"line":695,"column":44}},{"start":{"line":695,"column":48},"end":{"line":695,"column":50}}]},"70":{"line":703,"type":"cond-expr","locations":[{"start":{"line":703,"column":44},"end":{"line":703,"column":54}},{"start":{"line":703,"column":57},"end":{"line":703,"column":64}}]},"71":{"line":703,"type":"binary-expr","locations":[{"start":{"line":703,"column":11},"end":{"line":703,"column":19}},{"start":{"line":703,"column":23},"end":{"line":703,"column":41}}]},"72":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":2},"end":{"line":719,"column":2}},{"start":{"line":719,"column":2},"end":{"line":719,"column":2}}]},"73":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":2},"end":{"line":727,"column":2}},{"start":{"line":727,"column":2},"end":{"line":727,"column":2}}]},"74":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":12},"end":{"line":731,"column":19}},{"start":{"line":731,"column":23},"end":{"line":731,"column":25}}]},"75":{"line":734,"type":"cond-expr","locations":[{"start":{"line":734,"column":22},"end":{"line":734,"column":29}},{"start":{"line":734,"column":32},"end":{"line":734,"column":43}}]},"76":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":2},"end":{"line":735,"column":2}},{"start":{"line":735,"column":2},"end":{"line":735,"column":2}}]},"77":{"line":740,"type":"binary-expr","locations":[{"start":{"line":740,"column":24},"end":{"line":740,"column":28}},{"start":{"line":740,"column":33},"end":{"line":740,"column":50}},{"start":{"line":740,"column":54},"end":{"line":740,"column":76}},{"start":{"line":740,"column":81},"end":{"line":740,"column":92}}]},"78":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":6},"end":{"line":742,"column":6}},{"start":{"line":742,"column":6},"end":{"line":742,"column":6}}]},"79":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":29},"end":{"line":755,"column":44}},{"start":{"line":755,"column":48},"end":{"line":755,"column":50}}]},"80":{"line":763,"type":"cond-expr","locations":[{"start":{"line":763,"column":44},"end":{"line":763,"column":54}},{"start":{"line":763,"column":57},"end":{"line":763,"column":64}}]},"81":{"line":763,"type":"binary-expr","locations":[{"start":{"line":763,"column":11},"end":{"line":763,"column":19}},{"start":{"line":763,"column":23},"end":{"line":763,"column":41}}]},"82":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":2},"end":{"line":800,"column":2}},{"start":{"line":800,"column":2},"end":{"line":800,"column":2}}]},"83":{"line":804,"type":"binary-expr","locations":[{"start":{"line":804,"column":12},"end":{"line":804,"column":19}},{"start":{"line":804,"column":23},"end":{"line":804,"column":25}}]},"84":{"line":807,"type":"cond-expr","locations":[{"start":{"line":807,"column":18},"end":{"line":807,"column":21}},{"start":{"line":807,"column":24},"end":{"line":807,"column":31}}]},"85":{"line":808,"type":"if","locations":[{"start":{"line":808,"column":2},"end":{"line":808,"column":2}},{"start":{"line":808,"column":2},"end":{"line":808,"column":2}}]},"86":{"line":817,"type":"binary-expr","locations":[{"start":{"line":817,"column":17},"end":{"line":817,"column":32}},{"start":{"line":817,"column":36},"end":{"line":817,"column":40}}]},"87":{"line":823,"type":"cond-expr","locations":[{"start":{"line":823,"column":44},"end":{"line":823,"column":54}},{"start":{"line":823,"column":57},"end":{"line":823,"column":64}}]},"88":{"line":823,"type":"binary-expr","locations":[{"start":{"line":823,"column":11},"end":{"line":823,"column":19}},{"start":{"line":823,"column":23},"end":{"line":823,"column":41}}]},"89":{"line":891,"type":"binary-expr","locations":[{"start":{"line":891,"column":18},"end":{"line":891,"column":31}},{"start":{"line":891,"column":35},"end":{"line":891,"column":37}}]},"90":{"line":893,"type":"binary-expr","locations":[{"start":{"line":893,"column":4},"end":{"line":893,"column":23}},{"start":{"line":893,"column":27},"end":{"line":893,"column":50}}]},"91":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":2},"end":{"line":906,"column":2}},{"start":{"line":906,"column":2},"end":{"line":906,"column":2}}]},"92":{"line":910,"type":"binary-expr","locations":[{"start":{"line":910,"column":12},"end":{"line":910,"column":19}},{"start":{"line":910,"column":23},"end":{"line":910,"column":25}}]},"93":{"line":912,"type":"binary-expr","locations":[{"start":{"line":912,"column":14},"end":{"line":912,"column":27}},{"start":{"line":912,"column":31},"end":{"line":912,"column":48}}]},"94":{"line":914,"type":"cond-expr","locations":[{"start":{"line":915,"column":4},"end":{"line":915,"column":23}},{"start":{"line":916,"column":4},"end":{"line":916,"column":83}}]},"95":{"line":920,"type":"cond-expr","locations":[{"start":{"line":921,"column":6},"end":{"line":921,"column":46}},{"start":{"line":922,"column":6},"end":{"line":922,"column":15}}]},"96":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":2},"end":{"line":980,"column":2}},{"start":{"line":980,"column":2},"end":{"line":980,"column":2}}]},"97":{"line":980,"type":"binary-expr","locations":[{"start":{"line":980,"column":6},"end":{"line":980,"column":17}},{"start":{"line":980,"column":21},"end":{"line":980,"column":41}},{"start":{"line":980,"column":45},"end":{"line":980,"column":69}}]},"98":{"line":991,"type":"if","locations":[{"start":{"line":991,"column":6},"end":{"line":991,"column":6}},{"start":{"line":991,"column":6},"end":{"line":991,"column":6}}]},"99":{"line":1027,"type":"binary-expr","locations":[{"start":{"line":1027,"column":9},"end":{"line":1027,"column":12}},{"start":{"line":1027,"column":16},"end":{"line":1028,"column":73}}]},"100":{"line":1066,"type":"if","locations":[{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}},{"start":{"line":1066,"column":4},"end":{"line":1066,"column":4}}]},"101":{"line":1068,"type":"binary-expr","locations":[{"start":{"line":1068,"column":24},"end":{"line":1068,"column":25}},{"start":{"line":1068,"column":29},"end":{"line":1068,"column":33}}]},"102":{"line":1069,"type":"binary-expr","locations":[{"start":{"line":1069,"column":22},"end":{"line":1069,"column":33}},{"start":{"line":1069,"column":37},"end":{"line":1069,"column":50}}]},"103":{"line":1073,"type":"binary-expr","locations":[{"start":{"line":1073,"column":20},"end":{"line":1073,"column":21}},{"start":{"line":1073,"column":25},"end":{"line":1073,"column":29}}]},"104":{"line":1075,"type":"binary-expr","locations":[{"start":{"line":1075,"column":20},"end":{"line":1075,"column":21}},{"start":{"line":1075,"column":25},"end":{"line":1075,"column":29}}]},"105":{"line":1077,"type":"binary-expr","locations":[{"start":{"line":1077,"column":17},"end":{"line":1077,"column":18}},{"start":{"line":1077,"column":22},"end":{"line":1077,"column":26}}]},"106":{"line":1079,"type":"binary-expr","locations":[{"start":{"line":1079,"column":16},"end":{"line":1079,"column":17}},{"start":{"line":1079,"column":21},"end":{"line":1079,"column":25}}]},"107":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":2},"end":{"line":1106,"column":2}},{"start":{"line":1106,"column":2},"end":{"line":1106,"column":2}}]},"108":{"line":1170,"type":"if","locations":[{"start":{"line":1170,"column":4},"end":{"line":1170,"column":4}},{"start":{"line":1170,"column":4},"end":{"line":1170,"column":4}}]},"109":{"line":1172,"type":"binary-expr","locations":[{"start":{"line":1172,"column":24},"end":{"line":1172,"column":25}},{"start":{"line":1172,"column":29},"end":{"line":1172,"column":33}}]},"110":{"line":1173,"type":"binary-expr","locations":[{"start":{"line":1173,"column":22},"end":{"line":1173,"column":33}},{"start":{"line":1173,"column":37},"end":{"line":1173,"column":50}}]},"111":{"line":1198,"type":"if","locations":[{"start":{"line":1198,"column":2},"end":{"line":1198,"column":2}},{"start":{"line":1198,"column":2},"end":{"line":1198,"column":2}}]},"112":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":2},"end":{"line":1203,"column":2}},{"start":{"line":1203,"column":2},"end":{"line":1203,"column":2}}]},"113":{"line":1208,"type":"if","locations":[{"start":{"line":1208,"column":2},"end":{"line":1208,"column":2}},{"start":{"line":1208,"column":2},"end":{"line":1208,"column":2}}]},"114":{"line":1211,"type":"cond-expr","locations":[{"start":{"line":1211,"column":21},"end":{"line":1211,"column":52}},{"start":{"line":1211,"column":55},"end":{"line":1211,"column":70}}]},"115":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":4},"end":{"line":1215,"column":4}},{"start":{"line":1215,"column":4},"end":{"line":1215,"column":4}}]},"116":{"line":1241,"type":"if","locations":[{"start":{"line":1241,"column":2},"end":{"line":1241,"column":2}},{"start":{"line":1241,"column":2},"end":{"line":1241,"column":2}}]},"117":{"line":1245,"type":"if","locations":[{"start":{"line":1245,"column":2},"end":{"line":1245,"column":2}},{"start":{"line":1245,"column":2},"end":{"line":1245,"column":2}}]},"118":{"line":1249,"type":"if","locations":[{"start":{"line":1249,"column":2},"end":{"line":1249,"column":2}},{"start":{"line":1249,"column":2},"end":{"line":1249,"column":2}}]},"119":{"line":1253,"type":"if","locations":[{"start":{"line":1253,"column":2},"end":{"line":1253,"column":2}},{"start":{"line":1253,"column":2},"end":{"line":1253,"column":2}}]},"120":{"line":1257,"type":"if","locations":[{"start":{"line":1257,"column":2},"end":{"line":1257,"column":2}},{"start":{"line":1257,"column":2},"end":{"line":1257,"column":2}}]},"121":{"line":1261,"type":"if","locations":[{"start":{"line":1261,"column":2},"end":{"line":1261,"column":2}},{"start":{"line":1261,"column":2},"end":{"line":1261,"column":2}}]},"122":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}},{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}}]},"123":{"line":1293,"type":"if","locations":[{"start":{"line":1293,"column":2},"end":{"line":1293,"column":2}},{"start":{"line":1293,"column":2},"end":{"line":1293,"column":2}}]},"124":{"line":1297,"type":"if","locations":[{"start":{"line":1297,"column":2},"end":{"line":1297,"column":2}},{"start":{"line":1297,"column":2},"end":{"line":1297,"column":2}}]},"125":{"line":1301,"type":"if","locations":[{"start":{"line":1301,"column":2},"end":{"line":1301,"column":2}},{"start":{"line":1301,"column":2},"end":{"line":1301,"column":2}}]},"126":{"line":1305,"type":"if","locations":[{"start":{"line":1305,"column":2},"end":{"line":1305,"column":2}},{"start":{"line":1305,"column":2},"end":{"line":1305,"column":2}}]},"127":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":2},"end":{"line":1309,"column":2}},{"start":{"line":1309,"column":2},"end":{"line":1309,"column":2}}]}},"code":["/*global Buffer */","/**"," * @file Connection class to keep the API session information and manage requests"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var events  = require('events'),","    inherits = require('inherits'),","    _       = require('lodash/core'),","    Promise = require('./promise'),","    Logger  = require('./logger'),","    OAuth2  = require('./oauth2'),","    Query   = require('./query'),","    SObject = require('./sobject'),","    QuickAction = require('./quick-action'),","    HttpApi = require('./http-api'),","    Transport = require('./transport'),","    Process = require('./process'),","    Cache   = require('./cache');","","var defaults = {","  loginUrl: \"https://login.salesforce.com\",","  instanceUrl: \"\",","  version: \"37.0\"","};","","/**"," * Connection class to keep the API session information and manage requests"," *"," * @constructor"," * @extends events.EventEmitter"," * @param {Object} [options] - Connection options"," * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor"," * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)"," * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)"," * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call"," * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)"," * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)"," * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)"," * @param {String} [options.accessToken] - Salesforce OAuth2 access token"," * @param {String} [options.sessionId] - Salesforce session ID"," * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token"," * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)"," * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app."," * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual."," */","var Connection = module.exports = function(options) {","  options = options || {};","","  this._logger = new Logger(options.logLevel);","","  var oauth2 = options.oauth2 || {","    loginUrl : options.loginUrl,","    clientId : options.clientId,","    clientSecret : options.clientSecret,","    redirectUri : options.redirectUri,","    proxyUrl: options.proxyUrl","  };","","  /**","   * OAuth2 object","   * @member {OAuth2} Connection#oauth2","   */","  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);","","  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;","  this.version = options.version || defaults.version;","  this.maxRequest = options.maxRequest || this.maxRequest || 10;","","  /** @private */","  this._transport =","    options.proxyUrl ? new Transport.ProxyTransport(options.proxyUrl) : new Transport();","","  this.callOptions = options.callOptions;","","  /*","   * Fire connection:new event to notify jsforce plugin modules","   */","  var jsforce = require('./core');","  jsforce.emit('connection:new', this);","","  /**","   * Streaming API object","   * @member {Streaming} Connection#streaming","   */","  // this.streaming = new Streaming(this);","  /**","   * Bulk API object","   * @member {Bulk} Connection#bulk","   */","  // this.bulk = new Bulk(this);","  /**","   * Tooling API object","   * @member {Tooling} Connection#tooling","   */","  // this.tooling = new Tooling(this);","  /**","   * Analytics API object","   * @member {Analytics} Connection#analytics","   */","  // this.analytics = new Analytics(this);","  /**","   * Chatter API object","   * @member {Chatter} Connection#chatter","   */","  // this.chatter = new Chatter(this);","  /**","   * Metadata API object","   * @member {Metadata} Connection#metadata","   */","  // this.metadata = new Metadata(this);","","  /**","   * SOAP API object","   * @member {SoapApi} Connection#soap","   */","  // this.soap = new SoapApi(this);","","  /**","   * Apex REST API object","   * @member {Apex} Connection#apex","   */","  // this.apex = new Apex(this);","","  /**","   * @member {Process} Connection#process","   */","  this.process = new Process(this);","","  /**","   * Cache object for result","   * @member {Cache} Connection#cache","   */","  this.cache = new Cache();","","  // Allow to delegate connection refresh to outer function","  var self = this;","  var refreshFn = options.refreshFn;","  if (!refreshFn && this.oauth2.clientId && this.oauth2.clientSecret) {","    refreshFn = oauthRefreshFn;","  }","  if (refreshFn) {","    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);","  }","","  var cacheOptions = {","    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }","  };","  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);","  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);","  this.describeSObject$ = this.describe$;","  this.describeSObject = this.describe;","","  cacheOptions = { key: 'describeGlobal' };","  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);","  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);","","  this.initialize(options);","};","","inherits(Connection, events.EventEmitter);","","/**"," * Initialize connection."," *"," * @protected"," * @param {Object} options - Initialization options"," * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)"," * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)"," * @param {String} [options.accessToken] - Salesforce OAuth2 access token"," * @param {String} [options.sessionId] - Salesforce session ID"," * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token"," * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)"," * @param {UserInfo} [options.userInfo] - Logged in user information"," */","Connection.prototype.initialize = function(options) {","  if (!options.instanceUrl && options.serverUrl) {","    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');","  }","  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;","","  this.accessToken = options.sessionId || options.accessToken || this.accessToken;","  this.refreshToken = options.refreshToken || this.refreshToken;","  if (this.refreshToken && !this._refreshDelegate) {","    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");","  }","","  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);","  if (this.signedRequest) {","    this.accessToken = this.signedRequest.client.oauthToken;","    if (Transport.CanvasTransport.supported) {","      this._transport = new Transport.CanvasTransport(this.signedRequest);","    }","  }","","  if (options.userInfo) {","    this.userInfo = options.userInfo;","  }","","  this.limitInfo = {};","","  this.sobjects = {};","  this.cache.clear();","  this.cache.get('describeGlobal').on('value', _.bind(function(res) {","    if (res.result) {","      var types = _.map(res.result.sobjects, function(so) { return so.name; });","      types.forEach(this.sobject, this);","    }","  }, this));","","  if (this.tooling) {","    this.tooling.initialize();","  }","","  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";","","};","","/** @private **/","function oauthRefreshFn(conn, callback) {","  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {","    if (err) { return callback(err); }","    var userInfo = parseIdUrl(res.id);","    conn.initialize({","      instanceUrl : res.instance_url,","      accessToken : res.access_token,","      userInfo : userInfo","    });","    callback(null, res.access_token, res);","  });","}","","/** @private **/","function parseSignedRequest(sr) {","  if (_.isString(sr)) {","    if (sr[0] === '{') { // might be JSON","      return JSON.parse(sr);","    } else { // might be original base64-encoded signed request","      var msg = sr.split('.').pop(); // retrieve latter part","      var json = new Buffer(msg, 'base64').toString('utf-8');","      return JSON.parse(json);","    }","    return null;","  }","  return sr;","}","","","/** @private **/","Connection.prototype._baseUrl = function() {","  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');","};","","/**"," * Convert path to absolute url"," * @private"," */","Connection.prototype._normalizeUrl = function(url) {","  if (url[0] === '/') {","    if (url.indexOf('/services/') === 0) {","      return this.instanceUrl + url;","    } else {","      return this._baseUrl() + url;","    }","  } else {","    return url;","  }","};","","/**"," * Send REST API request with given HTTP request info, with connected session information."," *"," * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')"," * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')"," * , or relative path from version root ('/sobjects/Account/describe')."," *"," * @param {String|Object} request - HTTP request object or URL to GET request"," * @param {String} request.method - HTTP method URL to send HTTP request"," * @param {String} request.url - URL to send HTTP request"," * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)"," * @param {Object} [options] - HTTP API request options"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Connection.prototype.request = function(request, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = null;","  }","  options = options || {};","  var self = this;","","  // if request is simple string, regard it as url in GET method","  if (_.isString(request)) {","    request = { method: 'GET', url: request };","  }","  // if url is given in relative path, prepend base url or instance url before.","  request.url = this._normalizeUrl(request.url);","","  var httpApi = new HttpApi(this, options);","","  // log api usage and its quota","  httpApi.on('response', function(response) {","    if (response.headers && response.headers[\"sforce-limit-info\"]) {","      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);","      if (apiUsage) {","        self.limitInfo = {","          apiUsage: {","            used: parseInt(apiUsage[1], 10),","            limit: parseInt(apiUsage[2], 10)","          }","        };","      }","    }","  });","  return httpApi.request(request).thenCall(callback);","};","","/**"," * Send HTTP GET request"," *"," * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')"," * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')"," * , or relative path from version root ('/sobjects/Account/describe')."," *"," * @param {String} url - Endpoint URL to request HTTP GET"," * @param {Object} [options] - HTTP API request options"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Connection.prototype.requestGet = function(url, options, callback) {","  var request = {","    method: \"GET\",","    url: url","  };","  return this.request(request, options, callback);","};","","","/**"," * Send HTTP POST request with JSON body, with connected session information"," *"," * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')"," * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')"," * , or relative path from version root ('/sobjects/Account/describe')."," *"," * @param {String} url - Endpoint URL to request HTTP POST"," * @param {Object} body - Any JS object which can be serialized to JSON"," * @param {Object} [options] - HTTP API request options"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Connection.prototype.requestPost = function(url, body, options, callback) {","  var request = {","    method: \"POST\",","    url: url,","    body: JSON.stringify(body),","    headers: { \"content-type\": \"application/json\" }","  };","  return this.request(request, options, callback);","};","","/**"," * Send HTTP PUT request with JSON body, with connected session information"," *"," * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')"," * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')"," * , or relative path from version root ('/sobjects/Account/describe')."," *"," * @param {String} url - Endpoint URL to request HTTP PUT"," * @param {Object} body - Any JS object which can be serialized to JSON"," * @param {Object} [options] - HTTP API request options"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Connection.prototype.requestPut = function(url, body, options, callback) {","  var request = {","    method: \"PUT\",","    url: url,","    body: JSON.stringify(body),","    headers: { \"content-type\": \"application/json\" }","  };","  return this.request(request, options, callback);","};","","/**"," * Send HTTP PATCH request with JSON body"," *"," * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')"," * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')"," * , or relative path from version root ('/sobjects/Account/describe')."," *"," * @param {String} url - Endpoint URL to request HTTP PATCH"," * @param {Object} body - Any JS object which can be serialized to JSON"," * @param {Object} [options] - HTTP API request options"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Connection.prototype.requestPatch = function(url, body, options, callback) {","  var request = {","    method: \"PATCH\",","    url: url,","    body: JSON.stringify(body),","    headers: { \"content-type\": \"application/json\" }","  };","  return this.request(request, options, callback);","};","","/**"," * Send HTTP DELETE request"," *"," * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')"," * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')"," * , or relative path from version root ('/sobjects/Account/describe')."," *"," * @param {String} url - Endpoint URL to request HTTP DELETE"," * @param {Object} [options] - HTTP API request options"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Connection.prototype.requestDelete = function(url, options, callback) {","  var request = {","    method: \"DELETE\",","    url: url","  };","  return this.request(request, options, callback);","};","","","/** @private */","function formatDate(date) {","  function pad(number) {","    if (number < 10) {","      return '0' + number;","    }","    return number;","  }","","  return date.getUTCFullYear() +","    '-' + pad(date.getUTCMonth() + 1) +","    '-' + pad(date.getUTCDate()) +","    'T' + pad(date.getUTCHours()) +","    ':' + pad(date.getUTCMinutes()) +","    ':' + pad(date.getUTCSeconds()) +","    '+00:00';","}","","","/** @private **/","function parseIdUrl(idUrl) {","  var idUrls = idUrl.split(\"/\");","  var userId = idUrls.pop(), orgId = idUrls.pop();","  return {","    id: userId,","    organizationId: orgId,","    url: idUrl","  };","}","","/**"," * @callback Callback"," * @type {Function}"," * @param {Error} err - Callback error"," * @param {T} response - Callback response"," * @template T"," */","","/**"," * @typedef {Object} QueryResult"," * @prop {Boolean} done - Flag if the query is fetched all records or not"," * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)"," * @prop {Number} totalSize - Total size for query"," * @prop {Array.<Record>} [records] - Array of records fetched"," */","","/**"," * Execute query by using SOQL"," *"," * @param {String} soql - SOQL string"," * @param {Object} [options] - Query options"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," * @param {Callback.<QueryResult>} [callback] - Callback function"," * @returns {Query.<QueryResult>}"," */","Connection.prototype.query = function(soql, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  var query = new Query(this, soql, options);","  if (callback) {","    query.run(callback);","  }","  return query;","};","","/**"," * Execute query by using SOQL, including deleted records"," *"," * @param {String} soql - SOQL string"," * @param {Object} [options] - Query options"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," * @param {Callback.<QueryResult>} [callback] - Callback function"," * @returns {Query.<QueryResult>}"," */","Connection.prototype.queryAll = function(soql, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  var query = new Query(this, soql, options);","  query.scanAll(true);","  if (callback) {","    query.run(callback);","  }","  return query;","};","","/**"," * Query next record set by using query locator"," *"," * @param {String} locator - Next record set locator"," * @param {Object} [options] - Query options"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," * @param {Callback.<QueryResult>} [callback] - Callback function"," * @returns {Query.<QueryResult>}"," */","Connection.prototype.queryMore = function(locator, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  var query = new Query(this, { locator: locator }, options);","  if (callback) {","    query.run(callback);","  }","  return query;","};","","/**"," * Retrieve specified records"," *"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A record ID or array of record IDs"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function"," * @returns {Promise.<Record|Array.<Record>>}"," */","Connection.prototype.retrieve = function(type, ids, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var self = this;","  var isArray = _.isArray(ids);","  ids = isArray ? ids : [ ids ];","  if (ids.length > self.maxRequest) {","    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);","  }","  return Promise.all(","    _.map(ids, function(id) {","      if (!id) { return Promise.reject(new Error('Invalid record ID. Specify valid record ID value')).thenCall(callback); }","      var url = [ self._baseUrl(), \"sobjects\", type, id ].join('/');","      return self.request({ method: 'GET', url: url, headers: options.headers });","    })","  ).then(function(results) {","    return !isArray && _.isArray(results) ? results[0] : results;","  }).thenCall(callback);","};","","","/**"," * @typedef RecordResult"," * @prop {Boolean} success - The result is succeessful or not"," * @prop {String} [id] - Record ID"," * @prop {Array.<String>} [errors] - Errors (available when success = false)"," */","","/**"," * Synonym of Connection#create()"," *"," * @method Connection#insert"," * @param {String} type - SObject Type"," * @param {Object|Array.<Object>} records - A record or array of records to create"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Create records"," *"," * @method Connection#create"," * @param {String} type - SObject Type"," * @param {Record|Array.<Record>} records - A record or array of records to create"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","Connection.prototype.insert =","Connection.prototype.create = function(type, records, options, callback) {","  if (!_.isString(type)) {","    // reverse order","    callback = options;","    options = records;","    records = type;","    type = null;","  }","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var self = this;","  var isArray = _.isArray(records);","  records = isArray ? records : [ records ];","  if (records.length > self.maxRequest) {","    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);","  }","  return Promise.all(","    _.map(records, function(record) {","      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;","      if (!sobjectType) {","        throw new Error('No SObject Type defined in record');","      }","      record = _.clone(record);","      delete record.Id;","      delete record.type;","      delete record.attributes;","","      var url = [ self._baseUrl(), \"sobjects\", sobjectType ].join('/');","      return self.request({","        method : 'POST',","        url : url,","        body : JSON.stringify(record),","        headers : _.defaults(options.headers || {}, {","          \"Content-Type\" : \"application/json\"","        })","      });","    })","  ).then(function(results) {","    return !isArray && _.isArray(results) ? results[0] : results;","  }).thenCall(callback);","};","","/**"," * Update records"," *"," * @param {String} type - SObject Type"," * @param {Record|Array.<Record>} records - A record or array of records to update"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","Connection.prototype.update = function(type, records, options, callback) {","  if (!_.isString(type)) {","    // reverse order","    callback = options;","    options = records;","    records = type;","    type = null;","  }","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var self = this;","  var isArray = _.isArray(records);","  records = isArray ? records : [ records ];","  if (records.length > self.maxRequest) {","    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);","  }","  return Promise.all(","    _.map(records, function(record) {","      var id = record.Id;","      if (!id) {","        throw new Error('Record id is not found in record.');","      }","      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;","      if (!sobjectType) {","        throw new Error('No SObject Type defined in record');","      }","      record = _.clone(record);","      delete record.Id;","      delete record.type;","      delete record.attributes;","","      var url = [ self._baseUrl(), \"sobjects\", sobjectType, id ].join('/');","      return self.request({","        method : 'PATCH',","        url : url,","        body : JSON.stringify(record),","        headers : _.defaults(options.headers || {}, {","          \"Content-Type\" : \"application/json\"","        })","      }, {","        noContentResponse: { id : id, success : true, errors : [] }","      });","    })","  ).then(function(results) {","    return !isArray && _.isArray(results) ? results[0] : results;","  }).thenCall(callback);","};","","/**"," * Upsert records"," *"," * @param {String} type - SObject Type"," * @param {Record|Array.<Record>} records - Record or array of records to upsert"," * @param {String} extIdField - External ID field name"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","Connection.prototype.upsert = function(type, records, extIdField, options, callback) {","  // You can omit \"type\" argument, when the record includes type information.","  if (!_.isString(type)) {","    // reverse order","    callback = options;","    options = extIdField;","    extIdField = records;","    records = type;","    type = null;","  }","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var self = this;","  var isArray = _.isArray(records);","  records = isArray ? records : [ records ];","  if (records.length > self.maxRequest) {","    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);","  }","  return Promise.all(","    _.map(records, function(record) {","      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;","      var extId = record[extIdField];","      if (!extId) {","        return Promise.reject(new Error('External ID is not defined in the record'));","      }","      record = _.clone(record);","      delete record[extIdField];","      delete record.type;","      delete record.attributes;","","      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');","      return self.request({","        method : 'PATCH',","        url : url,","        body : JSON.stringify(record),","        headers : _.defaults(options.headers || {}, {","          \"Content-Type\" : \"application/json\"","        })","      }, {","        noContentResponse: { success : true, errors : [] }","      });","    })","  ).then(function(results) {","    return !isArray && _.isArray(results) ? results[0] : results;","  }).thenCall(callback);","};","","/**"," * Synonym of Connection#destroy()"," *"," * @method Connection#delete"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Synonym of Connection#destroy()"," *"," * @method Connection#del"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Delete records"," *"," * @method Connection#destroy"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","Connection.prototype[\"delete\"] =","Connection.prototype.del =","Connection.prototype.destroy = function(type, ids, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var self = this;","  var isArray = _.isArray(ids);","  ids = isArray ? ids : [ ids ];","  if (ids.length > self.maxRequest) {","    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);","  }","  return Promise.all(","    _.map(ids, function(id) {","      var url = [ self._baseUrl(), \"sobjects\", type, id ].join('/');","      return self.request({","        method : 'DELETE',","        url : url,","        headers: options.headers || null","      }, {","        noContentResponse: { id : id, success : true, errors : [] }","      });","    })","  ).then(function(results) {","    return !isArray && _.isArray(results) ? results[0] : results;","  }).thenCall(callback);","};","","/**"," * Execute search by SOSL"," *"," * @param {String} sosl - SOSL string"," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<RecordResult>>}"," */","Connection.prototype.search = function(sosl, callback) {","  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);","  return this.request(url).thenCall(callback);","};","","/**"," * Result returned by describeSObject call"," *"," * @typedef {Object} DescribeSObjectResult"," */","/**"," * Synonym of Connection#describe()"," *"," * @method Connection#describeSObject"," * @param {String} type - SObject Type"," * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function"," * @returns {Promise.<DescribeSObjectResult>}"," */","/**"," * Describe SObject metadata"," *"," * @method Connection#describe"," * @param {String} type - SObject Type"," * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function"," * @returns {Promise.<DescribeSObjectResult>}"," */","Connection.prototype.describe =","Connection.prototype.describeSObject = function(type, callback) {","  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');","  return this.request(url).thenCall(callback);","};","","","/**"," * Result returned by describeGlobal call"," *"," * @typedef {Object} DescribeGlobalResult"," */","/**"," * Describe global SObjects"," *"," * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function"," * @returns {Promise.<DescribeGlobalResult>}"," */","Connection.prototype.describeGlobal = function(callback) {","  var url = this._baseUrl() + \"/sobjects\";","  return this.request(url).thenCall(callback);","};","","","/**"," * Get SObject instance"," *"," * @param {String} type - SObject Type"," * @returns {SObject}"," */","Connection.prototype.sobject = function(type) {","  this.sobjects = this.sobjects || {};","  var sobject = this.sobjects[type] =","    this.sobjects[type] || new SObject(this, type);","  return sobject;","};","","/**"," * Get identity information of current user"," *"," * @param {Object} [options] - Identity call options"," * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request"," * @param {Callback.<IdentityInfo>} [callback] - Callback function"," * @returns {Promise.<IdentityInfo>}"," */","Connection.prototype.identity = function(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var self = this;","  var idUrl = this.userInfo && this.userInfo.url;","  return Promise.resolve(","    idUrl ?","    { identity: idUrl } :","    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })","  ).then(function(res) {","    var url = res.identity;","    url += '?format=json&oauth_token=' + encodeURIComponent(self.accessToken);","    var transport = Transport.JsonpTransport.supported ?","      new Transport.JsonpTransport('callback') :","      undefined;","    return self.request({ method: 'GET', url: url }, { transport: transport });","  }).then(function(res) {","    self.userInfo = {","      id: res.user_id,","      organizationId: res.organization_id,","      url: res.id","    };","    return res;","  }).thenCall(callback);","};","","/**"," * @typedef UserInfo"," * @prop {String} id - User ID"," * @prop {String} organizationId - Organization ID"," * @prop {String} url - Identity URL of the user"," */","","/**"," * Authorize (using oauth2 web server flow)"," *"," * @param {String} code - Authorization code"," * @param {Callback.<UserInfo>} [callback] - Callback function"," * @returns {Promise.<UserInfo>}"," */","Connection.prototype.authorize = function(code, callback) {","  var self = this;","  var logger = this._logger;","","  return this.oauth2.requestToken(code).then(function(res) {","    logger.debug(\"OAuth2 token response = \" + JSON.stringify(res));","    var userInfo = parseIdUrl(res.id);","    self.initialize({","      instanceUrl : res.instance_url,","      accessToken : res.access_token,","      refreshToken : res.refresh_token,","      userInfo: userInfo","    });","    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);","    return userInfo;","","  }).thenCall(callback);","","};","","","/**"," * Login to Salesforce"," *"," * @param {String} username - Salesforce username"," * @param {String} password - Salesforce password (and security token, if required)"," * @param {Callback.<UserInfo>} [callback] - Callback function"," * @returns {Promise.<UserInfo>}"," */","Connection.prototype.login = function(username, password, callback) {","  // register refreshDelegate for session expiration","  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));","  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {","    return this.loginByOAuth2(username, password, callback);","  } else {","    return this.loginBySoap(username, password, callback);","  }","};","","/** @private **/","function createUsernamePasswordRefreshFn(username, password) {","  return function(conn, callback) {","    conn.login(username, password, function(err) {","      if (err) { return callback(err); }","      callback(null, conn.accessToken);","    });","  };","}","","/**"," * Login by OAuth2 username & password flow"," *"," * @param {String} username - Salesforce username"," * @param {String} password - Salesforce password (and security token, if required)"," * @param {Callback.<UserInfo>} [callback] - Callback function"," * @returns {Promise.<UserInfo>}"," */","Connection.prototype.loginByOAuth2 = function(username, password, callback) {","  var self = this;","  var logger = this._logger;","  return this.oauth2.authenticate(username, password).then(function(res) {","    logger.debug(\"OAuth2 token response = \" + JSON.stringify(res));","    var userInfo = parseIdUrl(res.id);","    self.initialize({","      instanceUrl : res.instance_url,","      accessToken : res.access_token,","      userInfo: userInfo","    });","    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);","    return userInfo;","","  }).thenCall(callback);","","};","","/**"," * @private"," */","function esc(str) {","  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')","                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');","}","","/**"," * Login by SOAP web service API"," *"," * @param {String} username - Salesforce username"," * @param {String} password - Salesforce password (and security token, if required)"," * @param {Callback.<UserInfo>} [callback] - Callback function"," * @returns {Promise.<UserInfo>}"," */","Connection.prototype.loginBySoap = function(username, password, callback) {","  var self = this;","  var logger = this._logger;","  var body = [","    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',","      '<se:Header/>',","      '<se:Body>',","        '<login xmlns=\"urn:partner.soap.sforce.com\">',","          '<username>' + esc(username) + '</username>',","          '<password>' + esc(password) + '</password>',","        '</login>',","      '</se:Body>',","    '</se:Envelope>'","  ].join('');","","  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');","","  return this._transport.httpRequest({","    method : 'POST',","    url : soapLoginEndpoint,","    body : body,","    headers : {","      \"Content-Type\" : \"text/xml\",","      \"SOAPAction\" : '\"\"'","    }","  }).then(function(response) {","    var m;","    if (response.statusCode >= 400) {","      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);","      var faultstring = m && m[1];","      throw new Error(faultstring || response.body);","    }","    logger.debug(\"SOAP response = \" + response.body);","    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);","    var serverUrl = m && m[1];","    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);","    var sessionId = m && m[1];","    m = response.body.match(/<userId>([^<]+)<\\/userId>/);","    var userId = m && m[1];","    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);","    var orgId = m && m[1];","    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');","    idUrl += \"/id/\" + orgId + \"/\" + userId;","    var userInfo = {","      id: userId,","      organizationId: orgId,","      url: idUrl","    };","    self.initialize({","      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),","      sessionId: sessionId,","      userInfo: userInfo","    });","    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);","    return userInfo;","","  }).thenCall(callback);","","};","","/**"," * Logout the current session"," *"," * @param {Callback.<undefined>} [callback] - Callback function"," * @returns {Promise.<undefined>}"," */","Connection.prototype.logout = function(callback) {","  if (this._sessionType === \"oauth2\") {","    return this.logoutByOAuth2(callback);","  } else {","    return this.logoutBySoap(callback);","  }","};","","/**"," * Logout the current session by revoking access token via OAuth2 session revoke"," *"," * @param {Callback.<undefined>} [callback] - Callback function"," * @returns {Promise.<undefined>}"," */","Connection.prototype.logoutByOAuth2 = function(callback) {","  var self = this;","  var logger = this._logger;","","  return this.oauth2.revokeToken(this.accessToken).then(function() {","    // Destroy the session bound to this connection","    self.accessToken = null;","    self.userInfo = null;","    self.refreshToken = null;","    self.instanceUrl = null;","    self.cache.clear();","","    // nothing useful returned by logout API, just return","    return undefined;","  }).thenCall(callback);","};","","","/**"," * Logout the session by using SOAP web service API"," *"," * @param {Callback.<undefined>} [callback] - Callback function"," * @returns {Promise.<undefined>}"," */","Connection.prototype.logoutBySoap = function(callback) {","  var self = this;","  var logger = this._logger;","","  var body = [","    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',","      '<se:Header>',","        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',","          '<sessionId>' + esc(this.accessToken) + '</sessionId>',","        '</SessionHeader>',","      '</se:Header>',","      '<se:Body>',","        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',","      '</se:Body>',","    '</se:Envelope>'","  ].join('');","","  return this._transport.httpRequest({","    method : 'POST',","    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),","    body : body,","    headers : {","      \"Content-Type\" : \"text/xml\",","      \"SOAPAction\" : '\"\"'","    }","  }).then(function(response) {","    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);","    if (response.statusCode >= 400) {","      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);","      var faultstring = m && m[1];","      throw new Error(faultstring || response.body);","    }","","    // Destroy the session bound to this connection","    self.accessToken = null;","    self.userInfo = null;","    self.refreshToken = null;","    self.instanceUrl = null;","    self.cache.clear();","","    // nothing useful returned by logout API, just return","    return undefined;","","  }).thenCall(callback);","};","","/**"," * List recently viewed records"," *"," * @param {String} [type] - SObject type"," * @param {Number} [limit] - Limit num to fetch"," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<RecordResult>>}"," */","Connection.prototype.recent = function(type, limit, callback) {","  if (!_.isString(type)) {","    callback = limit;","    limit = type;","    type = undefined;","  }","  if (!_.isNumber(limit)) {","    callback = limit;","    limit = undefined;","  }","  var url;","  if (type) {","    url = [ this._baseUrl(), \"sobjects\", type ].join('/');","    return this.request(url).then(function(res) {","      return limit ? res.recentItems.slice(0, limit) : res.recentItems;","    }).thenCall(callback);","  } else {","    url = this._baseUrl() + \"/recent\";","    if (limit) {","      url += \"?limit=\" + limit;","    }","    return this.request(url).thenCall(callback);","  }","","};","","/**"," * @typedef {Object} UpdatedRecordsInfo"," * @prop {String} latestDateCovered - The timestamp of the last date covered."," * @prop {Array.<String>} ids - Updated record IDs."," */","","/**"," * Retrieve updated records"," *"," * @param {String} type - SObject Type"," * @param {String|Date} start - start date or string representing the start of the interval"," * @param {String|Date} end - start date or string representing the end of the interval must be > start"," * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function"," * @returns {Promise.<UpdatedRecordsInfo>}"," */","Connection.prototype.updated = function (type, start, end, callback) {","  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');","","  if (typeof start === 'string') {","    start = new Date(start);","  }","","  if (start instanceof Date) {","    start = formatDate(start);","  }","","  if (start) {","    url += \"?start=\" + encodeURIComponent(start);","  }","","  if (typeof end === 'string') {","    end = new Date(end);","  }","","  if (end instanceof Date) {","    end = formatDate(end);","  }","","  if (end) {","    url += \"&end=\" + encodeURIComponent(end);","  }","","  return this.request(url).thenCall(callback);","};","","/**"," * @typedef {Object} DeletedRecordsInfo"," * @prop {String} earliestDateAvailable - The timestamp of the earliest date available"," * @prop {String} latestDateCovered - The timestamp of the last date covered"," * @prop {Array.<Object>} deletedRecords - Updated records"," * @prop {String} deletedRecords.id - Record ID"," * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted"," */","","/**"," * Retrieve deleted records"," *"," * @param {String} type - SObject Type"," * @param {String|Date} start - start date or string representing the start of the interval"," * @param {String|Date} end - start date or string representing the end of the interval"," * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function"," * @returns {Promise.<DeletedRecordsInfo>}"," */","Connection.prototype.deleted = function (type, start, end, callback) {","  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');","","  if (typeof start === 'string') {","    start = new Date(start);","  }","","  if (start instanceof Date) {","    start = formatDate(start);","  }","","  if (start) {","    url += \"?start=\" + encodeURIComponent(start);","  }","","  if (typeof end === 'string') {","    end = new Date(end);","  }","","  if (end instanceof Date) {","    end = formatDate(end);","  }","","  if (end) {","    url += \"&end=\" + encodeURIComponent(end);","  }","","  return this.request(url).thenCall(callback);","};","","","/**"," * @typedef {Object} TabsInfo - See the API document for detail structure"," */","","/**"," * Returns a list of all tabs"," *"," * @param {Callback.<TabsInfo>} [callback] - Callback function"," * @returns {Promise.<TabsInfo>}"," */","Connection.prototype.tabs = function(callback) {","  var url = [ this._baseUrl(), \"tabs\" ].join('/');","  return this.request(url).thenCall(callback);","};","","","/**"," * @typedef {Object} LimitsInfo - See the API document for detail structure"," */","","/**"," * Returns curren system limit in the organization"," *"," * @param {Callback.<LimitsInfo>} [callback] - Callback function"," * @returns {Promise.<LimitsInfo>}"," */","Connection.prototype.limits = function(callback) {","  var url = [ this._baseUrl(), \"limits\" ].join('/');","  return this.request(url).thenCall(callback);","};","","","/**"," * @typedef {Object} ThemeInfo - See the API document for detail structure"," */","","/**"," * Returns a theme info"," *"," * @param {Callback.<ThemeInfo>} [callback] - Callback function"," * @returns {Promise.<ThemeInfo>}"," */","Connection.prototype.theme = function(callback) {","  var url = [ this._baseUrl(), \"theme\" ].join('/');","  return this.request(url).thenCall(callback);","};","","/**"," * Returns all registered global quick actions"," *"," * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}"," */","Connection.prototype.quickActions = function(callback) {","  return this.request(\"/quickActions\").thenCall(callback);","};","","/**"," * Get reference for specified global quick aciton"," *"," * @param {String} actionName - Name of the global quick action"," * @returns {QuickAction}"," */","Connection.prototype.quickAction = function(actionName) {","  return new QuickAction(this, \"/quickActions/\" + actionName);","};",""],"l":{"9":1,"23":1,"49":1,"50":0,"52":0,"54":0,"66":0,"68":0,"69":0,"70":0,"73":0,"76":0,"81":0,"82":0,"130":0,"136":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"158":0,"160":0,"163":1,"178":1,"179":0,"180":0,"182":0,"184":0,"185":0,"186":0,"187":0,"190":0,"191":0,"192":0,"193":0,"194":0,"198":0,"199":0,"202":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"213":0,"214":0,"217":0,"222":1,"223":0,"224":0,"225":0,"226":0,"231":0,"236":1,"237":0,"238":0,"239":0,"241":0,"242":0,"243":0,"245":0,"247":0,"252":1,"253":0,"260":1,"261":0,"262":0,"263":0,"265":0,"268":0,"287":1,"288":0,"289":0,"290":0,"292":0,"293":0,"296":0,"297":0,"300":0,"302":0,"305":0,"306":0,"307":0,"308":0,"309":0,"318":0,"333":1,"334":0,"338":0,"355":1,"356":0,"362":0,"378":1,"379":0,"385":0,"401":1,"402":0,"408":0,"423":1,"424":0,"428":0,"433":1,"434":1,"435":0,"436":0,"438":0,"441":0,"452":1,"453":0,"454":0,"455":0,"487":1,"488":0,"489":0,"490":0,"492":0,"493":0,"494":0,"496":0,"508":1,"509":0,"510":0,"511":0,"513":0,"514":0,"515":0,"516":0,"518":0,"530":1,"531":0,"532":0,"533":0,"535":0,"536":0,"537":0,"539":0,"551":1,"552":0,"553":0,"554":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"563":0,"565":0,"566":0,"567":0,"570":0,"601":1,"603":0,"605":0,"606":0,"607":0,"608":0,"610":0,"611":0,"612":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"621":0,"623":0,"624":0,"625":0,"627":0,"628":0,"629":0,"630":0,"632":0,"633":0,"643":0,"656":1,"657":0,"659":0,"660":0,"661":0,"662":0,"664":0,"665":0,"666":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"675":0,"677":0,"678":0,"679":0,"681":0,"682":0,"683":0,"685":0,"686":0,"687":0,"688":0,"690":0,"691":0,"703":0,"717":1,"719":0,"721":0,"722":0,"723":0,"724":0,"725":0,"727":0,"728":0,"729":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"738":0,"740":0,"741":0,"742":0,"743":0,"745":0,"746":0,"747":0,"748":0,"750":0,"751":0,"763":0,"797":1,"800":0,"801":0,"802":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"811":0,"813":0,"814":0,"823":0,"834":1,"835":0,"836":0,"860":1,"862":0,"863":0,"878":1,"879":0,"880":0,"890":1,"891":0,"892":0,"894":0,"905":1,"906":0,"907":0,"908":0,"910":0,"911":0,"912":0,"913":0,"918":0,"919":0,"920":0,"923":0,"925":0,"930":0,"948":1,"949":0,"950":0,"952":0,"953":0,"954":0,"955":0,"961":0,"962":0,"977":1,"979":0,"980":0,"981":0,"983":0,"988":1,"989":0,"990":0,"991":0,"992":0,"1005":1,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1016":0,"1017":0,"1026":1,"1027":0,"1039":1,"1040":0,"1041":0,"1042":0,"1054":0,"1056":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1087":0,"1092":0,"1093":0,"1105":1,"1106":0,"1107":0,"1109":0,"1119":1,"1120":0,"1121":0,"1123":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1132":0,"1143":1,"1144":0,"1145":0,"1147":0,"1160":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1184":0,"1197":1,"1198":0,"1199":0,"1200":0,"1201":0,"1203":0,"1204":0,"1205":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1214":0,"1215":0,"1216":0,"1218":0,"1238":1,"1239":0,"1241":0,"1242":0,"1245":0,"1246":0,"1249":0,"1250":0,"1253":0,"1254":0,"1257":0,"1258":0,"1261":0,"1262":0,"1265":0,"1286":1,"1287":0,"1289":0,"1290":0,"1293":0,"1294":0,"1297":0,"1298":0,"1301":0,"1302":0,"1305":0,"1306":0,"1309":0,"1310":0,"1313":0,"1327":1,"1328":0,"1329":0,"1343":1,"1344":0,"1345":0,"1359":1,"1360":0,"1361":0,"1370":1,"1371":0,"1380":1,"1381":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/promise.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":68,"loc":{"start":{"line":68,"column":29},"end":{"line":68,"column":48}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":14},"end":{"line":70,"column":28}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":23},"end":{"line":71,"column":34}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":7},"end":{"line":74,"column":21}}},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":23},"end":{"line":75,"column":34}}},"6":{"name":"(anonymous_6)","line":131,"loc":{"start":{"line":131,"column":16},"end":{"line":131,"column":27}}},"7":{"name":"(anonymous_7)","line":141,"loc":{"start":{"line":141,"column":15},"end":{"line":141,"column":26}}},"8":{"name":"(anonymous_8)","line":143,"loc":{"start":{"line":143,"column":29},"end":{"line":143,"column":55}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":49,"column":0},"end":{"line":49,"column":52}},"3":{"start":{"line":68,"column":0},"end":{"line":81,"column":2}},"4":{"start":{"line":69,"column":2},"end":{"line":79,"column":3}},"5":{"start":{"line":70,"column":4},"end":{"line":78,"column":7}},"6":{"start":{"line":71,"column":6},"end":{"line":73,"column":9}},"7":{"start":{"line":72,"column":8},"end":{"line":72,"column":28}},"8":{"start":{"line":75,"column":6},"end":{"line":77,"column":9}},"9":{"start":{"line":76,"column":8},"end":{"line":76,"column":22}},"10":{"start":{"line":80,"column":2},"end":{"line":80,"column":14}},"11":{"start":{"line":98,"column":0},"end":{"line":98,"column":52}},"12":{"start":{"line":131,"column":0},"end":{"line":133,"column":2}},"13":{"start":{"line":132,"column":2},"end":{"line":132,"column":24}},"14":{"start":{"line":141,"column":0},"end":{"line":147,"column":2}},"15":{"start":{"line":142,"column":2},"end":{"line":142,"column":18}},"16":{"start":{"line":143,"column":2},"end":{"line":146,"column":5}},"17":{"start":{"line":144,"column":4},"end":{"line":144,"column":27}},"18":{"start":{"line":145,"column":4},"end":{"line":145,"column":25}},"19":{"start":{"line":164,"column":0},"end":{"line":164,"column":25}}},"branchMap":{"1":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]}},"code":["/*global process*/","","'use strict';","","var _ = require('lodash/core');","","/**"," * @callback ResolvedCallback"," * @param {T} result - Resolved value"," * @returns {S}"," * @template T,S"," */","","/**"," * @callback RejectedCallback"," * @param {Error} reason - Rejected reason"," * @returns {S}"," * @template S"," */","","/**"," * @callback ResolveCallback"," * @param {T} result"," * @template T"," */","","/**"," * @callback RejectedCallback"," * @param {Error} reason - Rejected reason"," * @returns {S}"," * @template S"," */","","/**"," * @callback PromiseCallback"," * @param {ResolveCallback.<T>} resolve"," * @param {RejectCallback} reject"," * @template T"," */","","/**"," * Promise class with a little extension"," *"," * @class Promise"," * @constructor"," * @param {PromiseCallback.<T>}"," * @template T"," */","var Promise = require('promise/lib/es6-extensions');","","/**"," * The \"then\" method from the Promises/A+ specification"," *"," * @method Promise#then"," * @param {FulfilledCallback.<T, S1>} [onFulfilled]"," * @param {RejectedCallback.<S2>} [onRejected]"," * @returns {Promise.<S1|S2>}"," */","","/**"," * Call \"then\" using given node-style callback function."," * This is basically same as \"nodeify\" except that it always return the original promise"," *"," * @method Promise#thenCall"," * @param {Callback.<T>} [callback] - Callback function"," * @returns {Promise}"," */","Promise.prototype.thenCall = function(callback) {","  if (_.isFunction(callback)) {","    this.then(function(res) {","      process.nextTick(function() {","        callback(null, res);","      });","    }, function(err) {","      process.nextTick(function() {","        callback(err);","      });","    });","  }","  return this;","};","","/**"," * A sugar method, equivalent to promise.then(undefined, onRejected)."," *"," * @method Promise#catch"," * @param {RejectedCallback.<S>} onRejected"," * @returns {Promise.<S>}"," */","","/**"," * Synonym of Promise#catch"," *"," * @method Promise#fail"," * @param {RejectedCallback.<S>} onRejected"," * @returns {Promise.<S>}"," */","Promise.prototype.fail = Promise.prototype['catch'];","","/**"," * Returns resolving promise with given reason"," *"," * @method Promise.resolve"," * @param {*} result - Resolved value"," * @returns {Promise}"," */","","/**"," * Returns rejecting promise with given reason"," *"," * @method Promise.reject"," * @param {Error} reason - Rejecting reason"," * @returns {Promise}"," */","","/**"," * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,"," * or is rejected with the same rejection reason as the first promise to be rejected."," *"," * @method Promise.all"," * @param {Array.<Promise.<*>|*>} promises"," * @returns {Promise.<Array.<*>>}"," */","","/**"," * Returns a deferred object"," *"," * @method Promise.defer"," * @returns {Deferred}"," */","Promise.defer = function() {","  return new Deferred();","};","","/**"," * Deferred object"," *"," * @protected"," * @constructor"," */","var Deferred = function() {","  var self = this;","  this.promise = new Promise(function(resolve, reject) {","    self.resolve = resolve;","    self.reject = reject;","  });","};","","/**"," * Resolve promise"," * @method Deferred#resolve"," * @param {*} result - Resolving result"," */","","/**"," * Reject promise"," * @method Deferred#reject"," * @param {Error} error - Rejecting reason"," */","","/**"," *"," */","module.exports = Promise;",""],"l":{"5":1,"49":1,"68":1,"69":0,"70":0,"71":0,"72":0,"75":0,"76":0,"80":0,"98":1,"131":1,"132":0,"141":1,"142":0,"143":0,"144":0,"145":0,"164":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/logger.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/logger.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":5,"15":1,"16":5,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":5,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":30},"end":{"line":9,"column":49}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":23},"end":{"line":36,"column":48}}},"3":{"name":"createLoggerFunction","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":37}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":9},"end":{"line":51,"column":27}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":35}},"4":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":28}},"7":{"start":{"line":22,"column":0},"end":{"line":28,"column":2}},"8":{"start":{"line":36,"column":0},"end":{"line":44,"column":2}},"9":{"start":{"line":37,"column":2},"end":{"line":43,"column":3}},"10":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":39,"column":6},"end":{"line":39,"column":27}},"12":{"start":{"line":41,"column":6},"end":{"line":41,"column":29}},"13":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":81}},"15":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":57}},"17":{"start":{"line":51,"column":29},"end":{"line":51,"column":54}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]}},"code":["'use strict';","","/**"," * @protected"," * @class"," * @constructor"," * @param {String|Number} logLevel - Log level"," */","var Logger = module.exports = function(logLevel) {","  if (typeof logLevel === 'string') {","    logLevel = LogLevels[logLevel];","  }","  if (!logLevel) {","    logLevel = LogLevels.INFO;","  }","  this._logLevel = logLevel;","};","","/**"," * @memberof Logger"," */","var LogLevels = Logger.LogLevels = {","  \"DEBUG\" : 1,","  \"INFO\" : 2,","  \"WARN\" : 3,","  \"ERROR\" : 4,","  \"FATAL\" : 5","};","","/**"," * Output log"," *"," * @param {String} level - Logging target level"," * @param {String} message - Message to log"," */","Logger.prototype.log = function(level, message) {","  if (this._logLevel <= level) {","    if (level < LogLevels.ERROR) {","      console.log(message);","    } else {","      console.error(message);","    }","  }","};","","for (var level in LogLevels) {","  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);","}","","function createLoggerFunction(level) {","  return function(message) { this.log(level, message); };","}",""],"l":{"9":1,"10":0,"11":0,"13":0,"14":0,"16":0,"22":1,"36":1,"37":0,"38":0,"39":0,"41":0,"46":1,"47":5,"50":1,"51":5}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/oauth2.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/oauth2.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":30},"end":{"line":29,"column":48}}},"2":{"name":"(anonymous_2)","line":63,"loc":{"start":{"line":63,"column":24},"end":{"line":63,"column":41}}},"3":{"name":"(anonymous_3)","line":88,"loc":{"start":{"line":88,"column":17},"end":{"line":88,"column":50}}},"4":{"name":"(anonymous_4)","line":105,"loc":{"start":{"line":105,"column":17},"end":{"line":105,"column":42}}},"5":{"name":"(anonymous_5)","line":123,"loc":{"start":{"line":123,"column":17},"end":{"line":123,"column":56}}},"6":{"name":"(anonymous_6)","line":141,"loc":{"start":{"line":141,"column":16},"end":{"line":141,"column":48}}},"7":{"name":"(anonymous_7)","line":159,"loc":{"start":{"line":159,"column":20},"end":{"line":159,"column":39}}},"8":{"name":"(anonymous_8)","line":175,"loc":{"start":{"line":175,"column":16},"end":{"line":175,"column":43}}},"9":{"name":"(anonymous_9)","line":183,"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":31}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":39}},"2":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":29,"column":0},"end":{"line":46,"column":2}},"4":{"start":{"line":30,"column":2},"end":{"line":40,"column":3}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":77}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":51}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":51}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":53}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":58}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":72}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":68}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":70}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":35}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":43}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"16":{"start":{"line":44,"column":2},"end":{"line":45,"column":88}},"17":{"start":{"line":53,"column":0},"end":{"line":198,"column":3}},"18":{"start":{"line":64,"column":4},"end":{"line":68,"column":21}},"19":{"start":{"line":69,"column":4},"end":{"line":71,"column":36}},"20":{"start":{"line":89,"column":4},"end":{"line":94,"column":17}},"21":{"start":{"line":106,"column":4},"end":{"line":112,"column":17}},"22":{"start":{"line":124,"column":4},"end":{"line":131,"column":17}},"23":{"start":{"line":142,"column":4},"end":{"line":142,"column":12}},"24":{"start":{"line":143,"column":4},"end":{"line":158,"column":5}},"25":{"start":{"line":144,"column":6},"end":{"line":144,"column":68}},"26":{"start":{"line":145,"column":6},"end":{"line":148,"column":9}},"27":{"start":{"line":150,"column":6},"end":{"line":157,"column":9}},"28":{"start":{"line":159,"column":4},"end":{"line":169,"column":26}},"29":{"start":{"line":160,"column":6},"end":{"line":168,"column":7}},"30":{"start":{"line":161,"column":8},"end":{"line":161,"column":51}},"31":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"32":{"start":{"line":163,"column":10},"end":{"line":163,"column":95}},"33":{"start":{"line":165,"column":8},"end":{"line":165,"column":51}},"34":{"start":{"line":166,"column":8},"end":{"line":166,"column":29}},"35":{"start":{"line":167,"column":8},"end":{"line":167,"column":18}},"36":{"start":{"line":176,"column":4},"end":{"line":195,"column":26}},"37":{"start":{"line":184,"column":6},"end":{"line":184,"column":14}},"38":{"start":{"line":185,"column":6},"end":{"line":187,"column":19}},"39":{"start":{"line":186,"column":8},"end":{"line":186,"column":40}},"40":{"start":{"line":188,"column":6},"end":{"line":193,"column":7}},"41":{"start":{"line":189,"column":8},"end":{"line":189,"column":100}},"42":{"start":{"line":190,"column":8},"end":{"line":190,"column":51}},"43":{"start":{"line":191,"column":8},"end":{"line":191,"column":29}},"44":{"start":{"line":192,"column":8},"end":{"line":192,"column":18}},"45":{"start":{"line":194,"column":6},"end":{"line":194,"column":17}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":29}},{"start":{"line":30,"column":33},"end":{"line":30,"column":56}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":20},"end":{"line":36,"column":36}},{"start":{"line":36,"column":40},"end":{"line":36,"column":57}}]},"4":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":23},"end":{"line":45,"column":69}},{"start":{"line":45,"column":72},"end":{"line":45,"column":87}}]},"5":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":7},"end":{"line":68,"column":13}},{"start":{"line":68,"column":17},"end":{"line":68,"column":19}}]},"6":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":48},"end":{"line":70,"column":51}},{"start":{"line":70,"column":54},"end":{"line":70,"column":57}}]},"7":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"8":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":6}},{"start":{"line":160,"column":6},"end":{"line":160,"column":6}}]},"9":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":8}},{"start":{"line":162,"column":8},"end":{"line":162,"column":8}}]},"10":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":16}},{"start":{"line":162,"column":20},"end":{"line":162,"column":30}}]},"11":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":6},"end":{"line":188,"column":6}},{"start":{"line":188,"column":6},"end":{"line":188,"column":6}}]},"12":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":14},"end":{"line":189,"column":17}},{"start":{"line":189,"column":21},"end":{"line":189,"column":99}}]}},"code":["/**"," * @file Manages Salesforce OAuth2 operations"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var querystring = require('querystring'),","    _ = require('lodash/core'),","    Transport = require('./transport');","","var defaults = {","  loginUrl : \"https://login.salesforce.com\"","};","","/**"," * OAuth2 class"," *"," * @class"," * @constructor"," * @param {Object} options - OAuth2 config options"," * @param {String} [options.loginUrl] - Salesforce login server URL"," * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL."," * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL."," * @param {String} options.clientId - OAuth2 client ID."," * @param {String} options.clientSecret - OAuth2 client secret."," * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service."," */","var OAuth2 = module.exports = function(options) {","  if (options.authzServiceUrl && options.tokenServiceUrl) {","    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');","    this.authzServiceUrl = options.authzServiceUrl;","    this.tokenServiceUrl = options.tokenServiceUrl;","    this.revokeServiceUrl = options.revokeServiceUrl;","  } else {","    this.loginUrl = options.loginUrl || defaults.loginUrl;","    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";","    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";","    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";","  }","  this.clientId = options.clientId;","  this.clientSecret = options.clientSecret;","  this.redirectUri = options.redirectUri;","  this._transport =","    options.proxyUrl ? new Transport.ProxyTransport(options.proxyUrl) : new Transport();","};","","","","/**"," *"," */","_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {","","  /**","   * Get Salesforce OAuth2 authorization page URL to redirect user agent.","   *","   * @param {Object} params - Parameters","   * @param {String} params.scope - Scope values in space-separated string","   * @param {String} params.state - State parameter","   * @returns {String} Authorization page URL","   */","  getAuthorizationUrl : function(params) {","    params = _.extend({","      response_type : \"code\",","      client_id : this.clientId,","      redirect_uri : this.redirectUri","    }, params || {});","    return this.authzServiceUrl +","      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +","      querystring.stringify(params);","  },","","  /**","   * @typedef TokenResponse","   * @type {Object}","   * @property {String} access_token","   * @property {String} refresh_token","   */","","  /**","   * OAuth2 Refresh Token Flow","   *","   * @param {String} refreshToken - Refresh token","   * @param {Callback.<TokenResponse>} [callback] - Callback function","   * @returns {Promise.<TokenResponse>}","   */","  refreshToken : function(refreshToken, callback) {","    return this._postParams({","      grant_type : \"refresh_token\",","      refresh_token : refreshToken,","      client_id : this.clientId,","      client_secret : this.clientSecret","    }, callback);","  },","","  /**","   * OAuth2 Web Server Authentication Flow (Authorization Code)","   * Access Token Request","   *","   * @param {String} code - Authorization code","   * @param {Callback.<TokenResponse>} [callback] - Callback function","   * @returns {Promise.<TokenResponse>}","   */","  requestToken : function(code, callback) {","    return this._postParams({","      grant_type : \"authorization_code\",","      code : code,","      client_id : this.clientId,","      client_secret : this.clientSecret,","      redirect_uri : this.redirectUri","    }, callback);","  },","","  /**","   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)","   *","   * @param {String} username - Salesforce username","   * @param {String} password - Salesforce password","   * @param {Callback.<TokenResponse>} [callback] - Callback function","   * @returns {Promise.<TokenResponse>}","   */","  authenticate : function(username, password, callback) {","    return this._postParams({","      grant_type : \"password\",","      username : username,","      password : password,","      client_id : this.clientId,","      client_secret : this.clientSecret,","      redirect_uri : this.redirectUri","    }, callback);","  },","","  /**","   * OAuth2 Revoke Session Token","   *","   * @param {String} accessToken - Access token to revoke","   * @param {Callback.<undefined>} [callback] - Callback function","   * @returns {Promise.<undefined>}","   */","  revokeToken : function(accessToken, callback) {","    var req;","    if (Transport.JsonpTransport.supported) {","      var jsonpTransport = new Transport.JsonpTransport('callback');","      req = jsonpTransport.httpRequest({","        method: 'GET',","        url : this.revokeServiceUrl + '?' + querystring.stringify({ token: accessToken })","      });","    } else {","      req = this._transport.httpRequest({","        method : 'POST',","        url : this.revokeServiceUrl,","        body: querystring.stringify({ token: accessToken }),","        headers: {","          \"Content-Type\": \"application/x-www-form-urlencoded\"","        }","      });","    }","    return req.then(function(response) {","      if (response.statusCode >= 400) {","        var res = querystring.parse(response.body);","        if (!res || !res.error) {","          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };","        }","        var err = new Error(res.error_description);","        err.name = res.error;","        throw err;","      }","    }).thenCall(callback);","  },","","  /**","   * @private","   */","  _postParams : function(params, callback) {","    return this._transport.httpRequest({","      method : 'POST',","      url : this.tokenServiceUrl,","      body : querystring.stringify(params),","      headers : {","        \"content-type\" : \"application/x-www-form-urlencoded\"","      }","    }).then(function(response) {","      var res;","      try {","        res = JSON.parse(response.body);","      } catch(e) {}","      if (response.statusCode >= 400) {","        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };","        var err = new Error(res.error_description);","        err.name = res.error;","        throw err;","      }","      return res;","    }).thenCall(callback);","  }","","});",""],"l":{"8":1,"12":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"53":1,"64":0,"69":0,"89":0,"106":0,"124":0,"142":0,"143":0,"144":0,"145":0,"150":0,"159":0,"160":0,"161":0,"162":0,"163":0,"165":0,"166":0,"167":0,"176":0,"184":0,"185":0,"186":0,"188":0,"189":0,"190":0,"191":0,"192":0,"194":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/transport.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/transport.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":1,"47":0,"48":1,"49":1,"50":0,"51":1,"52":1,"53":0,"54":1,"55":1,"56":0,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"1":[1,0],"2":[0,1],"3":[0,1],"4":[1,0],"5":[1,1],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"streamify","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":37}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":28}}},"3":{"name":"normalizeApiHost","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":35}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":33},"end":{"line":69,"column":44}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":34},"end":{"line":78,"column":61}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":22},"end":{"line":82,"column":33}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":32},"end":{"line":84,"column":56}}},"8":{"name":"(anonymous_8)","line":98,"loc":{"start":{"line":98,"column":44},"end":{"line":98,"column":55}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":48},"end":{"line":110,"column":69}}},"10":{"name":"(anonymous_10)","line":117,"loc":{"start":{"line":117,"column":49},"end":{"line":117,"column":60}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":50},"end":{"line":131,"column":74}}},"12":{"name":"(anonymous_12)","line":138,"loc":{"start":{"line":138,"column":50},"end":{"line":138,"column":61}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":48},"end":{"line":153,"column":67}}},"14":{"name":"(anonymous_14)","line":167,"loc":{"start":{"line":167,"column":39},"end":{"line":167,"column":66}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":35}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":39}},"3":{"start":{"line":15,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":18,"column":4}},"5":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"7":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":58}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":39}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":12}},"11":{"start":{"line":29,"column":0},"end":{"line":34,"column":1}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":48}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":55}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":48}},"15":{"start":{"line":40,"column":0},"end":{"line":49,"column":1}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":27}},"17":{"start":{"line":42,"column":2},"end":{"line":46,"column":4}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":14}},"19":{"start":{"line":44,"column":4},"end":{"line":44,"column":53}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":27}},"22":{"start":{"line":48,"column":2},"end":{"line":48,"column":17}},"23":{"start":{"line":55,"column":0},"end":{"line":61,"column":1}},"24":{"start":{"line":56,"column":2},"end":{"line":56,"column":66}},"25":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":39}},"27":{"start":{"line":60,"column":2},"end":{"line":60,"column":17}},"28":{"start":{"line":69,"column":0},"end":{"line":69,"column":47}},"29":{"start":{"line":78,"column":0},"end":{"line":95,"column":2}},"30":{"start":{"line":79,"column":2},"end":{"line":79,"column":33}},"31":{"start":{"line":80,"column":2},"end":{"line":80,"column":10}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":49}},"33":{"start":{"line":82,"column":2},"end":{"line":93,"column":4}},"34":{"start":{"line":83,"column":4},"end":{"line":91,"column":5}},"35":{"start":{"line":84,"column":6},"end":{"line":90,"column":9}},"36":{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},"37":{"start":{"line":86,"column":10},"end":{"line":86,"column":31}},"38":{"start":{"line":88,"column":10},"end":{"line":88,"column":37}},"39":{"start":{"line":92,"column":4},"end":{"line":92,"column":15}},"40":{"start":{"line":94,"column":2},"end":{"line":94,"column":71}},"41":{"start":{"line":98,"column":0},"end":{"line":100,"column":2}},"42":{"start":{"line":99,"column":2},"end":{"line":99,"column":17}},"43":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"44":{"start":{"line":111,"column":2},"end":{"line":111,"column":32}},"45":{"start":{"line":114,"column":0},"end":{"line":114,"column":36}},"46":{"start":{"line":117,"column":0},"end":{"line":119,"column":2}},"47":{"start":{"line":118,"column":2},"end":{"line":118,"column":47}},"48":{"start":{"line":121,"column":0},"end":{"line":121,"column":43}},"49":{"start":{"line":131,"column":0},"end":{"line":133,"column":2}},"50":{"start":{"line":132,"column":2},"end":{"line":132,"column":38}},"51":{"start":{"line":135,"column":0},"end":{"line":135,"column":37}},"52":{"start":{"line":138,"column":0},"end":{"line":140,"column":2}},"53":{"start":{"line":139,"column":2},"end":{"line":139,"column":51}},"54":{"start":{"line":142,"column":0},"end":{"line":142,"column":45}},"55":{"start":{"line":153,"column":0},"end":{"line":155,"column":2}},"56":{"start":{"line":154,"column":2},"end":{"line":154,"column":28}},"57":{"start":{"line":157,"column":0},"end":{"line":157,"column":36}},"58":{"start":{"line":167,"column":0},"end":{"line":188,"column":2}},"59":{"start":{"line":168,"column":2},"end":{"line":168,"column":23}},"60":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"61":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"62":{"start":{"line":172,"column":2},"end":{"line":178,"column":4}},"63":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"64":{"start":{"line":180,"column":4},"end":{"line":180,"column":35}},"65":{"start":{"line":182,"column":2},"end":{"line":186,"column":3}},"66":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"67":{"start":{"line":184,"column":6},"end":{"line":184,"column":55}},"68":{"start":{"line":187,"column":2},"end":{"line":187,"column":87}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":0},"end":{"line":15,"column":0}},{"start":{"line":15,"column":0},"end":{"line":15,"column":0}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":0},"end":{"line":29,"column":0}},{"start":{"line":29,"column":0},"end":{"line":29,"column":0}}]},"5":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":41}},{"start":{"line":30,"column":45},"end":{"line":30,"column":47}}]},"6":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":22},"end":{"line":33,"column":42}},{"start":{"line":33,"column":45},"end":{"line":33,"column":47}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"10":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"11":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"12":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":17}},{"start":{"line":179,"column":21},"end":{"line":179,"column":39}}]},"13":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]}},"code":["/*global process, Sfdc */","","'use strict';","","var inherits = require('inherits'),","    Promise = require('./promise');","","/* */","","var request = require('request'),","    canvas = require('./browser/canvas'),","    jsonp = require('./browser/jsonp');","","// set options if defaults setting is available in request, which is not available in xhr module.","if (request.defaults) {","  var defaults = {","    followAllRedirects: true","  };","  if (process.env.HTTP_PROXY) {","    defaults.proxy = process.env.HTTP_PROXY;","  }","  if (parseInt(process.env.HTTP_TIMEOUT)) {","    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);","  }","  request = request.defaults(defaults);","}","","var baseUrl;","if (typeof window === 'undefined') {","  baseUrl = process.env.LOCATION_BASE_URL || \"\";","} else {","  var apiHost = normalizeApiHost(window.location.host);","  baseUrl = apiHost ? \"https://\" + apiHost : \"\";","}","","/**"," * Add stream() method to promise (and following promise chain), to access original request stream."," * @private"," */","function streamify(promise, factory) {","  var _then = promise.then;","  promise.then = function() {","    factory();","    var newPromise = _then.apply(promise, arguments);","    return streamify(newPromise, factory);","  };","  promise.stream = factory;","  return promise;","}","","/**"," * Normarize Salesforce API host name"," * @private"," */","function normalizeApiHost(apiHost) {","  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);","  if (m) {","    apiHost = m[1] + \".salesforce.com\";","  }","  return apiHost;","}","","/**"," * Class for HTTP request transport"," *"," * @class"," * @protected"," */","var Transport = module.exports = function() {};","","/**"," * Make HTTP request, returns promise instead of stream"," *"," * @param {Object} params - HTTP request"," * @param {Callback.<Object>} [callback] - Calback Function"," * @returns {Promise.<Object>}"," */","Transport.prototype.httpRequest = function(params, callback) {","  var deferred = Promise.defer();","  var req;","  var httpRequest = this._getHttpRequestModule();","  var createRequest = function() {","    if (!req) {","      req = httpRequest(params, function(err, response) {","        if (err) {","          deferred.reject(err);","        } else {","          deferred.resolve(response);","        }","      });","    }","    return req;","  };","  return streamify(deferred.promise, createRequest).thenCall(callback);","};","","/** @protected **/","Transport.prototype._getHttpRequestModule = function() {","  return request;","};","","","/**"," * Class for JSONP request transport"," * @class Transport~JsonpTransport"," * @protected"," * @extends Transport"," * @param {String} jsonpParam - Callback parameter name for JSONP invokation."," */","var JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {","  this._jsonpParam = jsonpParam;","};","","inherits(JsonpTransport, Transport);","","/** @protected **/","JsonpTransport.prototype._getHttpRequestModule = function() {","  return jsonp.createRequest(this._jsonpParam);","};","","JsonpTransport.supported = jsonp.supported;","","","/**"," * Class for Sfdc Canvas request transport"," * @class Transport~CanvasTransport"," * @protected"," * @extends Transport"," * @param {Object} signedRequest - Parsed signed request object"," */","var CanvasTransport = Transport.CanvasTransport = function(signedRequest) {","  this._signedRequest = signedRequest;","};","","inherits(CanvasTransport, Transport);","","/** @protected **/","CanvasTransport.prototype._getHttpRequestModule = function() {","  return canvas.createRequest(this._signedRequest);","};","","CanvasTransport.supported = canvas.supported;","","","/**"," * Class for HTTP request transport using AJAX proxy service"," *"," * @class Transport~ProxyTransport"," * @protected"," * @extends Transport"," * @param {String} proxyUrl - AJAX Proxy server URL"," */","var ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {","  this._proxyUrl = proxyUrl;","};","","inherits(ProxyTransport, Transport);","","/**"," * Make HTTP request via AJAX proxy"," *"," * @method Transport~ProxyTransport#httpRequest"," * @param {Object} params - HTTP request"," * @param {Callback.<Object>} [callback] - Calback Function"," * @returns {Promise.<Object>}"," */","ProxyTransport.prototype.httpRequest = function(params, callback) {","  var url = params.url;","  if (url.indexOf(\"/\") === 0) {","    url = baseUrl + url;","  }","  var proxyParams = {","    method: params.method,","    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),","    headers: {","      'salesforceproxy-endpoint': url","    }","  };","  if (params.body || params.body === \"\") {","    proxyParams.body = params.body;","  }","  if (params.headers) {","    for (var name in params.headers) {","      proxyParams.headers[name] = params.headers[name];","    }","  }","  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);","};",""],"l":{"5":1,"10":1,"15":1,"16":1,"19":1,"20":0,"22":1,"23":0,"25":1,"28":1,"29":1,"30":1,"32":0,"33":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"55":1,"56":0,"57":0,"58":0,"60":0,"69":1,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"92":0,"94":0,"98":1,"99":0,"110":1,"111":0,"114":1,"117":1,"118":0,"121":1,"131":1,"132":0,"135":1,"138":1,"139":0,"142":1,"153":1,"154":0,"157":1,"167":1,"168":0,"169":0,"170":0,"172":0,"179":0,"180":0,"182":0,"183":0,"184":0,"187":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/browser/canvas.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/browser/canvas.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"parseHeaders","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":25},"end":{"line":9,"column":40}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":41}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":38}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":33}}},"6":{"name":"(anonymous_6)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":55}}},"7":{"name":"(anonymous_7)","line":37,"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":34}}},"8":{"name":"send","line":48,"loc":{"start":{"line":48,"column":6},"end":{"line":48,"column":26}}},"9":{"name":"(anonymous_9)","line":64,"loc":{"start":{"line":64,"column":27},"end":{"line":64,"column":42}}},"10":{"name":"(anonymous_10)","line":80,"loc":{"start":{"line":80,"column":27},"end":{"line":80,"column":41}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":16,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":19}},"4":{"start":{"line":9,"column":2},"end":{"line":14,"column":5}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":37}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":17}},"10":{"start":{"line":18,"column":0},"end":{"line":90,"column":2}},"11":{"start":{"line":23,"column":4},"end":{"line":88,"column":6}},"12":{"start":{"line":24,"column":6},"end":{"line":24,"column":19}},"13":{"start":{"line":25,"column":6},"end":{"line":25,"column":29}},"14":{"start":{"line":26,"column":6},"end":{"line":30,"column":8}},"15":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"16":{"start":{"line":28,"column":10},"end":{"line":28,"column":34}},"17":{"start":{"line":31,"column":6},"end":{"line":31,"column":20}},"18":{"start":{"line":32,"column":6},"end":{"line":32,"column":23}},"19":{"start":{"line":33,"column":6},"end":{"line":36,"column":8}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"22":{"start":{"line":37,"column":6},"end":{"line":42,"column":9}},"23":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"24":{"start":{"line":39,"column":10},"end":{"line":39,"column":30}},"25":{"start":{"line":40,"column":10},"end":{"line":40,"column":22}},"26":{"start":{"line":43,"column":6},"end":{"line":46,"column":7}},"27":{"start":{"line":44,"column":8},"end":{"line":44,"column":26}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"29":{"start":{"line":48,"column":6},"end":{"line":86,"column":7}},"30":{"start":{"line":49,"column":8},"end":{"line":53,"column":10}},"31":{"start":{"line":54,"column":8},"end":{"line":63,"column":9}},"32":{"start":{"line":55,"column":10},"end":{"line":55,"column":32}},"33":{"start":{"line":56,"column":10},"end":{"line":62,"column":11}},"34":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"35":{"start":{"line":58,"column":14},"end":{"line":58,"column":58}},"36":{"start":{"line":60,"column":14},"end":{"line":60,"column":60}},"37":{"start":{"line":64,"column":8},"end":{"line":79,"column":10}},"38":{"start":{"line":65,"column":10},"end":{"line":65,"column":59}},"39":{"start":{"line":66,"column":10},"end":{"line":66,"column":34}},"40":{"start":{"line":67,"column":10},"end":{"line":69,"column":11}},"41":{"start":{"line":68,"column":12},"end":{"line":68,"column":40}},"42":{"start":{"line":70,"column":10},"end":{"line":74,"column":12}},"43":{"start":{"line":75,"column":10},"end":{"line":77,"column":11}},"44":{"start":{"line":76,"column":12},"end":{"line":76,"column":52}},"45":{"start":{"line":78,"column":10},"end":{"line":78,"column":20}},"46":{"start":{"line":80,"column":8},"end":{"line":84,"column":10}},"47":{"start":{"line":81,"column":10},"end":{"line":83,"column":11}},"48":{"start":{"line":82,"column":12},"end":{"line":82,"column":26}},"49":{"start":{"line":85,"column":8},"end":{"line":85,"column":54}},"50":{"start":{"line":87,"column":6},"end":{"line":87,"column":17}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":37}},{"start":{"line":20,"column":41},"end":{"line":20,"column":75}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":21}},{"start":{"line":43,"column":25},"end":{"line":43,"column":43}},{"start":{"line":43,"column":47},"end":{"line":43,"column":89}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"8":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":10},"end":{"line":67,"column":10}},{"start":{"line":67,"column":10},"end":{"line":67,"column":10}}]},"9":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":10},"end":{"line":75,"column":10}},{"start":{"line":75,"column":10},"end":{"line":75,"column":10}}]},"10":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":10},"end":{"line":81,"column":10}},{"start":{"line":81,"column":10},"end":{"line":81,"column":10}}]}},"code":["/*global Sfdc */","'use strict';","","var Duplex = require('readable-stream').Duplex,","    _ = require('lodash/core');","","function parseHeaders(hs) {","  var headers = {};","  hs.split(/\\n/).forEach(function(line) {","    var pair = line.split(/\\s*:\\s*/);","    var name = pair[0].toLowerCase();","    var value = pair[1];","    headers[name] = value;","  });","  return headers;","}","","module.exports = {","","  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',","","  createRequest: function(signedRequest) {","    return function(params, callback) {","      var response;","      var str = new Duplex();","      str._read = function(size) {","        if (response) {","          str.push(response.body);","        }","      };","      var bufs = [];","      var sent = false;","      str._write = function(chunk, encoding, callback) {","        bufs.push(chunk.toString(encoding));","        callback();","      };","      str.on('finish', function() {","        if (!sent) {","          send(bufs.join(''));","          sent = true;","        }","      });","      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {","        send(params.body);","        sent = true;","      }","","      function send(body) {","        var settings = {","          client: signedRequest.client,","          method: params.method,","          data: body","        };","        if (params.headers) {","          settings.headers = {};","          for (var name in params.headers) {","            if (name.toLowerCase() === 'content-type') {","              settings.contentType = params.headers[name];","            } else {","              settings.headers[name] = params.headers[name];","            }","          }","        }","        settings.success = function(data) {","          var headers = parseHeaders(data.responseHeaders);","          var body = data.payload;","          if (!_.isString(body)) {","            body = JSON.stringify(body);","          }","          response = {","            statusCode : data.status,","            headers: headers,","            body: body","          };","          if (callback) {","            callback(null, response, response.body);","          }","          str.end();","        };","        settings.failure = function(err) {","          if (callback) {","            callback(err);","          }","        };","        Sfdc.canvas.client.ajax(params.url, settings);","      }","      return str;","    };","  }","};",""],"l":{"4":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"18":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"43":0,"44":0,"45":0,"48":1,"49":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"75":0,"76":0,"78":0,"80":0,"81":0,"82":0,"85":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/browser/jsonp.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/browser/jsonp.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":47}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":38}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":27},"end":{"line":29,"column":38}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":30},"end":{"line":34,"column":44}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":15}},"2":{"start":{"line":6,"column":0},"end":{"line":52,"column":2}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":42}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":31}},"5":{"start":{"line":14,"column":4},"end":{"line":48,"column":6}},"6":{"start":{"line":15,"column":6},"end":{"line":17,"column":7}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":71}},"8":{"start":{"line":18,"column":6},"end":{"line":18,"column":62}},"9":{"start":{"line":19,"column":6},"end":{"line":19,"column":29}},"10":{"start":{"line":20,"column":6},"end":{"line":20,"column":27}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":44}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":43}},"13":{"start":{"line":24,"column":6},"end":{"line":24,"column":52}},"14":{"start":{"line":25,"column":6},"end":{"line":25,"column":38}},"15":{"start":{"line":26,"column":6},"end":{"line":26,"column":23}},"16":{"start":{"line":27,"column":6},"end":{"line":27,"column":51}},"17":{"start":{"line":29,"column":6},"end":{"line":32,"column":18}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":18}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":52}},"20":{"start":{"line":34,"column":6},"end":{"line":41,"column":8}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":18}},"22":{"start":{"line":36,"column":8},"end":{"line":40,"column":11}},"23":{"start":{"line":43,"column":6},"end":{"line":47,"column":8}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":26}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":53}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":37}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":17},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":41}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":14},"end":{"line":12,"column":21}},{"start":{"line":12,"column":25},"end":{"line":12,"column":30}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]},"4":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":34},"end":{"line":21,"column":37}},{"start":{"line":21,"column":40},"end":{"line":21,"column":43}}]}},"code":["/*global window, document */","'use strict';","","var _index = 0;","","module.exports = {","","  supported: typeof window !== 'undefined',","","  createRequest: function(jsonpParam, timeout) {","    jsonpParam = jsonpParam || 'callback';","    timeout = timeout || 10000;","","    return function(params, callback) {","      if (params.method.toUpperCase() !== 'GET') {","        return callback(new Error('JSONP only supports GET request.'));","      }","      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);","      var callbacks = window;","      var url = params.url;","      url += url.indexOf('?')>0 ? '&' : '?';","      url += jsonpParam + '=' + cbFuncName;","","      var script = document.createElement('script');","      script.type = 'text/javascript';","      script.src = url;","      document.documentElement.appendChild(script);","","      var pid = setTimeout(function() {","        cleanup();","        callback(new Error(\"JSONP call time out.\"));","      }, timeout);","","      callbacks[cbFuncName] = function(res) {","        cleanup();","        callback(null, {","          statusCode: 200,","          headers: { \"content-type\": \"application/json\" },","          body: JSON.stringify(res)","        });","      };","","      var cleanup = function() {","        clearTimeout(pid);","        document.documentElement.removeChild(script);","        delete callbacks[cbFuncName];","      };","    };","","  }","","};"],"l":{"4":1,"6":1,"11":0,"12":0,"14":0,"15":0,"16":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"34":0,"35":0,"36":0,"43":0,"44":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/query.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/query.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":1,"77":0,"78":0,"79":1,"80":0,"81":0,"82":1,"83":1,"84":4,"85":1,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":1,"243":1,"244":1,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":1,"279":0,"280":0,"281":0,"282":0,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":1,"295":1,"296":0,"297":1,"298":0,"299":1,"300":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":4,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":29},"end":{"line":34,"column":61}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":25},"end":{"line":72,"column":42}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":24},"end":{"line":96,"column":45}}},"4":{"name":"(anonymous_4)","line":110,"loc":{"start":{"line":110,"column":24},"end":{"line":110,"column":40}}},"5":{"name":"(anonymous_5)","line":133,"loc":{"start":{"line":133,"column":25},"end":{"line":133,"column":42}}},"6":{"name":"(anonymous_6)","line":158,"loc":{"start":{"line":158,"column":26},"end":{"line":158,"column":46}}},"7":{"name":"(anonymous_7)","line":181,"loc":{"start":{"line":181,"column":26},"end":{"line":181,"column":78}}},"8":{"name":"(anonymous_8)","line":216,"loc":{"start":{"line":216,"column":27},"end":{"line":216,"column":46}}},"9":{"name":"(anonymous_9)","line":227,"loc":{"start":{"line":227,"column":28},"end":{"line":227,"column":48}}},"10":{"name":"(anonymous_10)","line":238,"loc":{"start":{"line":238,"column":26},"end":{"line":238,"column":44}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":62},"end":{"line":247,"column":74}}},"12":{"name":"(anonymous_12)","line":256,"loc":{"start":{"line":256,"column":36},"end":{"line":256,"column":61}}},"13":{"name":"(anonymous_13)","line":302,"loc":{"start":{"line":302,"column":26},"end":{"line":302,"column":54}}},"14":{"name":"(anonymous_14)","line":331,"loc":{"start":{"line":331,"column":24},"end":{"line":331,"column":43}}},"15":{"name":"(anonymous_15)","line":346,"loc":{"start":{"line":346,"column":24},"end":{"line":346,"column":38}}},"16":{"name":"(anonymous_16)","line":349,"loc":{"start":{"line":349,"column":21},"end":{"line":349,"column":35}}},"17":{"name":"(anonymous_17)","line":356,"loc":{"start":{"line":356,"column":21},"end":{"line":356,"column":32}}},"18":{"name":"(anonymous_18)","line":360,"loc":{"start":{"line":360,"column":21},"end":{"line":360,"column":38}}},"19":{"name":"(anonymous_19)","line":364,"loc":{"start":{"line":364,"column":23},"end":{"line":364,"column":34}}},"20":{"name":"(anonymous_20)","line":376,"loc":{"start":{"line":376,"column":30},"end":{"line":376,"column":41}}},"21":{"name":"(anonymous_21)","line":378,"loc":{"start":{"line":378,"column":10},"end":{"line":378,"column":24}}},"22":{"name":"(anonymous_22)","line":390,"loc":{"start":{"line":390,"column":27},"end":{"line":390,"column":45}}},"23":{"name":"(anonymous_23)","line":401,"loc":{"start":{"line":401,"column":23},"end":{"line":401,"column":38}}},"24":{"name":"(anonymous_24)","line":406,"loc":{"start":{"line":406,"column":9},"end":{"line":406,"column":23}}},"25":{"name":"(anonymous_25)","line":412,"loc":{"start":{"line":412,"column":10},"end":{"line":412,"column":25}}},"26":{"name":"(anonymous_26)","line":463,"loc":{"start":{"line":463,"column":24},"end":{"line":463,"column":39}}},"27":{"name":"(anonymous_27)","line":470,"loc":{"start":{"line":470,"column":21},"end":{"line":470,"column":37}}},"28":{"name":"(anonymous_28)","line":473,"loc":{"start":{"line":473,"column":24},"end":{"line":473,"column":35}}},"29":{"name":"(anonymous_29)","line":487,"loc":{"start":{"line":487,"column":32},"end":{"line":487,"column":43}}},"30":{"name":"(anonymous_30)","line":501,"loc":{"start":{"line":501,"column":12},"end":{"line":501,"column":28}}},"31":{"name":"(anonymous_31)","line":503,"loc":{"start":{"line":503,"column":24},"end":{"line":503,"column":40}}},"32":{"name":"(anonymous_32)","line":504,"loc":{"start":{"line":504,"column":15},"end":{"line":504,"column":40}}},"33":{"name":"(anonymous_33)","line":509,"loc":{"start":{"line":509,"column":34},"end":{"line":509,"column":55}}},"34":{"name":"findRelationTable","line":515,"loc":{"start":{"line":515,"column":2},"end":{"line":515,"column":36}}},"35":{"name":"(anonymous_35)","line":518,"loc":{"start":{"line":518,"column":38},"end":{"line":518,"column":56}}},"36":{"name":"(anonymous_36)","line":520,"loc":{"start":{"line":520,"column":61},"end":{"line":520,"column":74}}},"37":{"name":"describeCache","line":528,"loc":{"start":{"line":528,"column":2},"end":{"line":528,"column":32}}},"38":{"name":"(anonymous_38)","line":531,"loc":{"start":{"line":531,"column":26},"end":{"line":531,"column":49}}},"39":{"name":"expandAsteriskField","line":539,"loc":{"start":{"line":539,"column":2},"end":{"line":539,"column":45}}},"40":{"name":"(anonymous_40)","line":543,"loc":{"start":{"line":543,"column":32},"end":{"line":543,"column":50}}},"41":{"name":"(anonymous_41)","line":547,"loc":{"start":{"line":547,"column":46},"end":{"line":547,"column":58}}},"42":{"name":"(anonymous_42)","line":553,"loc":{"start":{"line":553,"column":69},"end":{"line":553,"column":86}}},"43":{"name":"(anonymous_43)","line":554,"loc":{"start":{"line":554,"column":35},"end":{"line":554,"column":51}}},"44":{"name":"(anonymous_44)","line":560,"loc":{"start":{"line":560,"column":39},"end":{"line":560,"column":51}}},"45":{"name":"(anonymous_45)","line":573,"loc":{"start":{"line":573,"column":26},"end":{"line":573,"column":45}}},"46":{"name":"(anonymous_46)","line":576,"loc":{"start":{"line":576,"column":28},"end":{"line":576,"column":43}}},"47":{"name":"(anonymous_47)","line":589,"loc":{"start":{"line":589,"column":25},"end":{"line":589,"column":44}}},"48":{"name":"(anonymous_48)","line":592,"loc":{"start":{"line":592,"column":30},"end":{"line":592,"column":41}}},"49":{"name":"(anonymous_49)","line":648,"loc":{"start":{"line":648,"column":26},"end":{"line":648,"column":51}}},"50":{"name":"(anonymous_50)","line":659,"loc":{"start":{"line":659,"column":20},"end":{"line":659,"column":34}}},"51":{"name":"(anonymous_51)","line":665,"loc":{"start":{"line":665,"column":20},"end":{"line":665,"column":34}}},"52":{"name":"(anonymous_52)","line":678,"loc":{"start":{"line":678,"column":25},"end":{"line":678,"column":59}}},"53":{"name":"(anonymous_53)","line":690,"loc":{"start":{"line":690,"column":20},"end":{"line":690,"column":34}}},"54":{"name":"(anonymous_54)","line":698,"loc":{"start":{"line":698,"column":20},"end":{"line":698,"column":34}}},"55":{"name":"(anonymous_55)","line":713,"loc":{"start":{"line":713,"column":23},"end":{"line":713,"column":54}}},"56":{"name":"(anonymous_56)","line":726,"loc":{"start":{"line":726,"column":27},"end":{"line":726,"column":46}}},"57":{"name":"(anonymous_57)","line":728,"loc":{"start":{"line":728,"column":14},"end":{"line":728,"column":28}}},"58":{"name":"(anonymous_58)","line":729,"loc":{"start":{"line":729,"column":23},"end":{"line":729,"column":34}}},"59":{"name":"(anonymous_59)","line":732,"loc":{"start":{"line":732,"column":7},"end":{"line":732,"column":21}}},"60":{"name":"(anonymous_60)","line":733,"loc":{"start":{"line":733,"column":23},"end":{"line":733,"column":34}}},"61":{"name":"(anonymous_61)","line":753,"loc":{"start":{"line":753,"column":15},"end":{"line":753,"column":46}}},"62":{"name":"(anonymous_62)","line":764,"loc":{"start":{"line":764,"column":29},"end":{"line":764,"column":40}}},"63":{"name":"(anonymous_63)","line":774,"loc":{"start":{"line":774,"column":25},"end":{"line":774,"column":36}}},"64":{"name":"(anonymous_64)","line":786,"loc":{"start":{"line":786,"column":29},"end":{"line":786,"column":40}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":16,"column":46}},"2":{"start":{"line":34,"column":0},"end":{"line":62,"column":2}},"3":{"start":{"line":35,"column":2},"end":{"line":35,"column":48}},"4":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"5":{"start":{"line":38,"column":2},"end":{"line":48,"column":3}},"6":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"7":{"start":{"line":40,"column":9},"end":{"line":48,"column":3}},"8":{"start":{"line":41,"column":4},"end":{"line":41,"column":52}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":31}},"11":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"12":{"start":{"line":46,"column":6},"end":{"line":46,"column":36}},"13":{"start":{"line":49,"column":2},"end":{"line":54,"column":20}},"14":{"start":{"line":55,"column":2},"end":{"line":55,"column":25}},"15":{"start":{"line":56,"column":2},"end":{"line":56,"column":25}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":25}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":35}},"18":{"start":{"line":61,"column":2},"end":{"line":61,"column":18}},"19":{"start":{"line":64,"column":0},"end":{"line":64,"column":33}},"20":{"start":{"line":72,"column":0},"end":{"line":88,"column":2}},"21":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"22":{"start":{"line":74,"column":4},"end":{"line":74,"column":88}},"23":{"start":{"line":76,"column":2},"end":{"line":76,"column":25}},"24":{"start":{"line":77,"column":2},"end":{"line":85,"column":3}},"25":{"start":{"line":78,"column":4},"end":{"line":78,"column":37}},"26":{"start":{"line":79,"column":9},"end":{"line":85,"column":3}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":22}},"28":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"29":{"start":{"line":82,"column":6},"end":{"line":82,"column":41}},"30":{"start":{"line":82,"column":23},"end":{"line":82,"column":39}},"31":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"32":{"start":{"line":86,"column":2},"end":{"line":86,"column":31}},"33":{"start":{"line":87,"column":2},"end":{"line":87,"column":14}},"34":{"start":{"line":96,"column":0},"end":{"line":102,"column":2}},"35":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"36":{"start":{"line":98,"column":4},"end":{"line":98,"column":91}},"37":{"start":{"line":100,"column":2},"end":{"line":100,"column":39}},"38":{"start":{"line":101,"column":2},"end":{"line":101,"column":14}},"39":{"start":{"line":110,"column":0},"end":{"line":116,"column":2}},"40":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"41":{"start":{"line":112,"column":4},"end":{"line":112,"column":80}},"42":{"start":{"line":114,"column":2},"end":{"line":114,"column":29}},"43":{"start":{"line":115,"column":2},"end":{"line":115,"column":14}},"44":{"start":{"line":132,"column":0},"end":{"line":139,"column":2}},"45":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"46":{"start":{"line":135,"column":4},"end":{"line":135,"column":86}},"47":{"start":{"line":137,"column":2},"end":{"line":137,"column":31}},"48":{"start":{"line":138,"column":2},"end":{"line":138,"column":14}},"49":{"start":{"line":157,"column":0},"end":{"line":167,"column":2}},"50":{"start":{"line":159,"column":2},"end":{"line":161,"column":3}},"51":{"start":{"line":160,"column":4},"end":{"line":160,"column":79}},"52":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"53":{"start":{"line":163,"column":4},"end":{"line":163,"column":29}},"54":{"start":{"line":165,"column":2},"end":{"line":165,"column":27}},"55":{"start":{"line":166,"column":2},"end":{"line":166,"column":14}},"56":{"start":{"line":181,"column":0},"end":{"line":207,"column":2}},"57":{"start":{"line":182,"column":2},"end":{"line":184,"column":3}},"58":{"start":{"line":183,"column":4},"end":{"line":183,"column":98}},"59":{"start":{"line":185,"column":2},"end":{"line":192,"column":3}},"60":{"start":{"line":186,"column":4},"end":{"line":186,"column":32}},"61":{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},"62":{"start":{"line":188,"column":6},"end":{"line":188,"column":36}},"63":{"start":{"line":189,"column":6},"end":{"line":189,"column":69}},"64":{"start":{"line":191,"column":4},"end":{"line":191,"column":11}},"65":{"start":{"line":193,"column":2},"end":{"line":200,"column":4}},"66":{"start":{"line":201,"column":2},"end":{"line":201,"column":68}},"67":{"start":{"line":201,"column":41},"end":{"line":201,"column":68}},"68":{"start":{"line":202,"column":2},"end":{"line":202,"column":42}},"69":{"start":{"line":203,"column":2},"end":{"line":203,"column":63}},"70":{"start":{"line":204,"column":2},"end":{"line":204,"column":40}},"71":{"start":{"line":205,"column":2},"end":{"line":205,"column":34}},"72":{"start":{"line":206,"column":2},"end":{"line":206,"column":20}},"73":{"start":{"line":216,"column":0},"end":{"line":219,"column":2}},"74":{"start":{"line":217,"column":2},"end":{"line":217,"column":36}},"75":{"start":{"line":218,"column":2},"end":{"line":218,"column":14}},"76":{"start":{"line":227,"column":0},"end":{"line":230,"column":2}},"77":{"start":{"line":228,"column":2},"end":{"line":228,"column":38}},"78":{"start":{"line":229,"column":2},"end":{"line":229,"column":14}},"79":{"start":{"line":238,"column":0},"end":{"line":241,"column":2}},"80":{"start":{"line":239,"column":2},"end":{"line":239,"column":34}},"81":{"start":{"line":240,"column":2},"end":{"line":240,"column":14}},"82":{"start":{"line":246,"column":0},"end":{"line":246,"column":49}},"83":{"start":{"line":247,"column":0},"end":{"line":249,"column":3}},"84":{"start":{"line":248,"column":2},"end":{"line":248,"column":25}},"85":{"start":{"line":256,"column":0},"end":{"line":261,"column":2}},"86":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"87":{"start":{"line":258,"column":4},"end":{"line":258,"column":50}},"88":{"start":{"line":260,"column":2},"end":{"line":260,"column":14}},"89":{"start":{"line":276,"column":0},"end":{"line":385,"column":2}},"90":{"start":{"line":303,"column":2},"end":{"line":303,"column":18}},"91":{"start":{"line":304,"column":2},"end":{"line":304,"column":34}},"92":{"start":{"line":305,"column":2},"end":{"line":305,"column":32}},"93":{"start":{"line":307,"column":2},"end":{"line":310,"column":3}},"94":{"start":{"line":308,"column":4},"end":{"line":308,"column":70}},"95":{"start":{"line":309,"column":4},"end":{"line":309,"column":16}},"96":{"start":{"line":312,"column":2},"end":{"line":315,"column":3}},"97":{"start":{"line":313,"column":4},"end":{"line":313,"column":65}},"98":{"start":{"line":314,"column":4},"end":{"line":314,"column":16}},"99":{"start":{"line":317,"column":2},"end":{"line":320,"column":3}},"100":{"start":{"line":318,"column":4},"end":{"line":318,"column":23}},"101":{"start":{"line":319,"column":4},"end":{"line":319,"column":17}},"102":{"start":{"line":321,"column":2},"end":{"line":321,"column":26}},"103":{"start":{"line":322,"column":2},"end":{"line":328,"column":4}},"104":{"start":{"line":331,"column":2},"end":{"line":345,"column":4}},"105":{"start":{"line":332,"column":4},"end":{"line":339,"column":5}},"106":{"start":{"line":333,"column":6},"end":{"line":338,"column":7}},"107":{"start":{"line":334,"column":8},"end":{"line":334,"column":33}},"108":{"start":{"line":335,"column":8},"end":{"line":335,"column":19}},"109":{"start":{"line":337,"column":8},"end":{"line":337,"column":16}},"110":{"start":{"line":340,"column":4},"end":{"line":344,"column":5}},"111":{"start":{"line":341,"column":6},"end":{"line":341,"column":27}},"112":{"start":{"line":343,"column":6},"end":{"line":343,"column":28}},"113":{"start":{"line":346,"column":2},"end":{"line":348,"column":5}},"114":{"start":{"line":347,"column":4},"end":{"line":347,"column":31}},"115":{"start":{"line":349,"column":2},"end":{"line":351,"column":5}},"116":{"start":{"line":350,"column":4},"end":{"line":350,"column":25}},"117":{"start":{"line":356,"column":2},"end":{"line":369,"column":5}},"118":{"start":{"line":357,"column":4},"end":{"line":368,"column":5}},"119":{"start":{"line":358,"column":6},"end":{"line":358,"column":61}},"120":{"start":{"line":359,"column":6},"end":{"line":359,"column":23}},"121":{"start":{"line":360,"column":6},"end":{"line":362,"column":8}},"122":{"start":{"line":361,"column":8},"end":{"line":361,"column":29}},"123":{"start":{"line":363,"column":6},"end":{"line":363,"column":34}},"124":{"start":{"line":364,"column":6},"end":{"line":367,"column":9}},"125":{"start":{"line":365,"column":8},"end":{"line":365,"column":48}},"126":{"start":{"line":366,"column":8},"end":{"line":366,"column":45}},"127":{"start":{"line":372,"column":2},"end":{"line":372,"column":24}},"128":{"start":{"line":375,"column":2},"end":{"line":375,"column":38}},"129":{"start":{"line":376,"column":2},"end":{"line":381,"column":5}},"130":{"start":{"line":377,"column":4},"end":{"line":377,"column":43}},"131":{"start":{"line":379,"column":4},"end":{"line":379,"column":40}},"132":{"start":{"line":380,"column":4},"end":{"line":380,"column":28}},"133":{"start":{"line":384,"column":2},"end":{"line":384,"column":14}},"134":{"start":{"line":390,"column":0},"end":{"line":455,"column":2}},"135":{"start":{"line":391,"column":2},"end":{"line":391,"column":18}},"136":{"start":{"line":392,"column":2},"end":{"line":392,"column":34}},"137":{"start":{"line":393,"column":2},"end":{"line":393,"column":46}},"138":{"start":{"line":394,"column":2},"end":{"line":394,"column":36}},"139":{"start":{"line":395,"column":2},"end":{"line":395,"column":34}},"140":{"start":{"line":396,"column":2},"end":{"line":396,"column":32}},"141":{"start":{"line":398,"column":2},"end":{"line":454,"column":5}},"142":{"start":{"line":402,"column":6},"end":{"line":402,"column":28}},"143":{"start":{"line":403,"column":6},"end":{"line":403,"column":37}},"144":{"start":{"line":404,"column":6},"end":{"line":404,"column":111}},"145":{"start":{"line":407,"column":4},"end":{"line":411,"column":7}},"146":{"start":{"line":413,"column":4},"end":{"line":413,"column":23}},"147":{"start":{"line":414,"column":4},"end":{"line":414,"column":36}},"148":{"start":{"line":415,"column":4},"end":{"line":415,"column":12}},"149":{"start":{"line":416,"column":4},"end":{"line":428,"column":5}},"150":{"start":{"line":418,"column":8},"end":{"line":418,"column":79}},"151":{"start":{"line":419,"column":8},"end":{"line":419,"column":14}},"152":{"start":{"line":421,"column":8},"end":{"line":421,"column":27}},"153":{"start":{"line":422,"column":8},"end":{"line":422,"column":14}},"154":{"start":{"line":424,"column":8},"end":{"line":424,"column":29}},"155":{"start":{"line":425,"column":8},"end":{"line":425,"column":14}},"156":{"start":{"line":427,"column":8},"end":{"line":427,"column":19}},"157":{"start":{"line":430,"column":4},"end":{"line":432,"column":5}},"158":{"start":{"line":431,"column":6},"end":{"line":431,"column":39}},"159":{"start":{"line":435,"column":4},"end":{"line":443,"column":5}},"160":{"start":{"line":436,"column":6},"end":{"line":439,"column":7}},"161":{"start":{"line":437,"column":8},"end":{"line":437,"column":30}},"162":{"start":{"line":438,"column":8},"end":{"line":438,"column":14}},"163":{"start":{"line":440,"column":6},"end":{"line":440,"column":35}},"164":{"start":{"line":441,"column":6},"end":{"line":441,"column":24}},"165":{"start":{"line":442,"column":6},"end":{"line":442,"column":61}},"166":{"start":{"line":444,"column":4},"end":{"line":446,"column":5}},"167":{"start":{"line":445,"column":6},"end":{"line":445,"column":59}},"168":{"start":{"line":447,"column":4},"end":{"line":447,"column":63}},"169":{"start":{"line":448,"column":4},"end":{"line":452,"column":5}},"170":{"start":{"line":449,"column":6},"end":{"line":449,"column":22}},"171":{"start":{"line":451,"column":6},"end":{"line":451,"column":29}},"172":{"start":{"line":453,"column":4},"end":{"line":453,"column":15}},"173":{"start":{"line":463,"column":0},"end":{"line":467,"column":2}},"174":{"start":{"line":464,"column":2},"end":{"line":466,"column":3}},"175":{"start":{"line":465,"column":4},"end":{"line":465,"column":38}},"176":{"start":{"line":470,"column":0},"end":{"line":478,"column":2}},"177":{"start":{"line":471,"column":2},"end":{"line":476,"column":3}},"178":{"start":{"line":472,"column":4},"end":{"line":472,"column":20}},"179":{"start":{"line":473,"column":4},"end":{"line":475,"column":7}},"180":{"start":{"line":474,"column":6},"end":{"line":474,"column":36}},"181":{"start":{"line":477,"column":2},"end":{"line":477,"column":53}},"182":{"start":{"line":481,"column":0},"end":{"line":481,"column":49}},"183":{"start":{"line":487,"column":0},"end":{"line":565,"column":2}},"184":{"start":{"line":488,"column":2},"end":{"line":490,"column":3}},"185":{"start":{"line":489,"column":4},"end":{"line":489,"column":105}},"186":{"start":{"line":491,"column":2},"end":{"line":491,"column":18}},"187":{"start":{"line":492,"column":2},"end":{"line":492,"column":34}},"188":{"start":{"line":493,"column":2},"end":{"line":493,"column":24}},"189":{"start":{"line":494,"column":2},"end":{"line":494,"column":33}},"190":{"start":{"line":495,"column":2},"end":{"line":495,"column":41}},"191":{"start":{"line":497,"column":2},"end":{"line":497,"column":86}},"192":{"start":{"line":499,"column":2},"end":{"line":513,"column":5}},"193":{"start":{"line":502,"column":8},"end":{"line":506,"column":11}},"194":{"start":{"line":503,"column":42},"end":{"line":503,"column":83}},"195":{"start":{"line":505,"column":10},"end":{"line":505,"column":58}},"196":{"start":{"line":510,"column":8},"end":{"line":510,"column":42}},"197":{"start":{"line":515,"column":2},"end":{"line":526,"column":3}},"198":{"start":{"line":516,"column":4},"end":{"line":516,"column":44}},"199":{"start":{"line":517,"column":4},"end":{"line":517,"column":86}},"200":{"start":{"line":518,"column":4},"end":{"line":525,"column":7}},"201":{"start":{"line":519,"column":6},"end":{"line":519,"column":43}},"202":{"start":{"line":520,"column":6},"end":{"line":522,"column":9}},"203":{"start":{"line":521,"column":8},"end":{"line":521,"column":72}},"204":{"start":{"line":523,"column":6},"end":{"line":524,"column":76}},"205":{"start":{"line":528,"column":2},"end":{"line":537,"column":3}},"206":{"start":{"line":529,"column":4},"end":{"line":529,"column":43}},"207":{"start":{"line":530,"column":4},"end":{"line":530,"column":35}},"208":{"start":{"line":531,"column":4},"end":{"line":535,"column":7}},"209":{"start":{"line":532,"column":6},"end":{"line":532,"column":32}},"210":{"start":{"line":533,"column":6},"end":{"line":534,"column":41}},"211":{"start":{"line":533,"column":17},"end":{"line":533,"column":38}},"212":{"start":{"line":534,"column":13},"end":{"line":534,"column":39}},"213":{"start":{"line":536,"column":4},"end":{"line":536,"column":28}},"214":{"start":{"line":539,"column":2},"end":{"line":564,"column":3}},"215":{"start":{"line":540,"column":4},"end":{"line":540,"column":73}},"216":{"start":{"line":541,"column":4},"end":{"line":541,"column":33}},"217":{"start":{"line":542,"column":4},"end":{"line":563,"column":33}},"218":{"start":{"line":544,"column":8},"end":{"line":544,"column":58}},"219":{"start":{"line":545,"column":8},"end":{"line":561,"column":9}},"220":{"start":{"line":546,"column":10},"end":{"line":546,"column":36}},"221":{"start":{"line":547,"column":10},"end":{"line":550,"column":13}},"222":{"start":{"line":548,"column":12},"end":{"line":549,"column":76}},"223":{"start":{"line":551,"column":10},"end":{"line":558,"column":11}},"224":{"start":{"line":552,"column":12},"end":{"line":552,"column":90}},"225":{"start":{"line":553,"column":12},"end":{"line":555,"column":15}},"226":{"start":{"line":554,"column":14},"end":{"line":554,"column":84}},"227":{"start":{"line":554,"column":53},"end":{"line":554,"column":80}},"228":{"start":{"line":557,"column":12},"end":{"line":557,"column":22}},"229":{"start":{"line":560,"column":10},"end":{"line":560,"column":71}},"230":{"start":{"line":560,"column":53},"end":{"line":560,"column":67}},"231":{"start":{"line":573,"column":0},"end":{"line":581,"column":2}},"232":{"start":{"line":574,"column":2},"end":{"line":574,"column":18}},"233":{"start":{"line":575,"column":2},"end":{"line":575,"column":34}},"234":{"start":{"line":576,"column":2},"end":{"line":580,"column":24}},"235":{"start":{"line":577,"column":4},"end":{"line":577,"column":35}},"236":{"start":{"line":578,"column":4},"end":{"line":578,"column":60}},"237":{"start":{"line":579,"column":4},"end":{"line":579,"column":35}},"238":{"start":{"line":589,"column":0},"end":{"line":594,"column":2}},"239":{"start":{"line":590,"column":2},"end":{"line":590,"column":18}},"240":{"start":{"line":591,"column":2},"end":{"line":593,"column":23}},"241":{"start":{"line":592,"column":43},"end":{"line":592,"column":87}},"242":{"start":{"line":604,"column":0},"end":{"line":604,"column":68}},"243":{"start":{"line":612,"column":0},"end":{"line":612,"column":49}},"244":{"start":{"line":620,"column":0},"end":{"line":620,"column":52}},"245":{"start":{"line":646,"column":0},"end":{"line":668,"column":2}},"246":{"start":{"line":649,"column":2},"end":{"line":652,"column":3}},"247":{"start":{"line":650,"column":4},"end":{"line":650,"column":20}},"248":{"start":{"line":651,"column":4},"end":{"line":651,"column":16}},"249":{"start":{"line":653,"column":2},"end":{"line":653,"column":54}},"250":{"start":{"line":654,"column":2},"end":{"line":656,"column":3}},"251":{"start":{"line":655,"column":4},"end":{"line":655,"column":87}},"252":{"start":{"line":657,"column":2},"end":{"line":657,"column":52}},"253":{"start":{"line":658,"column":2},"end":{"line":658,"column":33}},"254":{"start":{"line":659,"column":2},"end":{"line":662,"column":4}},"255":{"start":{"line":660,"column":4},"end":{"line":661,"column":34}},"256":{"start":{"line":660,"column":43},"end":{"line":660,"column":64}},"257":{"start":{"line":661,"column":11},"end":{"line":661,"column":32}},"258":{"start":{"line":663,"column":2},"end":{"line":666,"column":30}},"259":{"start":{"line":665,"column":36},"end":{"line":665,"column":58}},"260":{"start":{"line":667,"column":2},"end":{"line":667,"column":45}},"261":{"start":{"line":678,"column":0},"end":{"line":701,"column":2}},"262":{"start":{"line":679,"column":2},"end":{"line":682,"column":3}},"263":{"start":{"line":680,"column":4},"end":{"line":680,"column":20}},"264":{"start":{"line":681,"column":4},"end":{"line":681,"column":16}},"265":{"start":{"line":683,"column":2},"end":{"line":683,"column":54}},"266":{"start":{"line":684,"column":2},"end":{"line":686,"column":3}},"267":{"start":{"line":685,"column":4},"end":{"line":685,"column":87}},"268":{"start":{"line":687,"column":2},"end":{"line":687,"column":111}},"269":{"start":{"line":688,"column":2},"end":{"line":688,"column":52}},"270":{"start":{"line":689,"column":2},"end":{"line":689,"column":33}},"271":{"start":{"line":690,"column":2},"end":{"line":693,"column":4}},"272":{"start":{"line":691,"column":4},"end":{"line":692,"column":34}},"273":{"start":{"line":691,"column":43},"end":{"line":691,"column":64}},"274":{"start":{"line":692,"column":11},"end":{"line":692,"column":32}},"275":{"start":{"line":694,"column":2},"end":{"line":699,"column":30}},"276":{"start":{"line":698,"column":36},"end":{"line":698,"column":58}},"277":{"start":{"line":700,"column":2},"end":{"line":700,"column":45}},"278":{"start":{"line":713,"column":0},"end":{"line":717,"column":2}},"279":{"start":{"line":714,"column":2},"end":{"line":714,"column":24}},"280":{"start":{"line":715,"column":2},"end":{"line":715,"column":61}},"281":{"start":{"line":715,"column":44},"end":{"line":715,"column":59}},"282":{"start":{"line":716,"column":2},"end":{"line":716,"column":78}},"283":{"start":{"line":726,"column":0},"end":{"line":739,"column":2}},"284":{"start":{"line":727,"column":2},"end":{"line":737,"column":3}},"285":{"start":{"line":728,"column":4},"end":{"line":736,"column":7}},"286":{"start":{"line":729,"column":6},"end":{"line":731,"column":9}},"287":{"start":{"line":730,"column":8},"end":{"line":730,"column":28}},"288":{"start":{"line":733,"column":6},"end":{"line":735,"column":9}},"289":{"start":{"line":734,"column":8},"end":{"line":734,"column":22}},"290":{"start":{"line":738,"column":2},"end":{"line":738,"column":14}},"291":{"start":{"line":753,"column":0},"end":{"line":756,"column":2}},"292":{"start":{"line":754,"column":2},"end":{"line":754,"column":43}},"293":{"start":{"line":755,"column":2},"end":{"line":755,"column":24}},"294":{"start":{"line":758,"column":0},"end":{"line":758,"column":26}},"295":{"start":{"line":764,"column":0},"end":{"line":766,"column":2}},"296":{"start":{"line":765,"column":2},"end":{"line":765,"column":74}},"297":{"start":{"line":774,"column":0},"end":{"line":776,"column":2}},"298":{"start":{"line":775,"column":2},"end":{"line":775,"column":22}},"299":{"start":{"line":784,"column":0},"end":{"line":788,"column":2}},"300":{"start":{"line":787,"column":2},"end":{"line":787,"column":61}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":9},"end":{"line":40,"column":9}},{"start":{"line":40,"column":9},"end":{"line":40,"column":9}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":13},"end":{"line":40,"column":27}},{"start":{"line":40,"column":31},"end":{"line":40,"column":63}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":5},"end":{"line":54,"column":12}},{"start":{"line":54,"column":16},"end":{"line":54,"column":18}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"7":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":17}},{"start":{"line":76,"column":21},"end":{"line":76,"column":24}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"9":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":9},"end":{"line":79,"column":9}},{"start":{"line":79,"column":9},"end":{"line":79,"column":9}}]},"10":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":13},"end":{"line":79,"column":31}},{"start":{"line":79,"column":35},"end":{"line":79,"column":53}}]},"11":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"12":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"13":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"14":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"15":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"16":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"17":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":22}},{"start":{"line":162,"column":26},"end":{"line":162,"column":41}}]},"18":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"19":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"20":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":11},"end":{"line":197,"column":18}},{"start":{"line":197,"column":22},"end":{"line":197,"column":35}}]},"21":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":12},"end":{"line":198,"column":19}},{"start":{"line":198,"column":24},"end":{"line":198,"column":38}},{"start":{"line":198,"column":42},"end":{"line":198,"column":54}}]},"22":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":17}},{"start":{"line":199,"column":21},"end":{"line":199,"column":33}}]},"23":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"24":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":19},"end":{"line":204,"column":33}},{"start":{"line":204,"column":37},"end":{"line":204,"column":39}}]},"25":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"26":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":2},"end":{"line":307,"column":2}},{"start":{"line":307,"column":2},"end":{"line":307,"column":2}}]},"27":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"29":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":12},"end":{"line":321,"column":19}},{"start":{"line":321,"column":23},"end":{"line":321,"column":25}}]},"30":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":13},"end":{"line":323,"column":28}},{"start":{"line":323,"column":32},"end":{"line":323,"column":53}}]},"31":{"line":324,"type":"binary-expr","locations":[{"start":{"line":324,"column":20},"end":{"line":324,"column":42}},{"start":{"line":324,"column":46},"end":{"line":324,"column":74}}]},"32":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":15},"end":{"line":325,"column":32}},{"start":{"line":325,"column":36},"end":{"line":325,"column":59}}]},"33":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":14},"end":{"line":326,"column":30}},{"start":{"line":326,"column":34},"end":{"line":326,"column":56}}]},"34":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":13},"end":{"line":327,"column":28}},{"start":{"line":327,"column":32},"end":{"line":327,"column":53}}]},"35":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"36":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"37":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":4},"end":{"line":357,"column":4}},{"start":{"line":357,"column":4},"end":{"line":357,"column":4}}]},"38":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":8},"end":{"line":357,"column":58}},{"start":{"line":357,"column":63},"end":{"line":357,"column":77}},{"start":{"line":357,"column":81},"end":{"line":357,"column":89}}]},"39":{"line":399,"type":"cond-expr","locations":[{"start":{"line":400,"column":4},"end":{"line":400,"column":53}},{"start":{"line":401,"column":4},"end":{"line":405,"column":6}}]},"40":{"line":404,"type":"cond-expr","locations":[{"start":{"line":404,"column":54},"end":{"line":404,"column":64}},{"start":{"line":404,"column":67},"end":{"line":404,"column":74}}]},"41":{"line":416,"type":"switch","locations":[{"start":{"line":417,"column":6},"end":{"line":419,"column":14}},{"start":{"line":420,"column":6},"end":{"line":422,"column":14}},{"start":{"line":423,"column":6},"end":{"line":425,"column":14}},{"start":{"line":426,"column":6},"end":{"line":427,"column":19}}]},"42":{"line":418,"type":"cond-expr","locations":[{"start":{"line":418,"column":56},"end":{"line":418,"column":71}},{"start":{"line":418,"column":74},"end":{"line":418,"column":78}}]},"43":{"line":418,"type":"binary-expr","locations":[{"start":{"line":418,"column":14},"end":{"line":418,"column":26}},{"start":{"line":418,"column":30},"end":{"line":418,"column":53}}]},"44":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"45":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":436,"column":6}},{"start":{"line":436,"column":6},"end":{"line":436,"column":6}}]},"46":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"47":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":21},"end":{"line":447,"column":35}},{"start":{"line":447,"column":39},"end":{"line":447,"column":48}},{"start":{"line":447,"column":52},"end":{"line":447,"column":62}}]},"48":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":448,"column":4}},{"start":{"line":448,"column":4},"end":{"line":448,"column":4}}]},"49":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":2},"end":{"line":464,"column":2}},{"start":{"line":464,"column":2},"end":{"line":464,"column":2}}]},"50":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":6},"end":{"line":464,"column":21}},{"start":{"line":464,"column":25},"end":{"line":464,"column":40}}]},"51":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":2},"end":{"line":471,"column":2}},{"start":{"line":471,"column":2},"end":{"line":471,"column":2}}]},"52":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":2},"end":{"line":488,"column":2}},{"start":{"line":488,"column":2},"end":{"line":488,"column":2}}]},"53":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":15},"end":{"line":495,"column":34}},{"start":{"line":495,"column":38},"end":{"line":495,"column":40}}]},"54":{"line":500,"type":"cond-expr","locations":[{"start":{"line":500,"column":35},"end":{"line":500,"column":59}},{"start":{"line":500,"column":62},"end":{"line":500,"column":67}}]},"55":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":12},"end":{"line":509,"column":26}},{"start":{"line":509,"column":30},"end":{"line":509,"column":32}}]},"56":{"line":521,"type":"binary-expr","locations":[{"start":{"line":521,"column":16},"end":{"line":521,"column":35}},{"start":{"line":521,"column":39},"end":{"line":521,"column":41}}]},"57":{"line":523,"type":"cond-expr","locations":[{"start":{"line":523,"column":29},"end":{"line":523,"column":55}},{"start":{"line":524,"column":8},"end":{"line":524,"column":75}}]},"58":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":6},"end":{"line":533,"column":6}},{"start":{"line":533,"column":6},"end":{"line":533,"column":6}}]},"59":{"line":542,"type":"cond-expr","locations":[{"start":{"line":543,"column":6},"end":{"line":562,"column":8}},{"start":{"line":563,"column":6},"end":{"line":563,"column":32}}]},"60":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":8},"end":{"line":545,"column":8}},{"start":{"line":545,"column":8},"end":{"line":545,"column":8}}]},"61":{"line":548,"type":"binary-expr","locations":[{"start":{"line":548,"column":19},"end":{"line":548,"column":37}},{"start":{"line":549,"column":19},"end":{"line":549,"column":75}}]},"62":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":10},"end":{"line":551,"column":10}},{"start":{"line":551,"column":10},"end":{"line":551,"column":10}}]},"63":{"line":552,"type":"cond-expr","locations":[{"start":{"line":552,"column":59},"end":{"line":552,"column":80}},{"start":{"line":552,"column":83},"end":{"line":552,"column":89}}]},"64":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":25},"end":{"line":591,"column":35}},{"start":{"line":592,"column":4},"end":{"line":592,"column":90}}]},"65":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":2},"end":{"line":649,"column":2}},{"start":{"line":649,"column":2},"end":{"line":649,"column":2}}]},"66":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":9},"end":{"line":653,"column":13}},{"start":{"line":653,"column":18},"end":{"line":653,"column":30}},{"start":{"line":653,"column":34},"end":{"line":653,"column":52}}]},"67":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":2},"end":{"line":654,"column":2}},{"start":{"line":654,"column":2},"end":{"line":654,"column":2}}]},"68":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":4},"end":{"line":660,"column":4}},{"start":{"line":660,"column":4},"end":{"line":660,"column":4}}]},"69":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":2},"end":{"line":679,"column":2}},{"start":{"line":679,"column":2},"end":{"line":679,"column":2}}]},"70":{"line":683,"type":"binary-expr","locations":[{"start":{"line":683,"column":9},"end":{"line":683,"column":13}},{"start":{"line":683,"column":18},"end":{"line":683,"column":30}},{"start":{"line":683,"column":34},"end":{"line":683,"column":52}}]},"71":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":2},"end":{"line":684,"column":2}},{"start":{"line":684,"column":2},"end":{"line":684,"column":2}}]},"72":{"line":687,"type":"cond-expr","locations":[{"start":{"line":687,"column":45},"end":{"line":687,"column":70}},{"start":{"line":687,"column":73},"end":{"line":687,"column":110}}]},"73":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":4},"end":{"line":691,"column":4}},{"start":{"line":691,"column":4},"end":{"line":691,"column":4}}]},"74":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":2},"end":{"line":715,"column":2}},{"start":{"line":715,"column":2},"end":{"line":715,"column":2}}]},"75":{"line":715,"type":"binary-expr","locations":[{"start":{"line":715,"column":6},"end":{"line":715,"column":21}},{"start":{"line":715,"column":25},"end":{"line":715,"column":40}}]},"76":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":2},"end":{"line":727,"column":2}},{"start":{"line":727,"column":2},"end":{"line":727,"column":2}}]}},"code":["/*global process*/","/**"," * @file Manages query for records in Salesforce"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var inherits = require('inherits'),","    events = require('events'),","    stream = require('readable-stream'),","    _      = require('lodash/core'),","    Promise = require('./promise'),","    SfDate = require(\"./date\"),","    SOQLBuilder = require(\"./soql-builder\"),","    RecordStream = require(\"./record-stream\");","","/**"," * Query"," *"," * @protected"," * @class"," * @extends {stream.Readable}"," * @implements Promise.<T>"," * @template T"," * @param {Connection} conn - Connection object"," * @param {Object|String} config - Query config object or SOQL string"," * @param {Object} [options] - Default query options"," * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not"," * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode"," * @param {Boolean} [options.scanAll] - Including deleted records for query target or not"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," */","var Query = module.exports = function(conn, config, options) {","  Query.super_.call(this, { objectMode: true });","","  this._conn = conn;","  if (_.isString(config)) { // if query config is string, it is given in SOQL.","    this._soql = config;","  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records","    this._locator = config.locator.split(\"/\").pop();","  } else {","    this._config = config;","    this.select(config.fields);","    if (config.includes) {","      this.include(config.includes);","    }","  }","  this._options = _.defaults({","    maxFetch: 10000,","    autoFetch: false,","    scanAll: false,","    responseTarget: ResponseTargets.QueryResult","  }, options || {});","  this._executed = false;","  this._finished = false;","  this._chaining = false;","","  this._deferred = Promise.defer();","","  var self = this;","};","","inherits(Query, stream.Readable);","","/**"," * Select fields to include in the returning result"," *"," * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names."," * @returns {Query.<T>}"," */","Query.prototype.select = function(fields) {","  if (this._soql) {","    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");","  }","  fields = fields || '*';","  if (_.isString(fields)) {","    fields = fields.split(/\\s*,\\s*/);","  } else if (_.isObject(fields) && !_.isArray(fields)) {","    var _fields =  [];","    for (var k in fields) {","      if (fields[k]) { _fields.push(k); }","    }","    fields = _fields;","  }","  this._config.fields = fields;","  return this;","};","","/**"," * Set query conditions to filter the result records"," *"," * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string."," * @returns {Query.<T>}"," */","Query.prototype.where = function(conditions) {","  if (this._soql) {","    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");","  }","  this._config.conditions = conditions;","  return this;","};","","/**"," * Limit the returning result"," *"," * @param {Number} limit - Maximum number of records the query will return."," * @returns {Query.<T>}"," */","Query.prototype.limit = function(limit) {","  if (this._soql) {","    throw Error(\"Cannot set limit for the query which has already built SOQL.\");","  }","  this._config.limit = limit;","  return this;","};","","/**"," * Synonym of Query#skip()"," *"," * @method Query#offset"," * @param {Number} offset - Offset number where begins returning results."," * @returns {Query.<T>}"," */","/**"," * Skip records"," *"," * @method Query#offset"," * @param {Number} offset - Offset number where begins returning results."," * @returns {Query.<T>}"," */","Query.prototype.skip =","Query.prototype.offset = function(offset) {","  if (this._soql) {","    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");","  }","  this._config.offset = offset;","  return this;","};","","/**"," * Synonym of Query#sort()"," *"," * @memthod Query#orderby"," * @param {String|Object} sort - Sorting field or hash object with field name and sord direction"," * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)"," * @returns {Query.<T>}"," */","/**"," * Set query sort with direction"," *"," * @method Query#sort"," * @param {String|Object} sort - Sorting field or hash object with field name and sord direction"," * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)"," * @returns {Query.<T>}"," */","Query.prototype.sort =","Query.prototype.orderby = function(sort, dir) {","  if (this._soql) {","    throw Error(\"Cannot set sort for the query which has already built SOQL.\");","  }","  if (_.isString(sort) && _.isString(dir)) {","    sort = [ [ sort, dir ] ];","  }","  this._config.sort = sort;","  return this;","};","","/**"," * Include child relationship query"," *"," * @param {String} childRelName - Child relationship name to include in query result"," * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string."," * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names."," * @param {Object} [options] - Optional query configulations."," * @param {Number} [options.limit] - Maximum number of records the query will return."," * @param {Number} [options.offset] - Offset number where begins returning results."," * @param {Number} [options.skip] - Synonym of options.offset."," * @returns {Query~SubQuery}"," */","Query.prototype.include = function(childRelName, conditions, fields, options) {","  if (this._soql) {","    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");","  }","  if (_.isObject(childRelName)) {","    var includes = childRelName;","    for (var crname in includes) {","      var config = includes[crname];","      this.include(crname, config.conditions, config.fields, config);","    }","    return;","  }","  var childConfig = {","    table: childRelName,","    conditions: conditions,","    fields: fields,","    limit: options && options.limit,","    offset: options && (options.offset || options.skip),","    sort: options && options.sort","  };","  if (!_.isArray(this._config.includes)) this._config.includes = [];","  this._config.includes.push(childConfig);","  var childQuery = new SubQuery(this._conn, this, childConfig);","  this._children = this._children || [];","  this._children.push(childQuery);","  return childQuery;","};","","","/**"," * Setting maxFetch query option"," *"," * @param {Number} maxFetch - Max fetching records in auto fetch mode"," * @returns {Query.<T>}"," */","Query.prototype.maxFetch = function(maxFetch) {","  this._options.maxFetch = maxFetch;","  return this;","};","","/**"," * Switching auto fetch mode"," *"," * @param {Boolean} autoFetch - Using auto fetch mode or not"," * @returns {Query.<T>}"," */","Query.prototype.autoFetch = function(autoFetch) {","  this._options.autoFetch = autoFetch;","  return this;","};","","/**"," * Set flag to scan all records including deleted and archived."," *"," * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false."," * @returns {Query.<T>}"," */","Query.prototype.scanAll = function(scanAll) {","  this._options.scanAll = scanAll;","  return this;","};","","/**"," * @private"," */","var ResponseTargets = Query.ResponseTargets = {};","[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {","  ResponseTargets[f] = f;","});","","/**"," * @protected"," * @param {String} responseTarget - Query response target"," * @returns {Query.<S>}"," */","Query.prototype.setResponseTarget = function(responseTarget) {","  if (responseTarget in ResponseTargets) {","    this._options.responseTarget = responseTarget;","  }","  return this;","};","","","/**"," * Synonym of Query#execute()"," *"," * @method Query#run"," * @param {Object} [options] - Query options"," * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not"," * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode"," * @param {Boolean} [options.scanAll] - Including deleted records for query target or not"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," * @param {Callback.<T>} [callback] - Callback function"," * @returns {Query.<T>}"," */","Query.prototype.run =","/**"," * Synonym of Query#execute()"," *"," * @method Query#exec"," * @param {Object} [options] - Query options"," * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not"," * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode"," * @param {Boolean} [options.scanAll] - Including deleted records for query target or not"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," * @param {Callback.<T>} [callback] - Callback function"," * @returns {Query.<T>}"," */","Query.prototype.exec =","/**"," * Execute query and fetch records from server."," *"," * @method Query#execute"," * @param {Object} [options] - Query options"," * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not"," * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode"," * @param {Boolean} [options.scanAll] - Including deleted records for query target or not"," * @param {Object} [options.headers] - Additional HTTP request headers sent in query request"," * @param {Callback.<T>} [callback] - Callback function"," * @returns {Query.<T>}"," */","Query.prototype.execute = function(options, callback) {","  var self = this;","  var logger = this._conn._logger;","  var deferred = this._deferred;","","  if (this._executed) {","    deferred.reject(new Error(\"re-executing already executed query\"));","    return this;","  }","","  if (this._finished) {","    deferred.reject(new Error(\"executing already closed query\"));","    return this;","  }","","  if (typeof options === \"function\") {","    callback = options;","    options = {};","  }","  options = options || {};","  options = {","    headers: options.headers || self._options.headers,","    responseTarget: options.responseTarget || self._options.responseTarget,","    autoFetch: options.autoFetch || self._options.autoFetch,","    maxFetch: options.maxFetch || self._options.maxFetch,","    scanAll: options.scanAll || self._options.scanAll","  };","","  // callback and promise resolution;","  var promiseCallback = function(err, res) {","    if (_.isFunction(callback)) {","      try {","        res = callback(err, res);","        err = null;","      } catch(e) {","        err = e;","      }","    }","    if (err) {","      deferred.reject(err);","    } else {","      deferred.resolve(res);","    }","  };","  this.once('response', function(res) {","    promiseCallback(null, res);","  });","  this.once('error', function(err) {","    promiseCallback(err);","  });","","  // collect fetched records in array","  // only when response target is Records and","  // either callback or chaining promises are available to this query.","  this.once('fetch', function() {","    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {","      logger.debug('--- collecting all fetched records ---');","      var records = [];","      var onRecord = function(record) {","        records.push(record);","      };","      self.on('record', onRecord);","      self.once('end', function() {","        self.removeListener('record', onRecord);","        self.emit('response', records, self);","      });","    }","  });","","  // flag to prevent re-execution","  this._executed = true;","","  // start actual query","  logger.debug('>>> Query start >>>');","  this._execute(options).then(function() {","    logger.debug('*** Query finished ***');","  }).fail(function(err) {","    logger.debug('--- Query error ---');","    self.emit('error', err);","  });","","  // return Query instance for chaining","  return this;","};","","/**"," * @private"," */","Query.prototype._execute = function(options) {","  var self = this;","  var logger = this._conn._logger;","  var responseTarget = options.responseTarget;","  var autoFetch = options.autoFetch;","  var maxFetch = options.maxFetch;","  var scanAll = options.scanAll;","","  return Promise.resolve(","    self._locator ?","    self._conn._baseUrl() + \"/query/\" + self._locator :","    self.toSOQL().then(function(soql) {","      self.totalFetched = 0;","      logger.debug(\"SOQL = \" + soql);","      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);","    })","  ).then(function(url) {","    return self._conn.request({","      method: 'GET',","      url: url,","      headers: options.headers","    });","  }).then(function(data) {","    self.emit(\"fetch\");","    self.totalSize = data.totalSize;","    var res;","    switch(responseTarget) {","      case ResponseTargets.SingleRecord:","        res = data.records && data.records.length > 0 ? data.records[0] : null;","        break;","      case ResponseTargets.Records:","        res = data.records;","        break;","      case ResponseTargets.Count:","        res = data.totalSize;","        break;","      default:","        res = data;","    }","    // only fire response event when it should be notified per fetch","    if (responseTarget !== ResponseTargets.Records) {","      self.emit(\"response\", res, self);","    }","","    // streaming record instances","    for (var i=0, l=data.records.length; i<l; i++) {","      if (self.totalFetched >= maxFetch) {","        self._finished = true;","        break;","      }","      var record = data.records[i];","      self.push(record);","      self.emit('record', record, self.totalFetched++, self);","    }","    if (data.nextRecordsUrl) {","      self._locator = data.nextRecordsUrl.split('/').pop();","    }","    self._finished = self._finished || data.done || !autoFetch;","    if (self._finished) {","      self.push(null);","    } else {","      self._execute(options);","    }","    return res;","  });","};","","/**"," * Readable stream implementation"," *"," * @override"," * @private"," */","Query.prototype._read = function(size) {","  if (!this._finished && !this._executed) {","    this.execute({ autoFetch: true });","  }","};","","/** @override **/","Query.prototype.on = function(e, fn) {","  if (e === 'record') {","    var self = this;","    this.on('readable', function() {","      while(self.read() !== null) {} // discard buffered records","    });","  }","  return Query.super_.prototype.on.call(this, e, fn);","};","","/** @override **/","Query.prototype.addListener = Query.prototype.on;","","","/**"," * @private"," */","Query.prototype._expandFields = function() {","  if (this._soql) {","    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));","  }","  var self = this;","  var logger = self._conn._logger;","  var conn = this._conn;","  var table = this._config.table;","  var fields = this._config.fields || [];","","  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));","","  return Promise.all([","    Promise.resolve(self._parent ? findRelationTable(table) : table)","      .then(function(table) {","        return Promise.all(","          _.map(fields, function(field) { return expandAsteriskField(table, field); })","        ).then(function(expandedFields) {","          self._config.fields = _.flatten(expandedFields);","        });","      }),","    Promise.all(","      _.map(self._children || [], function(childQuery) {","        return childQuery._expandFields();","      })","    )","  ]);","","  function findRelationTable(rname) {","    var ptable = self._parent._config.table;","    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');","    return describeCache(ptable).then(function(sobject) {","      var upperRname = rname.toUpperCase();","      var childRelation = _.find(sobject.childRelationships, function(cr) {","        return (cr.relationshipName || '').toUpperCase() === upperRname;","      });","      return childRelation ? childRelation.childSObject :","        Promise.reject(new Error(\"No child relationship found: \" + rname ));","    });","  }","","  function describeCache(table) {","    logger.debug('describe cache: '+table);","    var deferred = Promise.defer();","    conn.describe$(table, function(err, sobject) {","      logger.debug('... done.');","      if (err) { deferred.reject(err); }","      else { deferred.resolve(sobject); }","    });","    return deferred.promise;","  }","","  function expandAsteriskField(table, field) {","    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');","    var fpath = field.split('.');","    return fpath[fpath.length - 1] === '*' ?","      describeCache(table).then(function(sobject) {","        logger.debug('table '+table+'has been described');","        if (fpath.length > 1) {","          var rname = fpath.shift();","          var rfield = _.find(sobject.fields, function(f) {","            return f.relationshipName &&","                   f.relationshipName.toUpperCase() === rname.toUpperCase();","          });","          if (rfield) {","            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';","            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {","              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });","            });","          } else {","            return [];","          }","        } else {","          return _.map(sobject.fields, function(f) { return f.name; });","        }","      }) :","      Promise.resolve([ field ]);","  }","};","","/**"," * Explain plan for executing query"," *"," * @param {Callback.<ExplainInfo>} [callback] - Callback function"," * @returns {Promise.<ExplainInfo>}"," */","Query.prototype.explain = function(callback) {","  var self = this;","  var logger = this._conn._logger;","  return self.toSOQL().then(function(soql) {","    logger.debug(\"SOQL = \" + soql);","    var url = \"/query/?explain=\" + encodeURIComponent(soql);","    return self._conn.request(url);","  }).thenCall(callback);","};","","/**"," * Return SOQL expression for the query"," *"," * @param {Callback.<String>} [callback] - Callback function"," * @returns {Promise.<String>}"," */","Query.prototype.toSOQL = function(callback) {","  var self = this;","  return Promise.resolve(self._soql ||","    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })","  ).thenCall(callback);","};","","/**"," * Create data stream of queried records."," * Automatically resume query if paused."," *"," * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported."," * @param {Object} [options] - Options passed to converter"," * @returns {stream.Readable}"," */","Query.prototype.stream = RecordStream.Serializable.prototype.stream;","","/**"," * Get record stream of queried records applying the given mapping function"," *"," * @param {RecordMapFunction} fn - Record mapping function"," * @returns {RecordStream.Serializable}"," */","Query.prototype.map = RecordStream.prototype.map;","","/**"," * Get record stream of queried records, applying the given filter function"," *"," * @param {RecordFilterFunction} fn - Record filtering function"," * @returns {RecordStream.Serializable}"," */","Query.prototype.filter = RecordStream.prototype.map;","","/**"," * Synonym of Query#destroy()"," *"," * @method Query#delete"," * @param {String} [type] - SObject type. Required for SOQL based query object."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","/**"," * Synonym of Query#destroy()"," *"," * @method Query#del"," * @param {String} [type] - SObject type. Required for SOQL based query object."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","/**"," * Bulk delete queried records"," *"," * @method Query#destroy"," * @param {String} [type] - SObject type. Required for SOQL based query object."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<RecordResult>>}"," */","Query.prototype[\"delete\"] =","Query.prototype.del =","Query.prototype.destroy = function(type, callback) {","  if (typeof type === 'function') {","    callback = type;","    type = null;","  }","  type = type || (this._config && this._config.table);","  if (!type) {","    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");","  }","  var batch = this._conn.sobject(type).deleteBulk();","  var deferred = Promise.defer();","  var handleError = function(err) {","    if (err.name === 'ClientInputError') { deferred.resolve([]); } // if batch input receives no records","    else { deferred.reject(err); }","  };","  this.on('error', handleError)","    .pipe(batch)","    .on('response', function(res) { deferred.resolve(res); })","    .on('error', handleError);","  return deferred.promise.thenCall(callback);","};","","/**"," * Bulk update queried records, using given mapping function/object"," *"," * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function"," * @param {String} [type] - SObject type. Required for SOQL based query object."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<RecordResult>>}"," */","Query.prototype.update = function(mapping, type, callback) {","  if (typeof type === 'function') {","    callback = type;","    type = null;","  }","  type = type || (this._config && this._config.table);","  if (!type) {","    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");","  }","  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);","  var batch = this._conn.sobject(type).updateBulk();","  var deferred = Promise.defer();","  var handleError = function(err) {","    if (err.name === 'ClientInputError') { deferred.resolve([]); } // if batch input receives no records","    else { deferred.reject(err); }","  };","  this.on('error', handleError)","    .pipe(updateStream)","    .on('error', handleError)","    .pipe(batch)","    .on('response', function(res) { deferred.resolve(res); })","    .on('error', handleError);","  return deferred.promise.thenCall(callback);","};","","/**"," * Promise/A+ interface"," * http://promises-aplus.github.io/promises-spec/"," *"," * Delegate to deferred promise, return promise instance for query result"," *"," * @param {FulfilledCallback.<T, S1>} [onFulfilled]"," * @param {RejectedCallback.<S2>} [onRejected]"," * @returns {Promise.<S1|S2>}"," */","Query.prototype.then = function(onResolved, onReject) {","  this._chaining = true;","  if (!this._finished && !this._executed) { this.execute(); }","  return this._deferred.promise.then.apply(this._deferred.promise, arguments);","};","","/**"," * Promise/A+ extension"," * Call \"then\" using given node-style callback function"," *"," * @param {Callback.<T>} [callback] - Callback function"," * @returns {Query}"," */","Query.prototype.thenCall = function(callback) {","  if (_.isFunction(callback)) {","    this.then(function(res) {","      process.nextTick(function() {","        callback(null, res);","      });","    }, function(err) {","      process.nextTick(function() {","        callback(err);","      });","    });","  }","  return this;","};","","/*--------------------------------------------*/","","/**"," * SubQuery object for representing child relationship query"," *"," * @protected"," * @class Query~SubQuery"," * @extends Query"," * @param {Connection} conn - Connection object"," * @param {Query} parent - Parent query object"," * @param {Object} config - Sub query configuration"," */","var SubQuery = function(conn, parent, config) {","  SubQuery.super_.call(this, conn, config);","  this._parent = parent;","};","","inherits(SubQuery, Query);","","/**"," * @method Query~SubQuery#include"," * @override"," */","SubQuery.prototype.include = function() {","  throw new Error(\"Not allowed to include another subquery in subquery.\");","};","","/**"," * Back the context to parent query object"," *"," * @method Query~SubQuery#end"," * @returns {Query}"," */","SubQuery.prototype.end = function() {","  return this._parent;","};","","/**"," * If execute is called in subquery context, delegate it to parent query object"," *"," * @method Query~SubQuery#execute"," * @override"," */","SubQuery.prototype.run =","SubQuery.prototype.exec =","SubQuery.prototype.execute = function() {","  return this._parent.execute.apply(this._parent, arguments);","};",""],"l":{"9":1,"34":1,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"46":0,"49":0,"55":0,"56":0,"57":0,"59":0,"61":0,"64":1,"72":1,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"86":0,"87":0,"96":1,"97":0,"98":0,"100":0,"101":0,"110":1,"111":0,"112":0,"114":0,"115":0,"132":1,"134":0,"135":0,"137":0,"138":0,"157":1,"159":0,"160":0,"162":0,"163":0,"165":0,"166":0,"181":1,"182":0,"183":0,"185":0,"186":0,"187":0,"188":0,"189":0,"191":0,"193":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"216":1,"217":0,"218":0,"227":1,"228":0,"229":0,"238":1,"239":0,"240":0,"246":1,"247":1,"248":4,"256":1,"257":0,"258":0,"260":0,"276":1,"303":0,"304":0,"305":0,"307":0,"308":0,"309":0,"312":0,"313":0,"314":0,"317":0,"318":0,"319":0,"321":0,"322":0,"331":0,"332":0,"333":0,"334":0,"335":0,"337":0,"340":0,"341":0,"343":0,"346":0,"347":0,"349":0,"350":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"363":0,"364":0,"365":0,"366":0,"372":0,"375":0,"376":0,"377":0,"379":0,"380":0,"384":0,"390":1,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"402":0,"403":0,"404":0,"407":0,"413":0,"414":0,"415":0,"416":0,"418":0,"419":0,"421":0,"422":0,"424":0,"425":0,"427":0,"430":0,"431":0,"435":0,"436":0,"437":0,"438":0,"440":0,"441":0,"442":0,"444":0,"445":0,"447":0,"448":0,"449":0,"451":0,"453":0,"463":1,"464":0,"465":0,"470":1,"471":0,"472":0,"473":0,"474":0,"477":0,"481":1,"487":1,"488":0,"489":0,"491":0,"492":0,"493":0,"494":0,"495":0,"497":0,"499":0,"502":0,"503":0,"505":0,"510":0,"515":1,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"523":0,"528":1,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"536":0,"539":1,"540":0,"541":0,"542":0,"544":0,"545":0,"546":0,"547":0,"548":0,"551":0,"552":0,"553":0,"554":0,"557":0,"560":0,"573":1,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"589":1,"590":0,"591":0,"592":0,"604":1,"612":1,"620":1,"646":1,"649":0,"650":0,"651":0,"653":0,"654":0,"655":0,"657":0,"658":0,"659":0,"660":0,"661":0,"663":0,"665":0,"667":0,"678":1,"679":0,"680":0,"681":0,"683":0,"684":0,"685":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"694":0,"698":0,"700":0,"713":1,"714":0,"715":0,"716":0,"726":1,"727":0,"728":0,"729":0,"730":0,"733":0,"734":0,"738":0,"753":1,"754":0,"755":0,"758":1,"764":1,"765":0,"774":1,"775":0,"784":1,"787":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/date.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/date.js","s":{"1":1,"2":1,"3":23,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1,"59":37,"60":37,"61":1,"62":14,"63":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[23,14]},"f":{"1":23,"2":0,"3":0,"4":0,"5":0,"6":0,"7":14,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":30},"end":{"line":12,"column":48}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":26},"end":{"line":22,"column":37}}},"3":{"name":"zeropad","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":20}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":38}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":27},"end":{"line":54,"column":42}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":19},"end":{"line":78,"column":33}}},"7":{"name":"createLiteralBuilder","line":161,"loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":39}}},"8":{"name":"(anonymous_8)","line":162,"loc":{"start":{"line":162,"column":9},"end":{"line":162,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":26}},"4":{"start":{"line":21,"column":0},"end":{"line":22,"column":63}},"5":{"start":{"line":22,"column":39},"end":{"line":22,"column":60}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":53}},"7":{"start":{"line":26,"column":22},"end":{"line":26,"column":51}},"8":{"start":{"line":34,"column":0},"end":{"line":45,"column":2}},"9":{"start":{"line":35,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":26}},"11":{"start":{"line":37,"column":9},"end":{"line":39,"column":3}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":30}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":29}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":26}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":56}},"17":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"18":{"start":{"line":54,"column":0},"end":{"line":70,"column":2}},"19":{"start":{"line":55,"column":2},"end":{"line":59,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":26}},"21":{"start":{"line":57,"column":9},"end":{"line":59,"column":3}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":34}},"23":{"start":{"line":60,"column":2},"end":{"line":60,"column":33}},"24":{"start":{"line":61,"column":2},"end":{"line":61,"column":32}},"25":{"start":{"line":62,"column":2},"end":{"line":62,"column":29}},"26":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"27":{"start":{"line":64,"column":2},"end":{"line":64,"column":32}},"28":{"start":{"line":65,"column":2},"end":{"line":65,"column":32}},"29":{"start":{"line":66,"column":2},"end":{"line":68,"column":62}},"30":{"start":{"line":69,"column":2},"end":{"line":69,"column":27}},"31":{"start":{"line":78,"column":0},"end":{"line":109,"column":2}},"32":{"start":{"line":79,"column":2},"end":{"line":79,"column":21}},"33":{"start":{"line":80,"column":2},"end":{"line":80,"column":131}},"34":{"start":{"line":81,"column":2},"end":{"line":81,"column":28}},"35":{"start":{"line":82,"column":2},"end":{"line":108,"column":3}},"36":{"start":{"line":83,"column":4},"end":{"line":83,"column":20}},"37":{"start":{"line":84,"column":4},"end":{"line":104,"column":5}},"38":{"start":{"line":85,"column":6},"end":{"line":85,"column":40}},"39":{"start":{"line":86,"column":6},"end":{"line":86,"column":36}},"40":{"start":{"line":87,"column":6},"end":{"line":87,"column":41}},"41":{"start":{"line":88,"column":6},"end":{"line":88,"column":20}},"42":{"start":{"line":89,"column":6},"end":{"line":89,"column":22}},"43":{"start":{"line":90,"column":6},"end":{"line":90,"column":22}},"44":{"start":{"line":91,"column":6},"end":{"line":91,"column":27}},"45":{"start":{"line":93,"column":6},"end":{"line":93,"column":43}},"46":{"start":{"line":94,"column":6},"end":{"line":94,"column":39}},"47":{"start":{"line":95,"column":6},"end":{"line":95,"column":44}},"48":{"start":{"line":96,"column":6},"end":{"line":96,"column":40}},"49":{"start":{"line":97,"column":6},"end":{"line":97,"column":42}},"50":{"start":{"line":98,"column":6},"end":{"line":98,"column":42}},"51":{"start":{"line":99,"column":6},"end":{"line":99,"column":54}},"52":{"start":{"line":100,"column":6},"end":{"line":103,"column":7}},"53":{"start":{"line":101,"column":8},"end":{"line":101,"column":67}},"54":{"start":{"line":102,"column":8},"end":{"line":102,"column":78}},"55":{"start":{"line":105,"column":4},"end":{"line":105,"column":13}},"56":{"start":{"line":107,"column":4},"end":{"line":107,"column":65}},"57":{"start":{"line":114,"column":0},"end":{"line":152,"column":2}},"58":{"start":{"line":154,"column":0},"end":{"line":158,"column":1}},"59":{"start":{"line":155,"column":2},"end":{"line":155,"column":37}},"60":{"start":{"line":156,"column":2},"end":{"line":157,"column":68}},"61":{"start":{"line":161,"column":0},"end":{"line":163,"column":1}},"62":{"start":{"line":162,"column":2},"end":{"line":162,"column":67}},"63":{"start":{"line":162,"column":25},"end":{"line":162,"column":64}}},"branchMap":{"1":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":45}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":9},"end":{"line":37,"column":9}},{"start":{"line":37,"column":9},"end":{"line":37,"column":9}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":9},"end":{"line":57,"column":9}},{"start":{"line":57,"column":9},"end":{"line":57,"column":9}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"8":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":36},"end":{"line":99,"column":40}},{"start":{"line":99,"column":44},"end":{"line":99,"column":47}}]},"9":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"10":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":10},"end":{"line":100,"column":15}},{"start":{"line":100,"column":19},"end":{"line":100,"column":32}}]},"11":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":35},"end":{"line":102,"column":37}},{"start":{"line":102,"column":40},"end":{"line":102,"column":41}}]},"12":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":16},"end":{"line":157,"column":35}},{"start":{"line":157,"column":38},"end":{"line":157,"column":67}}]}},"code":["'use strict';","","var _ = require('lodash/core');","","/**"," * A date object to keep Salesforce date literal"," *"," * @class"," * @constructor"," * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm"," */","var SfDate = module.exports = function(literal) {","  this._literal = literal;","};","","/**"," * Returns literal when converted to string"," *"," * @override"," */","SfDate.prototype.toString =","SfDate.prototype.toJSON = function() { return this._literal; };","","","/** @private **/","function zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }","","/**"," * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)"," *"," * @param {String|Number|Date} date - Input date"," * @returns {SfDate} - Salesforce date literal with ISO8601 date format"," */","SfDate.toDateLiteral = function(date) {","  if (_.isNumber(date)) {","    date = new Date(date);","  } else if (_.isString(date)) {","    date = SfDate.parseDate(date);","  }","  var yy = date.getFullYear();","  var mm = date.getMonth()+1;","  var dd = date.getDate();","  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");","  return new SfDate(dstr);","};","","/**"," * Convert JavaScript date object to ISO8601 DateTime format"," * (e.g. 2012-10-31T12:34:56Z)"," *"," * @param {String|Number|Date} date - Input date"," * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format"," */","SfDate.toDateTimeLiteral = function(date) {","  if (_.isNumber(date)) {","    date = new Date(date);","  } else if (_.isString(date)) {","    date = SfDate.parseDate(date);","  }","  var yy = date.getUTCFullYear();","  var mm = date.getUTCMonth()+1;","  var dd = date.getUTCDate();","  var hh = date.getUTCHours();","  var mi = date.getUTCMinutes();","  var ss = date.getUTCSeconds();","  var dtstr =","    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +","    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";","  return new SfDate(dtstr);","};","","/**"," * Parse IS08601 date(time) formatted string and return date instance"," *"," * @param {String} str"," * @returns {Date}"," */","SfDate.parseDate = function(str) {","  var d = new Date();","  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;","  var m = str.match(regexp);","  if (m) {","    d = new Date(0);","    if (!m[4]) {","      d.setFullYear(parseInt(m[1], 10));","      d.setDate(parseInt(m[3], 10));","      d.setMonth(parseInt(m[2], 10) - 1);","      d.setHours(0);","      d.setMinutes(0);","      d.setSeconds(0);","      d.setMilliseconds(0);","    } else {","      d.setUTCFullYear(parseInt(m[1], 10));","      d.setUTCDate(parseInt(m[3], 10));","      d.setUTCMonth(parseInt(m[2], 10) - 1);","      d.setUTCHours(parseInt(m[5], 10));","      d.setUTCMinutes(parseInt(m[6], 10));","      d.setUTCSeconds(parseInt(m[7], 10));","      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));","      if (m[10] && m[10] !== 'Z') {","        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);","        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());","      }","    }","    return d;","  } else {","    throw new Error(\"Invalid date format is specified : \" + str);","  }","};","","/*"," * Pre-defined Salesforce Date Literals"," */","var SfDateLiterals = {","  YESTERDAY: 1,","  TODAY: 1,","  TOMORROW: 1,","  LAST_WEEK: 1,","  THIS_WEEK: 1,","  NEXT_WEEK: 1,","  LAST_MONTH: 1,","  THIS_MONTH: 1,","  NEXT_MONTH: 1,","  LAST_90_DAYS: 1,","  NEXT_90_DAYS: 1,","  LAST_N_DAYS: 2,","  NEXT_N_DAYS: 2,","  NEXT_N_WEEKS: 2,","  LAST_N_WEEKS: 2,","  NEXT_N_MONTHS: 2,","  LAST_N_MONTHS: 2,","  THIS_QUARTER: 1,","  LAST_QUARTER: 1,","  NEXT_QUARTER: 1,","  NEXT_N_QUARTERS: 2,","  LAST_N_QUARTERS: 2,","  THIS_YEAR: 1,","  LAST_YEAR: 1,","  NEXT_YEAR: 1,","  NEXT_N_YEARS: 2,","  LAST_N_YEARS: 2,","  THIS_FISCAL_QUARTER: 1,","  LAST_FISCAL_QUARTER: 1,","  NEXT_FISCAL_QUARTER: 1,","  NEXT_N_FISCAL_QUARTERS:2,","  LAST_N_FISCAL_QUARTERS:2,","  THIS_FISCAL_YEAR:1,","  LAST_FISCAL_YEAR:1,","  NEXT_FISCAL_YEAR:1,","  NEXT_N_FISCAL_YEARS: 2,","  LAST_N_FISCAL_YEARS: 2","};","","for (var literal in SfDateLiterals) {","  var type = SfDateLiterals[literal];","  SfDate[literal] =","   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);","}","","/** @private **/","function createLiteralBuilder(literal) {","  return function(num) { return new SfDate(literal + \":\" + num); };","}",""],"l":{"3":1,"12":1,"13":23,"21":1,"22":0,"26":1,"34":1,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"54":1,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"105":0,"107":0,"114":1,"154":1,"155":37,"156":37,"161":1,"162":14}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/soql-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/soql-builder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":1,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"createSOQL","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}}},"2":{"name":"createFieldsClause","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":50}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":53},"end":{"line":42,"column":70}}},"4":{"name":"createConditionClause","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":60}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":54}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":32},"end":{"line":64,"column":47}}},"7":{"name":"(anonymous_7)","line":75,"loc":{"start":{"line":75,"column":30},"end":{"line":75,"column":45}}},"8":{"name":"(anonymous_8)","line":91,"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":27}}},"9":{"name":"createFieldExpression","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":45}}},"10":{"name":"createValueExpression","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":38}}},"11":{"name":"escapeSOQLString","line":179,"loc":{"start":{"line":179,"column":0},"end":{"line":179,"column":31}}},"12":{"name":"isArray","line":184,"loc":{"start":{"line":184,"column":0},"end":{"line":184,"column":20}}},"13":{"name":"createOrderByClause","line":190,"loc":{"start":{"line":190,"column":0},"end":{"line":190,"column":35}}},"14":{"name":"(anonymous_14)","line":199,"loc":{"start":{"line":199,"column":33},"end":{"line":199,"column":49}}},"15":{"name":"(anonymous_15)","line":211,"loc":{"start":{"line":211,"column":28},"end":{"line":211,"column":44}}},"16":{"name":"(anonymous_16)","line":216,"loc":{"start":{"line":216,"column":18},"end":{"line":216,"column":30}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":9,"column":31}},"2":{"start":{"line":16,"column":0},"end":{"line":38,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":22,"column":13}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":53}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":29}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":48}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":36}},"12":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":14}},"15":{"start":{"line":41,"column":0},"end":{"line":46,"column":1}},"16":{"start":{"line":42,"column":2},"end":{"line":44,"column":5}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":42}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":62}},"19":{"start":{"line":49,"column":0},"end":{"line":101,"column":1}},"20":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":22}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"24":{"start":{"line":55,"column":2},"end":{"line":55,"column":21}},"25":{"start":{"line":56,"column":2},"end":{"line":74,"column":3}},"26":{"start":{"line":57,"column":4},"end":{"line":62,"column":7}},"27":{"start":{"line":58,"column":6},"end":{"line":61,"column":8}},"28":{"start":{"line":64,"column":4},"end":{"line":73,"column":7}},"29":{"start":{"line":65,"column":6},"end":{"line":65,"column":21}},"30":{"start":{"line":66,"column":6},"end":{"line":71,"column":7}},"31":{"start":{"line":67,"column":8},"end":{"line":70,"column":11}},"32":{"start":{"line":72,"column":6},"end":{"line":72,"column":47}},"33":{"start":{"line":75,"column":2},"end":{"line":91,"column":45}},"34":{"start":{"line":76,"column":4},"end":{"line":76,"column":24}},"35":{"start":{"line":77,"column":4},"end":{"line":90,"column":5}},"36":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"37":{"start":{"line":82,"column":10},"end":{"line":82,"column":20}},"38":{"start":{"line":84,"column":8},"end":{"line":86,"column":19}},"39":{"start":{"line":87,"column":8},"end":{"line":87,"column":56}},"40":{"start":{"line":89,"column":8},"end":{"line":89,"column":59}},"41":{"start":{"line":91,"column":29},"end":{"line":91,"column":41}},"42":{"start":{"line":93,"column":2},"end":{"line":93,"column":12}},"43":{"start":{"line":94,"column":2},"end":{"line":100,"column":3}},"44":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"45":{"start":{"line":96,"column":4},"end":{"line":96,"column":76}},"46":{"start":{"line":98,"column":4},"end":{"line":98,"column":47}},"47":{"start":{"line":99,"column":4},"end":{"line":99,"column":87}},"48":{"start":{"line":103,"column":0},"end":{"line":123,"column":2}},"49":{"start":{"line":126,"column":0},"end":{"line":154,"column":1}},"50":{"start":{"line":127,"column":2},"end":{"line":127,"column":17}},"51":{"start":{"line":130,"column":2},"end":{"line":141,"column":3}},"52":{"start":{"line":130,"column":26},"end":{"line":130,"column":37}},"53":{"start":{"line":132,"column":7},"end":{"line":141,"column":3}},"54":{"start":{"line":133,"column":4},"end":{"line":133,"column":15}},"55":{"start":{"line":134,"column":4},"end":{"line":140,"column":5}},"56":{"start":{"line":135,"column":6},"end":{"line":139,"column":7}},"57":{"start":{"line":136,"column":8},"end":{"line":136,"column":15}},"58":{"start":{"line":137,"column":8},"end":{"line":137,"column":25}},"59":{"start":{"line":138,"column":8},"end":{"line":138,"column":14}},"60":{"start":{"line":142,"column":2},"end":{"line":142,"column":23}},"61":{"start":{"line":143,"column":2},"end":{"line":143,"column":53}},"62":{"start":{"line":143,"column":39},"end":{"line":143,"column":51}},"63":{"start":{"line":144,"column":2},"end":{"line":144,"column":47}},"64":{"start":{"line":145,"column":2},"end":{"line":145,"column":48}},"65":{"start":{"line":145,"column":34},"end":{"line":145,"column":46}},"66":{"start":{"line":146,"column":2},"end":{"line":153,"column":3}},"67":{"start":{"line":148,"column":6},"end":{"line":148,"column":71}},"68":{"start":{"line":150,"column":6},"end":{"line":150,"column":61}},"69":{"start":{"line":152,"column":6},"end":{"line":152,"column":50}},"70":{"start":{"line":157,"column":0},"end":{"line":176,"column":1}},"71":{"start":{"line":158,"column":2},"end":{"line":162,"column":3}},"72":{"start":{"line":159,"column":4},"end":{"line":161,"column":21}},"73":{"start":{"line":163,"column":2},"end":{"line":165,"column":3}},"74":{"start":{"line":164,"column":4},"end":{"line":164,"column":28}},"75":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"76":{"start":{"line":167,"column":4},"end":{"line":167,"column":47}},"77":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"78":{"start":{"line":170,"column":4},"end":{"line":170,"column":30}},"79":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"80":{"start":{"line":173,"column":4},"end":{"line":173,"column":18}},"81":{"start":{"line":175,"column":2},"end":{"line":175,"column":15}},"82":{"start":{"line":179,"column":0},"end":{"line":181,"column":1}},"83":{"start":{"line":180,"column":2},"end":{"line":180,"column":48}},"84":{"start":{"line":184,"column":0},"end":{"line":186,"column":1}},"85":{"start":{"line":185,"column":2},"end":{"line":185,"column":46}},"86":{"start":{"line":190,"column":0},"end":{"line":231,"column":1}},"87":{"start":{"line":191,"column":2},"end":{"line":191,"column":20}},"88":{"start":{"line":192,"column":2},"end":{"line":215,"column":3}},"89":{"start":{"line":193,"column":4},"end":{"line":196,"column":5}},"90":{"start":{"line":195,"column":6},"end":{"line":195,"column":18}},"91":{"start":{"line":199,"column":4},"end":{"line":209,"column":7}},"92":{"start":{"line":200,"column":6},"end":{"line":200,"column":22}},"93":{"start":{"line":201,"column":6},"end":{"line":201,"column":26}},"94":{"start":{"line":202,"column":6},"end":{"line":207,"column":7}},"95":{"start":{"line":203,"column":8},"end":{"line":203,"column":21}},"96":{"start":{"line":204,"column":8},"end":{"line":204,"column":35}},"97":{"start":{"line":205,"column":13},"end":{"line":207,"column":7}},"98":{"start":{"line":206,"column":8},"end":{"line":206,"column":35}},"99":{"start":{"line":208,"column":6},"end":{"line":208,"column":28}},"100":{"start":{"line":210,"column":9},"end":{"line":215,"column":3}},"101":{"start":{"line":211,"column":4},"end":{"line":214,"column":7}},"102":{"start":{"line":212,"column":6},"end":{"line":212,"column":28}},"103":{"start":{"line":213,"column":6},"end":{"line":213,"column":28}},"104":{"start":{"line":216,"column":2},"end":{"line":230,"column":16}},"105":{"start":{"line":217,"column":4},"end":{"line":217,"column":33}},"106":{"start":{"line":218,"column":4},"end":{"line":228,"column":5}},"107":{"start":{"line":224,"column":8},"end":{"line":224,"column":21}},"108":{"start":{"line":225,"column":8},"end":{"line":225,"column":14}},"109":{"start":{"line":227,"column":8},"end":{"line":227,"column":20}},"110":{"start":{"line":229,"column":4},"end":{"line":229,"column":29}},"111":{"start":{"line":234,"column":0},"end":{"line":234,"column":32}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":32},"end":{"line":42,"column":44}},{"start":{"line":42,"column":48},"end":{"line":42,"column":50}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":16}},{"start":{"line":45,"column":20},"end":{"line":45,"column":28}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"8":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":15},"end":{"line":53,"column":25}},{"start":{"line":53,"column":29},"end":{"line":53,"column":31}}]},"9":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":13},"end":{"line":54,"column":21}},{"start":{"line":54,"column":25},"end":{"line":54,"column":30}}]},"10":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":10},"end":{"line":55,"column":15}},{"start":{"line":55,"column":19},"end":{"line":55,"column":20}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"12":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":30},"end":{"line":72,"column":35}},{"start":{"line":72,"column":38},"end":{"line":72,"column":46}}]},"13":{"line":77,"type":"switch","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":18}},{"start":{"line":79,"column":6},"end":{"line":79,"column":19}},{"start":{"line":80,"column":6},"end":{"line":87,"column":56}},{"start":{"line":88,"column":6},"end":{"line":89,"column":59}}]},"14":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"15":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":30}},{"start":{"line":81,"column":34},"end":{"line":81,"column":57}}]},"16":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":34},"end":{"line":84,"column":38}},{"start":{"line":85,"column":13},"end":{"line":86,"column":18}}]},"17":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":35},"end":{"line":85,"column":40}},{"start":{"line":86,"column":13},"end":{"line":86,"column":18}}]},"18":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"19":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":20},"end":{"line":96,"column":23}},{"start":{"line":96,"column":26},"end":{"line":96,"column":28}}]},"20":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":66},"end":{"line":96,"column":69}},{"start":{"line":96,"column":72},"end":{"line":96,"column":74}}]},"21":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":21}},{"start":{"line":98,"column":25},"end":{"line":98,"column":46}}]},"22":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":20},"end":{"line":99,"column":23}},{"start":{"line":99,"column":26},"end":{"line":99,"column":28}}]},"23":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":77},"end":{"line":99,"column":80}},{"start":{"line":99,"column":83},"end":{"line":99,"column":85}}]},"24":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"25":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":7},"end":{"line":132,"column":7}},{"start":{"line":132,"column":7},"end":{"line":132,"column":7}}]},"26":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"27":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"28":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":11}},{"start":{"line":143,"column":15},"end":{"line":143,"column":35}}]},"29":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"30":{"line":146,"type":"switch","locations":[{"start":{"line":147,"column":4},"end":{"line":148,"column":71}},{"start":{"line":149,"column":4},"end":{"line":150,"column":61}},{"start":{"line":151,"column":4},"end":{"line":152,"column":50}}]},"31":{"line":150,"type":"cond-expr","locations":[{"start":{"line":150,"column":30},"end":{"line":150,"column":34}},{"start":{"line":150,"column":37},"end":{"line":150,"column":40}}]},"32":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"33":{"line":159,"type":"cond-expr","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":66}},{"start":{"line":161,"column":11},"end":{"line":161,"column":20}}]},"34":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"35":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"36":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"37":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"38":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":16},"end":{"line":180,"column":19}},{"start":{"line":180,"column":23},"end":{"line":180,"column":25}}]},"39":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":9},"end":{"line":185,"column":22}},{"start":{"line":185,"column":26},"end":{"line":185,"column":45}}]},"40":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":9},"end":{"line":191,"column":13}},{"start":{"line":191,"column":17},"end":{"line":191,"column":19}}]},"41":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"42":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"43":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":6}},{"start":{"line":202,"column":6},"end":{"line":202,"column":6}}]},"44":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":13},"end":{"line":205,"column":13}},{"start":{"line":205,"column":13},"end":{"line":205,"column":13}}]},"45":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":9},"end":{"line":210,"column":9}},{"start":{"line":210,"column":9},"end":{"line":210,"column":9}}]},"46":{"line":218,"type":"switch","locations":[{"start":{"line":219,"column":6},"end":{"line":219,"column":18}},{"start":{"line":220,"column":6},"end":{"line":220,"column":18}},{"start":{"line":221,"column":6},"end":{"line":221,"column":24}},{"start":{"line":222,"column":6},"end":{"line":222,"column":15}},{"start":{"line":223,"column":6},"end":{"line":225,"column":14}},{"start":{"line":226,"column":6},"end":{"line":227,"column":20}}]}},"code":["/**"," * @file Create and build SOQL string from configuration"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _      = require('lodash/core'),","    SfDate = require(\"./date\");","","","/**"," * Create SOQL"," * @private"," */","function createSOQL(query) {","  var soql = [","    \"SELECT \",","    createFieldsClause(query.fields, query.includes),","    \" FROM \",","    query.table","  ].join(\"\");","  var cond = createConditionClause(query.conditions);","  if (cond) {","    soql += \" WHERE \" + cond;","  }","  var orderby = createOrderByClause(query.sort);","  if (orderby) {","    soql += \" ORDER BY \" + orderby;","  }","  if (query.limit) {","    soql += \" LIMIT \" + query.limit;","  }","  if (query.offset) {","    soql += \" OFFSET \" + query.offset;","  }","  return soql;","}","","/** @private **/","function createFieldsClause(fields, childQueries) {","  childQueries = _.map(_.values(childQueries || {}), function(cquery) {","    return '(' + createSOQL(cquery) + ')';","  });","  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');","}","","/** @private **/","function createConditionClause(conditions, operator, depth) {","  if (_.isString(conditions)) {","    return conditions;","  }","  conditions = conditions || [];","  operator = operator || \"AND\";","  depth = depth || 0;","  if (!isArray(conditions)) { // if passed in hash object","    conditions = _.keys(conditions).map(function(key) {","      return {","        key: key,","        value: conditions[key]","      };","    });","  } else {","    conditions = conditions.map(function(cond) {","      var conds = [];","      for (var key in cond) {","        conds.push({","          key: key,","          value: cond[key]","        });","      }","      return conds.length>1 ? conds : conds[0];","    });","  }","  conditions = conditions.map(function(cond) {","    var d = depth+1, op;","    switch (cond.key) {","      case \"$or\" :","      case \"$and\" :","      case \"$not\" :","        if (operator !== \"NOT\" && conditions.length === 1) {","          d = depth; // not change tree depth","        }","        op = cond.key === \"$or\" ? \"OR\" :","             cond.key === \"$and\" ? \"AND\" :","             \"NOT\";","        return createConditionClause(cond.value, op, d);","      default:","        return createFieldExpression(cond.key, cond.value);","    }","  }).filter(function(expr) { return expr; });","","  var paren;","  if (operator === 'NOT') {","    paren = depth > 0;","    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");","  } else {","    paren = depth > 0 && conditions.length > 1;","    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");","  }","}","","var opMap = {","  \"=\"     : \"=\",","  \"$eq\"   : \"=\",","  \"!=\"    : \"!=\",","  \"$ne\"   : \"!=\",","  \">\"     : \">\",","  \"$gt\"   : \">\",","  \"<\"     : \"<\",","  \"$lt\"   : \"<\",","  \">=\"    : \">=\",","  \"$gte\"  : \">=\",","  \"<=\"    : \"<=\",","  \"$lte\"  : \"<=\",","  \"$like\" : \"LIKE\",","  \"$nlike\" : \"NOT LIKE\",","  \"$in\"   : \"IN\",","  \"$nin\"  : \"NOT IN\",","  \"$includes\" : \"INCLUDES\",","  \"$excludes\" : \"EXCLUDES\",","  \"$exists\" : \"EXISTS\"","};","","/** @private **/","function createFieldExpression(field, value) {","  var op = \"$eq\";","","  // Assume the `$in` operator if value is an array and none was supplied.","  if (_.isArray(value)) { op = \"$in\"; }","  // Otherwise, if an object was passed then process the supplied ops.","  else if (_.isObject(value)) {","    var _value;","    for (var k in value) {","      if (k[0] === \"$\") {","        op = k;","        value = value[k];","        break;","      }","    }","  }","  var sfop = opMap[op];","  if (!sfop || _.isUndefined(value)) { return null; }","  var valueExpr = createValueExpression(value);","  if (_.isUndefined(valueExpr)) { return null; }","  switch (sfop) {","    case \"NOT LIKE\":","      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";","    case \"EXISTS\":","      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");","    default:","      return [ field, sfop, valueExpr ].join(\" \");","  }","}","","/** @private **/","function createValueExpression(value) {","  if (isArray(value)) {","    return value.length > 0 ?","           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :","           undefined;","  }","  if (value instanceof SfDate) {","    return value.toString();","  }","  if (_.isString(value)) {","    return \"'\" + escapeSOQLString(value) + \"'\";","  }","  if (_.isNumber(value)) {","    return (value).toString();","  }","  if (_.isNull(value)) {","    return \"null\";","  }","  return value;","}","","/** @private **/","function escapeSOQLString(str) {","  return String(str || '').replace(/'/g, \"\\\\'\");","}","","/** @private **/","function isArray(a) {","  return _.isObject(a) && _.isFunction(a.pop);","}","","","/** @private **/","function createOrderByClause(sort) {","  sort = sort || [];","  if (_.isString(sort)) {","    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {","      // must be specified in pure \"order by\" clause. Return raw config.","      return sort;","    }","    // sort order in mongoose-style expression.","    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"","    sort = sort.split(/\\s+/).map(function(field) {","      var dir = \"ASC\"; // ascending","      var flag = field[0];","      if (flag === '-') {","        dir = \"DESC\";","        field = field.substring(1);","      } else if (flag === '+') {","        field = field.substring(1);","      }","      return [ field, dir ];","    });","  } else if (!isArray(sort)) {","    sort = _.keys(sort).map(function(field) {","      var dir = sort[field];","      return [ field, dir ];","    });","  }","  return sort.map(function(s) {","    var field = s[0], dir = s[1];","    switch (String(dir)) {","      case \"DESC\":","      case \"desc\":","      case \"descending\":","      case \"-\":","      case \"-1\":","        dir = \"DESC\";","        break;","      default:","        dir = \"ASC\";","    }","    return field + \" \" + dir;","  }).join(\", \");","}","","","exports.createSOQL = createSOQL;",""],"l":{"8":1,"16":1,"17":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"41":1,"42":0,"43":0,"45":0,"49":1,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"64":0,"65":0,"66":0,"67":0,"72":0,"75":0,"76":0,"77":0,"81":0,"82":0,"84":0,"87":0,"89":0,"91":0,"93":0,"94":0,"95":0,"96":0,"98":0,"99":0,"103":1,"126":1,"127":0,"130":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0,"150":0,"152":0,"157":1,"158":0,"159":0,"163":0,"164":0,"166":0,"167":0,"169":0,"170":0,"172":0,"173":0,"175":0,"179":1,"180":0,"184":1,"185":0,"190":1,"191":0,"192":0,"193":0,"195":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"208":0,"210":0,"211":0,"212":0,"213":0,"216":0,"217":0,"218":0,"224":0,"225":0,"227":0,"229":0,"234":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/record-stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/record-stream.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":36},"end":{"line":25,"column":47}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":36},"end":{"line":35,"column":68}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":42}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":32},"end":{"line":57,"column":45}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":47},"end":{"line":66,"column":58}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":32},"end":{"line":80,"column":56}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":39},"end":{"line":99,"column":50}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":28},"end":{"line":113,"column":52}}},"9":{"name":"(anonymous_9)","line":129,"loc":{"start":{"line":129,"column":24},"end":{"line":129,"column":41}}},"10":{"name":"(anonymous_10)","line":153,"loc":{"start":{"line":153,"column":19},"end":{"line":153,"column":32}}},"11":{"name":"(anonymous_11)","line":155,"loc":{"start":{"line":155,"column":25},"end":{"line":155,"column":57}}},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":31},"end":{"line":170,"column":56}}},"13":{"name":"(anonymous_13)","line":171,"loc":{"start":{"line":171,"column":26},"end":{"line":171,"column":40}}},"14":{"name":"evalMapping","line":179,"loc":{"start":{"line":179,"column":2},"end":{"line":179,"column":39}}},"15":{"name":"(anonymous_15)","line":183,"loc":{"start":{"line":183,"column":43},"end":{"line":183,"column":62}}},"16":{"name":"(anonymous_16)","line":205,"loc":{"start":{"line":205,"column":22},"end":{"line":205,"column":35}}},"17":{"name":"(anonymous_17)","line":207,"loc":{"start":{"line":207,"column":28},"end":{"line":207,"column":60}}},"18":{"name":"convertRecordForSerialization","line":217,"loc":{"start":{"line":217,"column":0},"end":{"line":217,"column":56}}},"19":{"name":"(anonymous_19)","line":218,"loc":{"start":{"line":218,"column":36},"end":{"line":218,"column":55}}},"20":{"name":"(anonymous_20)","line":230,"loc":{"start":{"line":230,"column":40},"end":{"line":230,"column":61}}},"21":{"name":"createPipelineStream","line":242,"loc":{"start":{"line":242,"column":0},"end":{"line":242,"column":38}}},"22":{"name":"(anonymous_22)","line":244,"loc":{"start":{"line":244,"column":22},"end":{"line":244,"column":39}}},"23":{"name":"(anonymous_23)","line":248,"loc":{"start":{"line":248,"column":18},"end":{"line":248,"column":42}}},"24":{"name":"(anonymous_24)","line":260,"loc":{"start":{"line":260,"column":13},"end":{"line":260,"column":31}}},"25":{"name":"(anonymous_25)","line":263,"loc":{"start":{"line":263,"column":23},"end":{"line":263,"column":40}}},"26":{"name":"(anonymous_26)","line":269,"loc":{"start":{"line":269,"column":9},"end":{"line":269,"column":27}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":15,"column":30}},"2":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":55}},"4":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"5":{"start":{"line":35,"column":0},"end":{"line":39,"column":2}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"7":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":13}},"9":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":41}},"11":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"12":{"start":{"line":58,"column":2},"end":{"line":58,"column":44}},"13":{"start":{"line":66,"column":0},"end":{"line":69,"column":2}},"14":{"start":{"line":67,"column":2},"end":{"line":67,"column":33}},"15":{"start":{"line":68,"column":2},"end":{"line":68,"column":26}},"16":{"start":{"line":71,"column":0},"end":{"line":71,"column":37}},"17":{"start":{"line":80,"column":0},"end":{"line":92,"column":2}},"18":{"start":{"line":81,"column":2},"end":{"line":81,"column":23}},"19":{"start":{"line":82,"column":2},"end":{"line":82,"column":45}},"20":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"21":{"start":{"line":84,"column":4},"end":{"line":84,"column":79}},"22":{"start":{"line":86,"column":2},"end":{"line":90,"column":3}},"23":{"start":{"line":87,"column":4},"end":{"line":87,"column":41}},"24":{"start":{"line":88,"column":4},"end":{"line":89,"column":30}},"25":{"start":{"line":91,"column":2},"end":{"line":91,"column":26}},"26":{"start":{"line":99,"column":0},"end":{"line":102,"column":2}},"27":{"start":{"line":100,"column":2},"end":{"line":100,"column":29}},"28":{"start":{"line":101,"column":2},"end":{"line":101,"column":26}},"29":{"start":{"line":104,"column":0},"end":{"line":104,"column":33}},"30":{"start":{"line":113,"column":0},"end":{"line":125,"column":2}},"31":{"start":{"line":114,"column":2},"end":{"line":114,"column":23}},"32":{"start":{"line":115,"column":2},"end":{"line":115,"column":45}},"33":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"34":{"start":{"line":117,"column":4},"end":{"line":117,"column":79}},"35":{"start":{"line":119,"column":2},"end":{"line":123,"column":3}},"36":{"start":{"line":120,"column":4},"end":{"line":120,"column":41}},"37":{"start":{"line":121,"column":4},"end":{"line":121,"column":50}},"38":{"start":{"line":122,"column":4},"end":{"line":122,"column":109}},"39":{"start":{"line":124,"column":2},"end":{"line":124,"column":26}},"40":{"start":{"line":129,"column":0},"end":{"line":134,"column":2}},"41":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"42":{"start":{"line":131,"column":4},"end":{"line":131,"column":46}},"43":{"start":{"line":133,"column":2},"end":{"line":133,"column":57}},"44":{"start":{"line":137,"column":0},"end":{"line":137,"column":55}},"45":{"start":{"line":153,"column":0},"end":{"line":161,"column":2}},"46":{"start":{"line":154,"column":2},"end":{"line":154,"column":50}},"47":{"start":{"line":155,"column":2},"end":{"line":159,"column":4}},"48":{"start":{"line":156,"column":4},"end":{"line":156,"column":35}},"49":{"start":{"line":157,"column":4},"end":{"line":157,"column":19}},"50":{"start":{"line":158,"column":4},"end":{"line":158,"column":15}},"51":{"start":{"line":160,"column":2},"end":{"line":160,"column":19}},"52":{"start":{"line":170,"column":0},"end":{"line":191,"column":2}},"53":{"start":{"line":171,"column":2},"end":{"line":177,"column":5}},"54":{"start":{"line":172,"column":4},"end":{"line":172,"column":32}},"55":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"56":{"start":{"line":174,"column":6},"end":{"line":174,"column":76}},"57":{"start":{"line":176,"column":4},"end":{"line":176,"column":18}},"58":{"start":{"line":179,"column":2},"end":{"line":190,"column":3}},"59":{"start":{"line":180,"column":4},"end":{"line":189,"column":5}},"60":{"start":{"line":181,"column":6},"end":{"line":181,"column":42}},"61":{"start":{"line":182,"column":6},"end":{"line":182,"column":38}},"62":{"start":{"line":182,"column":15},"end":{"line":182,"column":36}},"63":{"start":{"line":183,"column":6},"end":{"line":186,"column":9}},"64":{"start":{"line":184,"column":8},"end":{"line":184,"column":30}},"65":{"start":{"line":185,"column":8},"end":{"line":185,"column":64}},"66":{"start":{"line":188,"column":6},"end":{"line":188,"column":19}},"67":{"start":{"line":205,"column":0},"end":{"line":212,"column":2}},"68":{"start":{"line":206,"column":2},"end":{"line":206,"column":53}},"69":{"start":{"line":207,"column":2},"end":{"line":210,"column":4}},"70":{"start":{"line":208,"column":4},"end":{"line":208,"column":42}},"71":{"start":{"line":208,"column":22},"end":{"line":208,"column":40}},"72":{"start":{"line":209,"column":4},"end":{"line":209,"column":15}},"73":{"start":{"line":211,"column":2},"end":{"line":211,"column":22}},"74":{"start":{"line":217,"column":0},"end":{"line":237,"column":1}},"75":{"start":{"line":218,"column":2},"end":{"line":236,"column":13}},"76":{"start":{"line":219,"column":4},"end":{"line":219,"column":25}},"77":{"start":{"line":220,"column":4},"end":{"line":220,"column":25}},"78":{"start":{"line":221,"column":4},"end":{"line":221,"column":18}},"79":{"start":{"line":222,"column":4},"end":{"line":234,"column":5}},"80":{"start":{"line":223,"column":6},"end":{"line":223,"column":30}},"81":{"start":{"line":224,"column":6},"end":{"line":224,"column":22}},"82":{"start":{"line":225,"column":11},"end":{"line":234,"column":5}},"83":{"start":{"line":226,"column":6},"end":{"line":226,"column":36}},"84":{"start":{"line":227,"column":6},"end":{"line":227,"column":36}},"85":{"start":{"line":228,"column":11},"end":{"line":234,"column":5}},"86":{"start":{"line":229,"column":6},"end":{"line":229,"column":66}},"87":{"start":{"line":230,"column":6},"end":{"line":233,"column":28}},"88":{"start":{"line":231,"column":8},"end":{"line":231,"column":47}},"89":{"start":{"line":232,"column":8},"end":{"line":232,"column":20}},"90":{"start":{"line":235,"column":4},"end":{"line":235,"column":15}},"91":{"start":{"line":242,"column":0},"end":{"line":252,"column":1}},"92":{"start":{"line":243,"column":2},"end":{"line":243,"column":35}},"93":{"start":{"line":244,"column":2},"end":{"line":247,"column":5}},"94":{"start":{"line":245,"column":4},"end":{"line":245,"column":28}},"95":{"start":{"line":246,"column":4},"end":{"line":246,"column":29}},"96":{"start":{"line":248,"column":2},"end":{"line":250,"column":4}},"97":{"start":{"line":249,"column":4},"end":{"line":249,"column":34}},"98":{"start":{"line":251,"column":2},"end":{"line":251,"column":18}},"99":{"start":{"line":259,"column":0},"end":{"line":272,"column":2}},"100":{"start":{"line":261,"column":4},"end":{"line":261,"column":28}},"101":{"start":{"line":262,"column":4},"end":{"line":267,"column":6}},"102":{"start":{"line":264,"column":8},"end":{"line":264,"column":62}},"103":{"start":{"line":270,"column":4},"end":{"line":270,"column":39}},"104":{"start":{"line":277,"column":0},"end":{"line":279,"column":2}}},"branchMap":{"1":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":9},"end":{"line":81,"column":13}},{"start":{"line":81,"column":17},"end":{"line":81,"column":22}}]},"2":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"3":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"4":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":9},"end":{"line":114,"column":13}},{"start":{"line":114,"column":17},"end":{"line":114,"column":22}}]},"5":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"6":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"7":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"8":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":23}},{"start":{"line":130,"column":27},"end":{"line":130,"column":42}}]},"9":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":14},"end":{"line":156,"column":24}},{"start":{"line":156,"column":28},"end":{"line":156,"column":34}}]},"10":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":30},"end":{"line":174,"column":42}},{"start":{"line":174,"column":45},"end":{"line":174,"column":75}}]},"11":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"12":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"13":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":49},"end":{"line":185,"column":51}},{"start":{"line":185,"column":54},"end":{"line":185,"column":63}}]},"14":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":26}},{"start":{"line":185,"column":30},"end":{"line":185,"column":46}}]},"15":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"16":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"17":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":11},"end":{"line":225,"column":11}},{"start":{"line":225,"column":11},"end":{"line":225,"column":11}}]},"18":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":15},"end":{"line":225,"column":32}},{"start":{"line":225,"column":36},"end":{"line":225,"column":50}}]},"19":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":11},"end":{"line":228,"column":11}},{"start":{"line":228,"column":11},"end":{"line":228,"column":11}}]},"20":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":15},"end":{"line":228,"column":29}},{"start":{"line":228,"column":33},"end":{"line":228,"column":58}}]},"21":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":14},"end":{"line":261,"column":21}},{"start":{"line":261,"column":25},"end":{"line":261,"column":27}}]}},"code":["/**"," * @file Represents stream that handles Salesforce record as stream data"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var events = require('events'),","    stream = require('readable-stream'),","    Duplex = stream.Duplex,","    Transform = stream.Transform,","    PassThrough = stream.PassThrough,","    inherits = require('inherits'),","    _      = require('lodash/core'),","    CSV    = require('./csv');","","","/**"," * Class for Record Stream"," *"," * @class"," * @constructor"," * @extends stream.Transform"," */","var RecordStream = module.exports = function() {","  RecordStream.super_.call(this, { objectMode: true });","};","","inherits(RecordStream, Transform);","","","/*"," * @override"," */","RecordStream.prototype._transform = function(record, enc, callback) {","  this.emit('record', record);","  this.push(record);","  callback();","};","","/**"," * Get record stream of queried records applying the given mapping function"," *"," * @param {RecordMapFunction} fn - Record mapping function"," * @returns {RecordStream}"," */","RecordStream.prototype.map = function(fn) {","  return this.pipe(RecordStream.map(fn));","};","","/**"," * Get record stream of queried records, applying the given filter function"," *"," * @param {RecordFilterFunction} fn - Record filtering function"," * @returns {RecordStream}"," */","RecordStream.prototype.filter = function(fn) {","  return this.pipe(RecordStream.filter(fn));","};","","","/**"," * @class RecordStream.Serializable"," * @extends {RecordStream}"," */","var Serializable = RecordStream.Serializable = function() {","  Serializable.super_.call(this);","  this._dataStream = null;","};","","inherits(Serializable, RecordStream);","","/**"," * Create readable data stream which emits serialized record data"," *"," * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported."," * @param {Object} [options] - Options passed to converter"," * @returns {stream.Readable}","*/","Serializable.prototype.stream = function(type, options) {","  type = type || 'csv';","  var converter = DataStreamConverters[type];","  if (!converter) {","    throw new Error('Converting [' + type + '] data stream is not supported.');","  }","  if (!this._dataStream) {","    this._dataStream = new PassThrough();","    this.pipe(converter.serialize(options))","      .pipe(this._dataStream);","  }","  return this._dataStream;","};","","","/**"," * @class RecordStream.Parsable"," * @extends {RecordStream}"," */","var Parsable = RecordStream.Parsable = function() {","  Parsable.super_.call(this);","  this._dataStream = null;","};","","inherits(Parsable, RecordStream);","","/**"," * Create writable data stream which accepts serialized record data"," *"," * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported."," * @param {Object} [options] - Options passed to converter"," * @returns {stream.Readable}","*/","Parsable.prototype.stream = function(type, options) {","  type = type || 'csv';","  var converter = DataStreamConverters[type];","  if (!converter) {","    throw new Error('Converting [' + type + '] data stream is not supported.');","  }","  if (!this._dataStream) {","    this._dataStream = new PassThrough();","    this._parserStream = converter.parse(options);","    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));","  }","  return this._dataStream;","};","","","/* @override */","Parsable.prototype.on = function(ev, fn) {","  if (ev === 'readable' || ev === 'record') {","    this._dataStream.pipe(this._parserStream);","  }","  return Parsable.super_.prototype.on.call(this, ev, fn);","};","","/* @override */","Parsable.prototype.addListener = Parsable.prototype.on;","","/* --------------------------------------------------- */","","/**"," * @callback RecordMapFunction"," * @param {Record} record - Source record to map"," * @returns {Record}"," */","","/**"," * Create a record stream which maps records and pass them to downstream"," *"," * @param {RecordMapFunction} fn - Record mapping function"," * @returns {RecordStream.Serializable}"," */","RecordStream.map = function(fn) {","  var mapStream = new RecordStream.Serializable();","  mapStream._transform = function(record, enc, callback) {","    var rec = fn(record) || record; // if not returned record, use same record","    this.push(rec);","    callback();","  };","  return mapStream;","};","","/**"," * Create mapping stream using given record template"," *"," * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true."," * @param {Boolean} [noeval] - Disable template evaluation in mapping record."," * @returns {RecordStream.Serializable}"," */","RecordStream.recordMapStream = function(record, noeval) {","  return RecordStream.map(function(rec) {","    var mapped = { Id: rec.Id };","    for (var prop in record) {","      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);","    }","    return mapped;","  });","","  function evalMapping(value, mapping) {","    if (_.isString(value)) {","      var m = /^\\$\\{(\\w+)\\}$/.exec(value);","      if (m) { return mapping[m[1]]; }","      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {","        var v = mapping[prop];","        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);","      });","    } else {","      return value;","    }","  }","};","","/**"," * @callback RecordFilterFunction"," * @param {Record} record - Source record to filter"," * @returns {Boolean}"," */","","/**"," * Create a record stream which filters records and pass them to downstream"," *"," * @param {RecordFilterFunction} fn - Record filtering function"," * @returns {RecordStream.Serializable}"," */","RecordStream.filter = function(fn) {","  var filterStream = new RecordStream.Serializable();","  filterStream._transform = function(record, enc, callback) {","    if (fn(record)) { this.push(record); }","    callback();","  };","  return filterStream;","};","","/**"," * @private"," */","function convertRecordForSerialization(record, options) {","  return Object.keys(record).reduce(function(rec, key) {","    var value = rec[key];","    var t = typeof value;","    var urec = {};","    if (key === 'attributes') { // 'attributes' prop will be ignored","      rec = _.extend({}, rec);","      delete rec[key];","    } else if (options.nullValue && value === null) {","      urec[key] = options.nullValue;","      rec = _.extend({}, rec, urec);","    } else if (value !== null && typeof value === 'object') {","      var precord = convertRecordForSerialization(value, options);","      rec = Object.keys(precord).reduce(function(prec, pkey) {","        prec[key + '.' + pkey] = precord[pkey];","        return prec;","      }, _.extend({}, rec));","    }","    return rec;","  }, record);","}","","/**"," * @private"," */","function createPipelineStream(s1, s2) {","  var pipeline = new PassThrough();","  pipeline.on('pipe', function(source) {","    source.unpipe(pipeline);","    source.pipe(s1).pipe(s2);","  });","  pipeline.pipe = function(dest, options) {","    return s2.pipe(dest, options);","  };","  return pipeline;","}","","/** ---------------------------------------------------------------------- **/","","/**"," * @private"," */","var CSVStreamConverter = {","  serialize: function(options) {","    options = options || {};","    return createPipelineStream(","      RecordStream.map(function(record) {","        return convertRecordForSerialization(record, options);","      }),","      CSV.serializeCSVStream(options)","    );","  },","  parse: function(options) {","    return CSV.parseCSVStream(options);","  }","};","","/**"," * @private"," */","var DataStreamConverters = RecordStream.DataStreamConverters = {","  csv: CSVStreamConverter","};",""],"l":{"8":1,"25":1,"26":0,"29":1,"35":1,"36":0,"37":0,"38":0,"47":1,"48":0,"57":1,"58":0,"66":1,"67":0,"68":0,"71":1,"80":1,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"91":0,"99":1,"100":0,"101":0,"104":1,"113":1,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"124":0,"129":1,"130":0,"131":0,"133":0,"137":1,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"170":1,"171":0,"172":0,"173":0,"174":0,"176":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"188":0,"205":1,"206":0,"207":0,"208":0,"209":0,"211":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"235":0,"242":1,"243":0,"244":0,"245":0,"246":0,"248":0,"249":0,"251":0,"259":1,"261":0,"262":0,"264":0,"270":0,"277":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/csv.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/csv.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"parseCSV","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}}},"2":{"name":"toCSV","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}}},"3":{"name":"parseCSVStream","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"4":{"name":"serializeCSVStream","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":57}},"2":{"start":{"line":12,"column":0},"end":{"line":15,"column":1}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":53}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":36}},"5":{"start":{"line":20,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":52}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":44}},"8":{"start":{"line":28,"column":0},"end":{"line":31,"column":1}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":53}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":27}},"11":{"start":{"line":36,"column":0},"end":{"line":39,"column":1}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":52}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":31}},"14":{"start":{"line":45,"column":0},"end":{"line":50,"column":2}}},"branchMap":{},"code":["'use strict';","","var _ = require('lodash/core'),","    csvParse = require('csv-parse'),","    csvParseSync = require('csv-parse/lib/sync'),","    csvStringify = require('csv-stringify'),","    csvStringifySync = require('csv-stringify/lib/sync');","","/**"," * @private"," */","function parseCSV(str, options) {","  options = _.extend({}, options, { columns: true });","  return csvParseSync(str, options);","}","","/**"," * @private"," */","function toCSV(records, options) {","  options = _.extend({}, options, { header: true });","  return csvStringifySync(records, options);","}","","/**"," * @private"," */","function parseCSVStream(options) {","  options = _.extend({}, options, { columns: true });","  return csvParse(options);","}","","/**"," * @private"," */","function serializeCSVStream(options) {","  options = _.extend({}, options, { header: true });","  return csvStringify(options);","}","","","/**"," * @protected"," */","module.exports = {","  parseCSV: parseCSV,","  toCSV: toCSV,","  parseCSVStream: parseCSVStream,","  serializeCSVStream: serializeCSVStream","};",""],"l":{"3":1,"12":1,"13":0,"14":0,"20":1,"21":0,"22":0,"28":1,"29":0,"30":0,"36":1,"37":0,"38":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/sobject.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/sobject.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1,"103":0,"104":1,"105":0,"106":1,"107":0,"108":1,"109":0,"110":1,"111":0,"112":1,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":1,"124":0,"125":0,"126":1,"127":0,"128":0,"129":1,"130":0,"131":1,"132":0,"133":1,"134":0,"135":1,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":31},"end":{"line":19,"column":52}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":27},"end":{"line":57,"column":64}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":29},"end":{"line":73,"column":62}}},"4":{"name":"(anonymous_4)","line":89,"loc":{"start":{"line":89,"column":27},"end":{"line":89,"column":64}}},"5":{"name":"(anonymous_5)","line":106,"loc":{"start":{"line":106,"column":27},"end":{"line":106,"column":76}}},"6":{"name":"(anonymous_6)","line":141,"loc":{"start":{"line":141,"column":28},"end":{"line":141,"column":61}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":155,"column":29},"end":{"line":155,"column":48}}},"8":{"name":"(anonymous_8)","line":165,"loc":{"start":{"line":165,"column":27},"end":{"line":165,"column":40}}},"9":{"name":"(anonymous_9)","line":181,"loc":{"start":{"line":181,"column":25},"end":{"line":181,"column":73}}},"10":{"name":"(anonymous_10)","line":222,"loc":{"start":{"line":222,"column":28},"end":{"line":222,"column":76}}},"11":{"name":"(anonymous_11)","line":250,"loc":{"start":{"line":250,"column":27},"end":{"line":250,"column":54}}},"12":{"name":"(anonymous_12)","line":261,"loc":{"start":{"line":261,"column":26},"end":{"line":261,"column":57}}},"13":{"name":"(anonymous_13)","line":283,"loc":{"start":{"line":283,"column":29},"end":{"line":283,"column":75}}},"14":{"name":"(anonymous_14)","line":304,"loc":{"start":{"line":304,"column":31},"end":{"line":304,"column":57}}},"15":{"name":"(anonymous_15)","line":315,"loc":{"start":{"line":315,"column":31},"end":{"line":315,"column":57}}},"16":{"name":"(anonymous_16)","line":327,"loc":{"start":{"line":327,"column":31},"end":{"line":327,"column":69}}},"17":{"name":"(anonymous_17)","line":348,"loc":{"start":{"line":348,"column":32},"end":{"line":348,"column":58}}},"18":{"name":"(anonymous_18)","line":369,"loc":{"start":{"line":369,"column":36},"end":{"line":369,"column":62}}},"19":{"name":"(anonymous_19)","line":379,"loc":{"start":{"line":379,"column":27},"end":{"line":379,"column":47}}},"20":{"name":"(anonymous_20)","line":391,"loc":{"start":{"line":391,"column":28},"end":{"line":391,"column":60}}},"21":{"name":"(anonymous_21)","line":403,"loc":{"start":{"line":403,"column":28},"end":{"line":403,"column":60}}},"22":{"name":"(anonymous_22)","line":419,"loc":{"start":{"line":419,"column":28},"end":{"line":419,"column":59}}},"23":{"name":"(anonymous_23)","line":440,"loc":{"start":{"line":440,"column":35},"end":{"line":440,"column":54}}},"24":{"name":"(anonymous_24)","line":456,"loc":{"start":{"line":456,"column":36},"end":{"line":456,"column":55}}},"25":{"name":"(anonymous_25)","line":467,"loc":{"start":{"line":467,"column":30},"end":{"line":467,"column":49}}},"26":{"name":"(anonymous_26)","line":478,"loc":{"start":{"line":478,"column":29},"end":{"line":478,"column":42}}},"27":{"name":"(anonymous_27)","line":488,"loc":{"start":{"line":488,"column":33},"end":{"line":488,"column":52}}},"28":{"name":"(anonymous_28)","line":498,"loc":{"start":{"line":498,"column":32},"end":{"line":498,"column":53}}},"29":{"name":"(anonymous_29)","line":512,"loc":{"start":{"line":512,"column":15},"end":{"line":512,"column":40}}},"30":{"name":"(anonymous_30)","line":524,"loc":{"start":{"line":524,"column":29},"end":{"line":524,"column":48}}},"31":{"name":"(anonymous_31)","line":538,"loc":{"start":{"line":538,"column":30},"end":{"line":538,"column":58}}},"32":{"name":"(anonymous_32)","line":554,"loc":{"start":{"line":554,"column":29},"end":{"line":554,"column":48}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":12,"column":44}},"2":{"start":{"line":19,"column":0},"end":{"line":37,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":19}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":54}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":79}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":86}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":49}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":77}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":84}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":56}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":91}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":98}},"14":{"start":{"line":34,"column":2},"end":{"line":34,"column":57}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":93}},"16":{"start":{"line":36,"column":2},"end":{"line":36,"column":100}},"17":{"start":{"line":56,"column":0},"end":{"line":63,"column":2}},"18":{"start":{"line":58,"column":2},"end":{"line":61,"column":3}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}},"20":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"21":{"start":{"line":62,"column":2},"end":{"line":62,"column":66}},"22":{"start":{"line":73,"column":0},"end":{"line":79,"column":2}},"23":{"start":{"line":74,"column":2},"end":{"line":77,"column":3}},"24":{"start":{"line":75,"column":4},"end":{"line":75,"column":23}},"25":{"start":{"line":76,"column":4},"end":{"line":76,"column":17}},"26":{"start":{"line":78,"column":2},"end":{"line":78,"column":64}},"27":{"start":{"line":89,"column":0},"end":{"line":95,"column":2}},"28":{"start":{"line":90,"column":2},"end":{"line":93,"column":3}},"29":{"start":{"line":91,"column":4},"end":{"line":91,"column":23}},"30":{"start":{"line":92,"column":4},"end":{"line":92,"column":17}},"31":{"start":{"line":94,"column":2},"end":{"line":94,"column":66}},"32":{"start":{"line":106,"column":0},"end":{"line":112,"column":2}},"33":{"start":{"line":107,"column":2},"end":{"line":110,"column":3}},"34":{"start":{"line":108,"column":4},"end":{"line":108,"column":23}},"35":{"start":{"line":109,"column":4},"end":{"line":109,"column":17}},"36":{"start":{"line":111,"column":2},"end":{"line":111,"column":78}},"37":{"start":{"line":139,"column":0},"end":{"line":147,"column":2}},"38":{"start":{"line":142,"column":2},"end":{"line":145,"column":3}},"39":{"start":{"line":143,"column":4},"end":{"line":143,"column":23}},"40":{"start":{"line":144,"column":4},"end":{"line":144,"column":17}},"41":{"start":{"line":146,"column":2},"end":{"line":146,"column":63}},"42":{"start":{"line":155,"column":0},"end":{"line":157,"column":2}},"43":{"start":{"line":156,"column":2},"end":{"line":156,"column":50}},"44":{"start":{"line":165,"column":0},"end":{"line":167,"column":2}},"45":{"start":{"line":166,"column":2},"end":{"line":166,"column":47}},"46":{"start":{"line":181,"column":0},"end":{"line":208,"column":2}},"47":{"start":{"line":182,"column":2},"end":{"line":194,"column":3}},"48":{"start":{"line":183,"column":4},"end":{"line":183,"column":26}},"49":{"start":{"line":184,"column":4},"end":{"line":184,"column":20}},"50":{"start":{"line":185,"column":4},"end":{"line":185,"column":18}},"51":{"start":{"line":186,"column":4},"end":{"line":186,"column":19}},"52":{"start":{"line":187,"column":9},"end":{"line":194,"column":3}},"53":{"start":{"line":188,"column":4},"end":{"line":188,"column":22}},"54":{"start":{"line":189,"column":4},"end":{"line":189,"column":18}},"55":{"start":{"line":190,"column":4},"end":{"line":190,"column":19}},"56":{"start":{"line":191,"column":9},"end":{"line":194,"column":3}},"57":{"start":{"line":192,"column":4},"end":{"line":192,"column":23}},"58":{"start":{"line":193,"column":4},"end":{"line":193,"column":19}},"59":{"start":{"line":195,"column":2},"end":{"line":195,"column":26}},"60":{"start":{"line":196,"column":2},"end":{"line":203,"column":4}},"61":{"start":{"line":204,"column":2},"end":{"line":204,"column":53}},"62":{"start":{"line":205,"column":2},"end":{"line":205,"column":57}},"63":{"start":{"line":206,"column":2},"end":{"line":206,"column":40}},"64":{"start":{"line":206,"column":18},"end":{"line":206,"column":38}},"65":{"start":{"line":207,"column":2},"end":{"line":207,"column":15}},"66":{"start":{"line":222,"column":0},"end":{"line":241,"column":2}},"67":{"start":{"line":223,"column":2},"end":{"line":235,"column":3}},"68":{"start":{"line":224,"column":4},"end":{"line":224,"column":26}},"69":{"start":{"line":225,"column":4},"end":{"line":225,"column":20}},"70":{"start":{"line":226,"column":4},"end":{"line":226,"column":18}},"71":{"start":{"line":227,"column":4},"end":{"line":227,"column":19}},"72":{"start":{"line":228,"column":9},"end":{"line":235,"column":3}},"73":{"start":{"line":229,"column":4},"end":{"line":229,"column":22}},"74":{"start":{"line":230,"column":4},"end":{"line":230,"column":18}},"75":{"start":{"line":231,"column":4},"end":{"line":231,"column":19}},"76":{"start":{"line":232,"column":9},"end":{"line":235,"column":3}},"77":{"start":{"line":233,"column":4},"end":{"line":233,"column":23}},"78":{"start":{"line":234,"column":4},"end":{"line":234,"column":19}},"79":{"start":{"line":236,"column":2},"end":{"line":236,"column":50}},"80":{"start":{"line":237,"column":2},"end":{"line":237,"column":53}},"81":{"start":{"line":238,"column":2},"end":{"line":238,"column":62}},"82":{"start":{"line":239,"column":2},"end":{"line":239,"column":40}},"83":{"start":{"line":239,"column":18},"end":{"line":239,"column":38}},"84":{"start":{"line":240,"column":2},"end":{"line":240,"column":15}},"85":{"start":{"line":250,"column":0},"end":{"line":252,"column":2}},"86":{"start":{"line":251,"column":2},"end":{"line":251,"column":49}},"87":{"start":{"line":261,"column":0},"end":{"line":270,"column":2}},"88":{"start":{"line":262,"column":2},"end":{"line":265,"column":3}},"89":{"start":{"line":263,"column":4},"end":{"line":263,"column":26}},"90":{"start":{"line":264,"column":4},"end":{"line":264,"column":20}},"91":{"start":{"line":266,"column":2},"end":{"line":266,"column":58}},"92":{"start":{"line":267,"column":2},"end":{"line":267,"column":35}},"93":{"start":{"line":268,"column":2},"end":{"line":268,"column":40}},"94":{"start":{"line":268,"column":18},"end":{"line":268,"column":38}},"95":{"start":{"line":269,"column":2},"end":{"line":269,"column":15}},"96":{"start":{"line":283,"column":0},"end":{"line":285,"column":2}},"97":{"start":{"line":284,"column":2},"end":{"line":284,"column":78}},"98":{"start":{"line":303,"column":0},"end":{"line":306,"column":2}},"99":{"start":{"line":305,"column":2},"end":{"line":305,"column":50}},"100":{"start":{"line":315,"column":0},"end":{"line":317,"column":2}},"101":{"start":{"line":316,"column":2},"end":{"line":316,"column":50}},"102":{"start":{"line":327,"column":0},"end":{"line":329,"column":2}},"103":{"start":{"line":328,"column":2},"end":{"line":328,"column":78}},"104":{"start":{"line":347,"column":0},"end":{"line":350,"column":2}},"105":{"start":{"line":349,"column":2},"end":{"line":349,"column":50}},"106":{"start":{"line":368,"column":0},"end":{"line":371,"column":2}},"107":{"start":{"line":370,"column":2},"end":{"line":370,"column":54}},"108":{"start":{"line":379,"column":0},"end":{"line":381,"column":2}},"109":{"start":{"line":380,"column":2},"end":{"line":380,"column":48}},"110":{"start":{"line":391,"column":0},"end":{"line":393,"column":2}},"111":{"start":{"line":392,"column":2},"end":{"line":392,"column":61}},"112":{"start":{"line":403,"column":0},"end":{"line":405,"column":2}},"113":{"start":{"line":404,"column":2},"end":{"line":404,"column":61}},"114":{"start":{"line":419,"column":0},"end":{"line":426,"column":2}},"115":{"start":{"line":420,"column":2},"end":{"line":423,"column":3}},"116":{"start":{"line":421,"column":4},"end":{"line":421,"column":26}},"117":{"start":{"line":422,"column":4},"end":{"line":422,"column":22}},"118":{"start":{"line":424,"column":2},"end":{"line":424,"column":108}},"119":{"start":{"line":425,"column":2},"end":{"line":425,"column":43}},"120":{"start":{"line":440,"column":0},"end":{"line":443,"column":2}},"121":{"start":{"line":441,"column":2},"end":{"line":441,"column":66}},"122":{"start":{"line":442,"column":2},"end":{"line":442,"column":43}},"123":{"start":{"line":456,"column":0},"end":{"line":459,"column":2}},"124":{"start":{"line":457,"column":2},"end":{"line":457,"column":67}},"125":{"start":{"line":458,"column":2},"end":{"line":458,"column":43}},"126":{"start":{"line":467,"column":0},"end":{"line":470,"column":2}},"127":{"start":{"line":468,"column":2},"end":{"line":468,"column":76}},"128":{"start":{"line":469,"column":2},"end":{"line":469,"column":43}},"129":{"start":{"line":478,"column":0},"end":{"line":480,"column":2}},"130":{"start":{"line":479,"column":2},"end":{"line":479,"column":49}},"131":{"start":{"line":488,"column":0},"end":{"line":490,"column":2}},"132":{"start":{"line":489,"column":2},"end":{"line":489,"column":91}},"133":{"start":{"line":498,"column":0},"end":{"line":500,"column":2}},"134":{"start":{"line":499,"column":2},"end":{"line":499,"column":95}},"135":{"start":{"line":512,"column":0},"end":{"line":516,"column":2}},"136":{"start":{"line":513,"column":2},"end":{"line":513,"column":20}},"137":{"start":{"line":514,"column":2},"end":{"line":514,"column":19}},"138":{"start":{"line":515,"column":2},"end":{"line":515,"column":15}},"139":{"start":{"line":524,"column":0},"end":{"line":527,"column":2}},"140":{"start":{"line":525,"column":2},"end":{"line":525,"column":101}},"141":{"start":{"line":526,"column":2},"end":{"line":526,"column":43}},"142":{"start":{"line":538,"column":0},"end":{"line":546,"column":2}},"143":{"start":{"line":539,"column":2},"end":{"line":542,"column":3}},"144":{"start":{"line":540,"column":4},"end":{"line":540,"column":23}},"145":{"start":{"line":541,"column":4},"end":{"line":541,"column":17}},"146":{"start":{"line":543,"column":2},"end":{"line":543,"column":26}},"147":{"start":{"line":544,"column":2},"end":{"line":544,"column":102}},"148":{"start":{"line":545,"column":2},"end":{"line":545,"column":93}},"149":{"start":{"line":554,"column":0},"end":{"line":557,"column":2}},"150":{"start":{"line":555,"column":2},"end":{"line":555,"column":41}},"151":{"start":{"line":556,"column":2},"end":{"line":556,"column":43}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"2":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"3":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"4":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"5":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"6":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"7":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":9},"end":{"line":187,"column":9}},{"start":{"line":187,"column":9},"end":{"line":187,"column":9}}]},"8":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":9},"end":{"line":191,"column":9}},{"start":{"line":191,"column":9},"end":{"line":191,"column":9}}]},"9":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":19}},{"start":{"line":195,"column":23},"end":{"line":195,"column":25}}]},"10":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":26}},{"start":{"line":202,"column":30},"end":{"line":202,"column":42}}]},"11":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"12":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"13":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":9},"end":{"line":228,"column":9}},{"start":{"line":228,"column":9},"end":{"line":228,"column":9}}]},"14":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":9},"end":{"line":232,"column":9}},{"start":{"line":232,"column":9},"end":{"line":232,"column":9}}]},"15":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":21},"end":{"line":236,"column":28}},{"start":{"line":236,"column":32},"end":{"line":236,"column":34}}]},"16":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"17":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"18":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"19":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"20":{"line":424,"type":"cond-expr","locations":[{"start":{"line":424,"column":68},"end":{"line":424,"column":94}},{"start":{"line":424,"column":97},"end":{"line":424,"column":106}}]},"21":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":2},"end":{"line":539,"column":2}},{"start":{"line":539,"column":2},"end":{"line":539,"column":2}}]},"22":{"line":543,"type":"binary-expr","locations":[{"start":{"line":543,"column":12},"end":{"line":543,"column":19}},{"start":{"line":543,"column":23},"end":{"line":543,"column":25}}]}},"code":["/**"," * @file Represents Salesforce SObject"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _      = require('lodash/core'),","    Record = require('./record'),","    Query  = require('./query'),","    Cache  = require('./cache'),","    QuickAction = require('./quick-action');","","/**"," * A class for organizing all SObject access"," *"," * @constructor"," */","var SObject = module.exports = function(conn, type) {","  this._conn = conn;","  this.type = type;","  var cacheOptions = { key: \"describe.\" + this.type };","  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);","  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);","","  cacheOptions = { key: \"layouts.\" + this.type };","  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);","  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);","","  cacheOptions = { key: \"compactLayouts.\" + this.type };","  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);","  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);","","  cacheOptions = { key: \"approvalLayouts.\" + this.type };","  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);","  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);","};","","/**"," * Synonym of SObject#create()"," *"," * @method SObject#insert"," * @param {Record|Array.<Record>} records - A record or array of records to create"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Create records"," *"," * @method SObject#create"," * @param {Record|Array.<Record>} records - A record or array of records to create"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","SObject.prototype.insert =","SObject.prototype.create = function(records, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.create(this.type, records, options, callback);","};","","/**"," * Retrieve specified records"," *"," * @param {String|Array.<String>} ids - A record ID or array of record IDs"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function"," * @returns {Promise.<Record|Array.<Record>>}"," */","SObject.prototype.retrieve = function(ids, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.retrieve(this.type, ids, options, callback);","};","","/**"," * Update records"," *"," * @param {Record|Array.<Record>} records - A record or array of records to update"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","SObject.prototype.update = function(records, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.update(this.type, records, options, callback);","};","","/**"," * Upsert records"," *"," * @param {Record|Array.<Record>} records - Record or array of records to upsert"," * @param {String} extIdField - External ID field name"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","SObject.prototype.upsert = function(records, extIdField, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.upsert(this.type, records, extIdField, options, callback);","};","","/**"," * Synonym of SObject#destroy()"," *"," * @method SObject#delete"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Synonym of SObject#destroy()"," *"," * @method SObject#del"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Delete records"," *"," * @method SObject#destroy"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","SObject.prototype[\"delete\"] =","SObject.prototype.del =","SObject.prototype.destroy = function(ids, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.destroy(this.type, ids, options, callback);","};","","/**"," * Describe SObject metadata"," *"," * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function"," * @returns {Promise.<DescribeSObjectResult>}"," */","SObject.prototype.describe = function(callback) {","  return this._conn.describe(this.type, callback);","};","","/**"," * Get record representation instance by given id"," *"," * @param {String} id - A record ID"," * @returns {RecordReference}"," */","SObject.prototype.record = function(id) {","  return new Record(this._conn, this.type, id);","};","","/**"," * Find and fetch records which matches given conditions"," *"," * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string."," * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names."," * @param {Object} [options] - Query options."," * @param {Number} [options.limit] - Maximum number of records the query will return."," * @param {Number} [options.offset] - Offset number where begins returning results."," * @param {Number} [options.skip] - Synonym of options.offset."," * @param {Callback.<Array.<Record>>} [callback] - Callback function"," * @returns {Query.<Array.<Record>>}"," */","SObject.prototype.find = function(conditions, fields, options, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","    fields = null;","    options = null;","  } else if (typeof fields === 'function') {","    callback = fields;","    fields = null;","    options = null;","  } else if (typeof options === 'function') {","    callback = options;","    options = null;","  }","  options = options || {};","  var config = {","    fields: fields,","    includes: options.includes,","    table: this.type,","    conditions: conditions,","    limit: options.limit,","    offset: options.offset || options.skip","  };","  var query = new Query(this._conn, config, options);","  query.setResponseTarget(Query.ResponseTargets.Records);","  if (callback) { query.run(callback); }","  return query;","};","","/**"," * Fetch one record which matches given conditions"," *"," * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string."," * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names."," * @param {Object} [options] - Query options."," * @param {Number} [options.limit] - Maximum number of records the query will return."," * @param {Number} [options.offset] - Offset number where begins returning results."," * @param {Number} [options.skip] - Synonym of options.offset."," * @param {Callback.<Record>} [callback] - Callback function"," * @returns {Query.<Record>}"," */","SObject.prototype.findOne = function(conditions, fields, options, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","    fields = null;","    options = null;","  } else if (typeof fields === 'function') {","    callback = fields;","    fields = null;","    options = null;","  } else if (typeof options === 'function') {","    callback = options;","    options = null;","  }","  options = _.extend(options || {}, { limit: 1 });","  var query = this.find(conditions, fields, options);","  query.setResponseTarget(Query.ResponseTargets.SingleRecord);","  if (callback) { query.run(callback); }","  return query;","};","","/**"," * Find and fetch records only by specifying fields to fetch."," *"," * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names."," * @param {Callback.<Array.<Record>>} [callback] - Callback function"," * @returns {Query.<Array.<Record>>}"," */","SObject.prototype.select = function(fields, callback) {","  return this.find(null, fields, null, callback);","};","","/**"," * Count num of records which matches given conditions"," *"," * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string."," * @param {Callback.<Number>} [callback] - Callback function"," * @returns {Query.<Number>}"," */","SObject.prototype.count = function(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","  var query = this.find(conditions, { \"count()\" : true });","  query.setResponseTarget(\"Count\");","  if (callback) { query.run(callback); }","  return query;","};","","","/**"," * Call Bulk#load() to execute bulkload, returning batch object"," *"," * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')"," * @param {Object} [options] - Options for bulk loading operation"," * @param {String} [options.extIdField] - External ID field name (used when upsert operation)."," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","SObject.prototype.bulkload = function(operation, options, input, callback) {","  return this._conn.bulk.load(this.type, operation, options, input, callback);","};","","/**"," * Synonym of SObject#createBulk()"," *"," * @method SObject#insertBulk"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","/**"," * Bulkly insert input data using bulk API"," *"," * @method SObject#createBulk"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","SObject.prototype.insertBulk =","SObject.prototype.createBulk = function(input, callback) {","  return this.bulkload(\"insert\", input, callback);","};","","/**"," * Bulkly update records by input data using bulk API"," *"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","SObject.prototype.updateBulk = function(input, callback) {","  return this.bulkload(\"update\", input, callback);","};","","/**"," * Bulkly upsert records by input data using bulk API"," *"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream."," * @param {String} [options.extIdField] - External ID field name"," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","SObject.prototype.upsertBulk = function(input, extIdField, callback) {","  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);","};","","/**"," * Synonym of SObject#destroyBulk()"," *"," * @method SObject#deleteBulk"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","/**"," * Bulkly delete records specified by input data using bulk API"," *"," * @method SObject#destroyBulk"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","SObject.prototype.deleteBulk =","SObject.prototype.destroyBulk = function(input, callback) {","  return this.bulkload(\"delete\", input, callback);","};","","/**"," * Synonym of SObject#destroyHardBulk()"," *"," * @method SObject#deleteHardBulk"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","/**"," * Bulkly hard delete records specified in input data using bulk API"," *"," * @method SObject#destroyHardBulk"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream."," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","SObject.prototype.deleteHardBulk =","SObject.prototype.destroyHardBulk = function(input, callback) {","  return this.bulkload(\"hardDelete\", input, callback);","};","","/**"," * Retrieve recently accessed records"," *"," * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<RecordResult>>}"," */","SObject.prototype.recent = function (callback) {","  return this._conn.recent(this.type, callback);","};","","/**"," * Retrieve the updated records"," *"," * @param {String|Date} start - start date or string representing the start of the interval"," * @param {String|Date} end - start date or string representing the end of the interval, must be > start"," * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function"," * @returns {Promise.<UpdatedRecordsInfo>}"," */","SObject.prototype.updated = function (start, end, callback) {","  return this._conn.updated(this.type, start, end, callback);","};","","/**"," * Retrieve the deleted records"," *"," * @param {String|Date} start - start date or string representing the start of the interval"," * @param {String|Date} end - start date or string representing the end of the interval, must be > start"," * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function"," * @returns {Promise.<DeletedRecordsInfo>}"," */","SObject.prototype.deleted = function (start, end, callback) {","  return this._conn.deleted(this.type, start, end, callback);","};","","/**"," * @typedef {Object} LayoutInfo"," * @prop {Array.<Object>} layouts - Array of layouts"," * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings"," */","/**"," * Describe layout information for SObject"," *"," * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)"," * @param {Callback.<LayoutInfo>} [callback] - Callback function"," * @returns {Promise.<LayoutInfo>}"," */","SObject.prototype.layouts = function(layoutName, callback) {","  if (typeof layoutName === 'function') {","    callback = layoutName;","    layoutName = null;","  }","  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");","  return this._conn.request(url, callback);","};","","/**"," * @typedef {Object} CompactLayoutInfo"," * @prop {Array.<Object>} compactLayouts - Array of compact layouts"," * @prop {String} defaultCompactLayoutId - ID of default compact layout"," * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings"," */","/**"," * Describe compact layout information defined for SObject"," *"," * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function"," * @returns {Promise.<CompactLayoutInfo>}"," */","SObject.prototype.compactLayouts = function(callback) {","  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";","  return this._conn.request(url, callback);","};","","","/**"," * @typedef {Object} ApprovalLayoutInfo"," * @prop {Array.<Object>} approvalLayouts - Array of approval layouts"," */","/**"," * Describe compact layout information defined for SObject"," *"," * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function"," * @returns {Promise.<ApprovalLayoutInfo>}"," */","SObject.prototype.approvalLayouts = function(callback) {","  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";","  return this._conn.request(url, callback);","};","","/**"," * Returns the list of list views for the SObject"," *"," * @param {Callback.<ListViewsInfo>} [callback] - Callback function"," * @returns {Promise.<ListViewsInfo>}"," */","SObject.prototype.listviews = function(callback) {","  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';","  return this._conn.request(url, callback);","};","","/**"," * Returns the list view info in specifed view id"," *"," * @param {String} id - List view ID"," * @returns {ListView}"," */","SObject.prototype.listview = function(id) {","  return new ListView(this._conn, this.type, id);","};","","/**"," * Returns all registered quick actions for the SObject"," *"," * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}"," */","SObject.prototype.quickActions = function(callback) {","  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);","};","","/**"," * Get reference for specified quick aciton in the SObject"," *"," * @param {String} actionName - Name of the quick action"," * @returns {QuickAction}"," */","SObject.prototype.quickAction = function(actionName) {","  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);","};","","","/**"," * A class for organizing list view information"," *"," * @protected"," * @class ListView"," * @param {Connection} conn - Connection instance"," * @param {SObject} type - SObject type"," * @param {String} id - List view ID"," */","var ListView = function(conn, type, id) {","  this._conn = conn;","  this.type = type;","  this.id = id;","};","","/**"," * Executes query for the list view and returns the resulting data and presentation information."," *"," * @param {Callback.<ListViewResultInfo>} [callback] - Callback function"," * @returns {Promise.<ListViewResultInfo>}"," */","ListView.prototype.results = function(callback) {","  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';","  return this._conn.request(url, callback);","};","","","/**"," * Returns detailed information about a list view"," *"," * @param {Object} [options] - Identity call options"," * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request"," * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function"," * @returns {Promise.<ListViewDescribeInfo>}"," */","ListView.prototype.describe = function(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  options = options || {};","  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';","  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);","};","","/**"," * Explain plan for executing list view"," *"," * @param {Callback.<ExplainInfo>} [callback] - Callback function"," * @returns {Promise.<ExplainInfo>}"," */","ListView.prototype.explain = function(callback) {","  var url = \"/query/?explain=\" + this.id;","  return this._conn.request(url, callback);","};",""],"l":{"8":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"56":1,"58":0,"59":0,"60":0,"62":0,"73":1,"74":0,"75":0,"76":0,"78":0,"89":1,"90":0,"91":0,"92":0,"94":0,"106":1,"107":0,"108":0,"109":0,"111":0,"139":1,"142":0,"143":0,"144":0,"146":0,"155":1,"156":0,"165":1,"166":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"195":0,"196":0,"204":0,"205":0,"206":0,"207":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"236":0,"237":0,"238":0,"239":0,"240":0,"250":1,"251":0,"261":1,"262":0,"263":0,"264":0,"266":0,"267":0,"268":0,"269":0,"283":1,"284":0,"303":1,"305":0,"315":1,"316":0,"327":1,"328":0,"347":1,"349":0,"368":1,"370":0,"379":1,"380":0,"391":1,"392":0,"403":1,"404":0,"419":1,"420":0,"421":0,"422":0,"424":0,"425":0,"440":1,"441":0,"442":0,"456":1,"457":0,"458":0,"467":1,"468":0,"469":0,"478":1,"479":0,"488":1,"489":0,"498":1,"499":0,"512":1,"513":0,"514":0,"515":0,"524":1,"525":0,"526":0,"538":1,"539":0,"540":0,"541":0,"543":0,"544":0,"545":0,"554":1,"555":0,"556":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/record.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/record.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":39},"end":{"line":26,"column":64}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":37},"end":{"line":39,"column":65}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":35},"end":{"line":55,"column":71}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":36},"end":{"line":90,"column":64}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":33},"end":{"line":104,"column":53}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"2":{"start":{"line":26,"column":0},"end":{"line":30,"column":2}},"3":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":15}},"6":{"start":{"line":39,"column":0},"end":{"line":45,"column":2}},"7":{"start":{"line":40,"column":2},"end":{"line":43,"column":3}},"8":{"start":{"line":41,"column":4},"end":{"line":41,"column":23}},"9":{"start":{"line":42,"column":4},"end":{"line":42,"column":17}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":68}},"11":{"start":{"line":55,"column":0},"end":{"line":63,"column":2}},"12":{"start":{"line":56,"column":2},"end":{"line":59,"column":3}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":23}},"14":{"start":{"line":58,"column":4},"end":{"line":58,"column":17}},"15":{"start":{"line":60,"column":2},"end":{"line":60,"column":27}},"16":{"start":{"line":61,"column":2},"end":{"line":61,"column":22}},"17":{"start":{"line":62,"column":2},"end":{"line":62,"column":65}},"18":{"start":{"line":73,"column":0},"end":{"line":96,"column":2}},"19":{"start":{"line":91,"column":2},"end":{"line":94,"column":3}},"20":{"start":{"line":92,"column":4},"end":{"line":92,"column":23}},"21":{"start":{"line":93,"column":4},"end":{"line":93,"column":17}},"22":{"start":{"line":95,"column":2},"end":{"line":95,"column":67}},"23":{"start":{"line":104,"column":0},"end":{"line":107,"column":2}},"24":{"start":{"line":105,"column":2},"end":{"line":105,"column":91}},"25":{"start":{"line":106,"column":2},"end":{"line":106,"column":42}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"3":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]}},"code":["/**"," * @file Represents Salesforce record information"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _ = require('lodash/core');","","/**"," * A simple hash object including record field information"," *"," * @typedef {Object} Record"," */","","/**"," * Remote reference to record information"," *"," * @protected"," * @class"," * @constructor"," * @param {Connection} conn - Connection object"," * @param {String} type - SObject type"," * @param {String} id - Record ID"," */","var RecordReference = module.exports = function(conn, type, id) {","  this._conn = conn;","  this.type = type;","  this.id = id;","};","","/**"," * Retrieve record field information"," *"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<Record>} [callback] - Callback function"," * @returns {Promise.<Record>}"," */","RecordReference.prototype.retrieve = function(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.retrieve(this.type, this.id, options, callback);","};","","/**"," * Update record field information"," *"," * @param {Record} record - A Record which includes fields to update"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult>} [callback] - Callback function"," * @returns {Promise.<RecordResult>}"," */","RecordReference.prototype.update = function(record, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  record = _.clone(record);","  record.Id = this.id;","  return this._conn.update(this.type, record, options, callback);","};","","/**"," * Synonym of Record#destroy()"," *"," * @method RecordReference#delete"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult>} [callback] - Callback function"," * @returns {Promise.<RecordResult>}"," */","RecordReference.prototype[\"delete\"] =","/**"," * Synonym of Record#destroy()"," *"," * @method RecordReference#del"," * @param {Callback.<RecordResult>} [callback] - Callback function"," * @returns {Promise.<RecordResult>}"," */","RecordReference.prototype.del =","/**"," * Delete record field"," *"," * @method RecordReference#destroy"," * @param {Object} [options] - Options for rest api."," * @param {Callback.<RecordResult>} [callback] - Callback function"," * @returns {Promise.<RecordResult>}"," */","RecordReference.prototype.destroy = function(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  return this._conn.destroy(this.type, this.id, options, callback);","};","","/**"," * Get blob field as stream"," *"," * @param {String} fieldName - Blob field name"," * @returns {stream.Stream}"," */","RecordReference.prototype.blob = function(fieldName) {","  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');","  return this._conn.request(url).stream();","};",""],"l":{"8":1,"26":1,"27":0,"28":0,"29":0,"39":1,"40":0,"41":0,"42":0,"44":0,"55":1,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"73":1,"91":0,"92":0,"93":0,"95":0,"104":1,"105":0,"106":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/cache.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":28}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":27},"end":{"line":32,"column":46}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":27},"end":{"line":48,"column":43}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":29},"end":{"line":56,"column":40}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":23}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":22},"end":{"line":78,"column":36}}},"7":{"name":"(anonymous_7)","line":92,"loc":{"start":{"line":92,"column":24},"end":{"line":92,"column":38}}},"8":{"name":"createCacheKey","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":41}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":39},"end":{"line":106,"column":50}}},"10":{"name":"(anonymous_10)","line":119,"loc":{"start":{"line":119,"column":40},"end":{"line":119,"column":69}}},"11":{"name":"(anonymous_11)","line":122,"loc":{"start":{"line":122,"column":9},"end":{"line":122,"column":20}}},"12":{"name":"(anonymous_12)","line":135,"loc":{"start":{"line":135,"column":16},"end":{"line":135,"column":38}}},"13":{"name":"(anonymous_13)","line":148,"loc":{"start":{"line":148,"column":24},"end":{"line":148,"column":41}}},"14":{"name":"(anonymous_14)","line":151,"loc":{"start":{"line":151,"column":11},"end":{"line":151,"column":25}}},"15":{"name":"(anonymous_15)","line":175,"loc":{"start":{"line":175,"column":32},"end":{"line":175,"column":61}}},"16":{"name":"(anonymous_16)","line":178,"loc":{"start":{"line":178,"column":12},"end":{"line":178,"column":23}}},"17":{"name":"(anonymous_17)","line":194,"loc":{"start":{"line":194,"column":14},"end":{"line":194,"column":30}}},"18":{"name":"(anonymous_18)","line":199,"loc":{"start":{"line":199,"column":16},"end":{"line":199,"column":38}}},"19":{"name":"(anonymous_19)","line":205,"loc":{"start":{"line":205,"column":14},"end":{"line":205,"column":25}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":36}},"2":{"start":{"line":20,"column":0},"end":{"line":22,"column":2}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":24}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}},"5":{"start":{"line":32,"column":0},"end":{"line":41,"column":2}},"6":{"start":{"line":33,"column":2},"end":{"line":40,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":33}},"9":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":38}},"11":{"start":{"line":48,"column":0},"end":{"line":51,"column":2}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":22}},"13":{"start":{"line":50,"column":2},"end":{"line":50,"column":34}},"14":{"start":{"line":56,"column":0},"end":{"line":59,"column":2}},"15":{"start":{"line":57,"column":2},"end":{"line":57,"column":24}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":21}},"17":{"start":{"line":68,"column":0},"end":{"line":70,"column":2}},"18":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"19":{"start":{"line":78,"column":0},"end":{"line":86,"column":2}},"20":{"start":{"line":79,"column":2},"end":{"line":85,"column":3}},"21":{"start":{"line":80,"column":4},"end":{"line":80,"column":30}},"22":{"start":{"line":82,"column":4},"end":{"line":82,"column":33}},"23":{"start":{"line":83,"column":4},"end":{"line":83,"column":31}},"24":{"start":{"line":84,"column":4},"end":{"line":84,"column":17}},"25":{"start":{"line":92,"column":0},"end":{"line":98,"column":2}},"26":{"start":{"line":93,"column":2},"end":{"line":97,"column":3}},"27":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"28":{"start":{"line":95,"column":6},"end":{"line":95,"column":31}},"29":{"start":{"line":104,"column":0},"end":{"line":107,"column":1}},"30":{"start":{"line":105,"column":2},"end":{"line":105,"column":43}},"31":{"start":{"line":106,"column":2},"end":{"line":106,"column":97}},"32":{"start":{"line":106,"column":52},"end":{"line":106,"column":77}},"33":{"start":{"line":119,"column":0},"end":{"line":164,"column":2}},"34":{"start":{"line":120,"column":2},"end":{"line":120,"column":19}},"35":{"start":{"line":121,"column":2},"end":{"line":121,"column":26}},"36":{"start":{"line":122,"column":2},"end":{"line":163,"column":4}},"37":{"start":{"line":123,"column":4},"end":{"line":123,"column":54}},"38":{"start":{"line":124,"column":4},"end":{"line":124,"column":30}},"39":{"start":{"line":125,"column":4},"end":{"line":128,"column":5}},"40":{"start":{"line":126,"column":6},"end":{"line":126,"column":26}},"41":{"start":{"line":127,"column":6},"end":{"line":127,"column":22}},"42":{"start":{"line":129,"column":4},"end":{"line":131,"column":54}},"43":{"start":{"line":132,"column":4},"end":{"line":132,"column":31}},"44":{"start":{"line":133,"column":4},"end":{"line":133,"column":26}},"45":{"start":{"line":134,"column":4},"end":{"line":139,"column":5}},"46":{"start":{"line":135,"column":6},"end":{"line":138,"column":9}},"47":{"start":{"line":136,"column":8},"end":{"line":136,"column":50}},"48":{"start":{"line":137,"column":8},"end":{"line":137,"column":30}},"49":{"start":{"line":140,"column":4},"end":{"line":140,"column":19}},"50":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"51":{"start":{"line":142,"column":6},"end":{"line":142,"column":42}},"52":{"start":{"line":144,"column":6},"end":{"line":144,"column":16}},"53":{"start":{"line":146,"column":4},"end":{"line":162,"column":5}},"54":{"start":{"line":147,"column":6},"end":{"line":157,"column":7}},"55":{"start":{"line":148,"column":8},"end":{"line":154,"column":11}},"56":{"start":{"line":149,"column":10},"end":{"line":149,"column":58}},"57":{"start":{"line":150,"column":10},"end":{"line":150,"column":24}},"58":{"start":{"line":152,"column":10},"end":{"line":152,"column":55}},"59":{"start":{"line":153,"column":10},"end":{"line":153,"column":20}},"60":{"start":{"line":156,"column":8},"end":{"line":156,"column":19}},"61":{"start":{"line":159,"column":6},"end":{"line":159,"column":47}},"62":{"start":{"line":160,"column":6},"end":{"line":160,"column":33}},"63":{"start":{"line":160,"column":19},"end":{"line":160,"column":31}},"64":{"start":{"line":161,"column":6},"end":{"line":161,"column":17}},"65":{"start":{"line":175,"column":0},"end":{"line":212,"column":2}},"66":{"start":{"line":176,"column":2},"end":{"line":176,"column":19}},"67":{"start":{"line":177,"column":2},"end":{"line":177,"column":26}},"68":{"start":{"line":178,"column":2},"end":{"line":204,"column":4}},"69":{"start":{"line":179,"column":4},"end":{"line":179,"column":54}},"70":{"start":{"line":180,"column":4},"end":{"line":180,"column":30}},"71":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"72":{"start":{"line":182,"column":6},"end":{"line":182,"column":26}},"73":{"start":{"line":184,"column":4},"end":{"line":186,"column":54}},"74":{"start":{"line":187,"column":4},"end":{"line":187,"column":31}},"75":{"start":{"line":188,"column":4},"end":{"line":193,"column":5}},"76":{"start":{"line":189,"column":6},"end":{"line":189,"column":30}},"77":{"start":{"line":190,"column":6},"end":{"line":190,"column":81}},"78":{"start":{"line":190,"column":20},"end":{"line":190,"column":79}},"79":{"start":{"line":191,"column":6},"end":{"line":191,"column":45}},"80":{"start":{"line":191,"column":25},"end":{"line":191,"column":43}},"81":{"start":{"line":192,"column":6},"end":{"line":192,"column":26}},"82":{"start":{"line":194,"column":4},"end":{"line":196,"column":7}},"83":{"start":{"line":195,"column":6},"end":{"line":195,"column":42}},"84":{"start":{"line":197,"column":4},"end":{"line":203,"column":5}},"85":{"start":{"line":198,"column":6},"end":{"line":198,"column":28}},"86":{"start":{"line":199,"column":6},"end":{"line":201,"column":9}},"87":{"start":{"line":200,"column":8},"end":{"line":200,"column":50}},"88":{"start":{"line":202,"column":6},"end":{"line":202,"column":36}},"89":{"start":{"line":205,"column":2},"end":{"line":210,"column":4}},"90":{"start":{"line":206,"column":4},"end":{"line":208,"column":59}},"91":{"start":{"line":209,"column":4},"end":{"line":209,"column":21}},"92":{"start":{"line":211,"column":2},"end":{"line":211,"column":13}},"93":{"start":{"line":215,"column":0},"end":{"line":215,"column":23}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"4":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":9}},{"start":{"line":79,"column":13},"end":{"line":79,"column":31}}]},"5":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"6":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":12}},{"start":{"line":94,"column":16},"end":{"line":94,"column":36}}]},"7":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":19}},{"start":{"line":121,"column":23},"end":{"line":121,"column":25}}]},"8":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"9":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":40},"end":{"line":129,"column":51}},{"start":{"line":130,"column":14},"end":{"line":131,"column":53}}]},"10":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":42},"end":{"line":130,"column":72}},{"start":{"line":131,"column":14},"end":{"line":131,"column":53}}]},"11":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"12":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":21},"end":{"line":142,"column":26}},{"start":{"line":142,"column":30},"end":{"line":142,"column":34}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"14":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":11}},{"start":{"line":146,"column":15},"end":{"line":146,"column":37}}]},"15":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"16":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":6}},{"start":{"line":160,"column":6},"end":{"line":160,"column":6}}]},"17":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":19}},{"start":{"line":177,"column":23},"end":{"line":177,"column":25}}]},"18":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"19":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":40},"end":{"line":184,"column":51}},{"start":{"line":185,"column":14},"end":{"line":186,"column":53}}]},"20":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":42},"end":{"line":185,"column":72}},{"start":{"line":186,"column":14},"end":{"line":186,"column":53}}]},"21":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"22":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":6}},{"start":{"line":190,"column":6},"end":{"line":190,"column":6}}]},"23":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"24":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"25":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":15},"end":{"line":202,"column":20}},{"start":{"line":202,"column":24},"end":{"line":202,"column":28}}]},"26":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":40},"end":{"line":206,"column":51}},{"start":{"line":207,"column":14},"end":{"line":208,"column":58}}]},"27":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":42},"end":{"line":207,"column":77}},{"start":{"line":208,"column":14},"end":{"line":208,"column":58}}]}},"code":["/**"," * @file Manages asynchronous method response cache"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var events = require('events'),","    inherits = require('inherits'),","    _      = require('lodash/core');","","/**"," * Class for managing cache entry"," *"," * @private"," * @class"," * @constructor"," * @template T"," */","var CacheEntry = function() {","  this.fetching = false;","};","","inherits(CacheEntry, events.EventEmitter);","","/**"," * Get value in the cache entry"," *"," * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated"," * @returns {T|undefined}"," */","CacheEntry.prototype.get = function(callback) {","  if (!callback) {","    return this._value;","  } else {","    this.once('value', callback);","    if (!_.isUndefined(this._value)) {","      this.emit('value', this._value);","    }","  }","};","","/**"," * Set value in the cache entry"," *"," * @param {T} [value] - A value for caching"," */","CacheEntry.prototype.set = function(value) {","  this._value = value;","  this.emit('value', this._value);","};","","/**"," * Clear cached value"," */","CacheEntry.prototype.clear = function() {","  this.fetching = false;","  delete this._value;","};","","","/**"," * Caching manager for async methods"," *"," * @class"," * @constructor"," */","var Cache = function() {","  this._entries = {};","};","","/**"," * retrive cache entry, or create if not exists."," *"," * @param {String} [key] - Key of cache entry"," * @returns {CacheEntry}"," */","Cache.prototype.get = function(key) {","  if (key && this._entries[key]) {","    return this._entries[key];","  } else {","    var entry = new CacheEntry();","    this._entries[key] = entry;","    return entry;","  }","};","","/**"," * clear cache entries prefix matching given key"," * @param {String} [key] - Key prefix of cache entry to clear"," */","Cache.prototype.clear = function(key) {","  for (var k in this._entries) {","    if (!key || k.indexOf(key) === 0) {","      this._entries[k].clear();","    }","  }","};","","/**"," * create and return cache key from namespace and serialized arguments."," * @private"," */","function createCacheKey(namespace, args) {","  args = Array.prototype.slice.apply(args);","  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';","}","","/**"," * Enable caching for async call fn to intercept the response and store it to cache."," * The original async calll fn is always invoked."," *"," * @protected"," * @param {Function} fn - Function to covert cacheable"," * @param {Object} [scope] - Scope of function call"," * @param {Object} [options] - Options"," * @return {Function} - Cached version of function"," */","Cache.prototype.makeResponseCacheable = function(fn, scope, options) {","  var cache = this;","  options = options || {};","  return function() {","    var args = Array.prototype.slice.apply(arguments);","    var callback = args.pop();","    if (!_.isFunction(callback)) {","      args.push(callback);","      callback = null;","    }","    var key = _.isString(options.key) ? options.key :","              _.isFunction(options.key) ? options.key.apply(scope, args) :","              createCacheKey(options.namespace, args);","    var entry = cache.get(key);","    entry.fetching = true;","    if (callback) {","      args.push(function(err, result) {","        entry.set({ error: err, result: result });","        callback(err, result);","      });","    }","    var ret, error;","    try {","      ret = fn.apply(scope || this, args);","    } catch(e) {","      error = e;","    }","    if (ret && _.isFunction(ret.then)) { // if the returned value is promise","      if (!callback) {","        return ret.then(function(result) {","          entry.set({ error: undefined, result: result });","          return result;","        }, function(err) {","          entry.set({ error: err, result: undefined });","          throw err;","        });","      } else {","        return ret;","      }","    } else {","      entry.set({ error: error, result: ret });","      if (error) { throw error; }","      return ret;","    }","  };","};","","/**"," * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value."," *"," * @protected"," * @param {Function} fn - Function to covert cacheable"," * @param {Object} [scope] - Scope of function call"," * @param {Object} [options] - Options"," * @return {Function} - Cached version of function"," */","Cache.prototype.makeCacheable = function(fn, scope, options) {","  var cache = this;","  options = options || {};","  var $fn = function() {","    var args = Array.prototype.slice.apply(arguments);","    var callback = args.pop();","    if (!_.isFunction(callback)) {","      args.push(callback);","    }","    var key = _.isString(options.key) ? options.key :","              _.isFunction(options.key) ? options.key.apply(scope, args) :","              createCacheKey(options.namespace, args);","    var entry = cache.get(key);","    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).","      var value = entry.get();","      if (!value) { throw new Error('Function call result is not cached yet.'); }","      if (value.error) { throw value.error; }","      return value.result;","    }","    entry.get(function(value) {","      callback(value.error, value.result);","    });","    if (!entry.fetching) { // only when no other client is calling function","      entry.fetching = true;","      args.push(function(err, result) {","        entry.set({ error: err, result: result });","      });","      fn.apply(scope || this, args);","    }","  };","  $fn.clear = function() {","    var key = _.isString(options.key) ? options.key :","              _.isFunction(options.key) ? options.key.apply(scope, arguments) :","              createCacheKey(options.namespace, arguments);","    cache.clear(key);","  };","  return $fn;","};","","","module.exports = Cache;",""],"l":{"8":1,"20":1,"21":0,"24":1,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"48":1,"49":0,"50":0,"56":1,"57":0,"58":0,"68":1,"69":0,"78":1,"79":0,"80":0,"82":0,"83":0,"84":0,"92":1,"93":0,"94":0,"95":0,"104":1,"105":0,"106":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"129":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"140":0,"141":0,"142":0,"144":0,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"153":0,"156":0,"159":0,"160":0,"161":0,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"184":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"194":0,"195":0,"197":0,"198":0,"199":0,"200":0,"202":0,"205":0,"206":0,"209":0,"211":0,"215":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/quick-action.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/quick-action.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":35},"end":{"line":15,"column":56}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":33},"end":{"line":42,"column":52}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":38},"end":{"line":54,"column":68}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":32},"end":{"line":84,"column":70}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":20}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":20}},"4":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}},"5":{"start":{"line":43,"column":2},"end":{"line":43,"column":37}},"6":{"start":{"line":44,"column":2},"end":{"line":44,"column":52}},"7":{"start":{"line":54,"column":0},"end":{"line":64,"column":2}},"8":{"start":{"line":55,"column":2},"end":{"line":58,"column":3}},"9":{"start":{"line":56,"column":4},"end":{"line":56,"column":25}},"10":{"start":{"line":57,"column":4},"end":{"line":57,"column":21}},"11":{"start":{"line":59,"column":2},"end":{"line":59,"column":42}},"12":{"start":{"line":60,"column":2},"end":{"line":62,"column":3}},"13":{"start":{"line":61,"column":4},"end":{"line":61,"column":27}},"14":{"start":{"line":63,"column":2},"end":{"line":63,"column":52}},"15":{"start":{"line":84,"column":0},"end":{"line":90,"column":2}},"16":{"start":{"line":85,"column":2},"end":{"line":88,"column":4}},"17":{"start":{"line":89,"column":2},"end":{"line":89,"column":69}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]}},"code":["/**"," * @file Represents Salesforce QuickAction"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","","/**"," * A class for quick action"," *"," * @protected"," * @constructor"," */","var QuickAction = module.exports = function(conn, path) {","  this._conn = conn;","  this._path = path;","};","","/**"," * @typedef {Object} QuickAction~QuickActionInfo"," * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)"," * @prop {String} name - Name of the action"," * @prop {String} label - Label of the action"," * @prop {Object} urls - Endpoint URL information of the action"," */","/**"," * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo"," * @prop {String} contextSobjectType - Object type used for the action"," * @prop {String} targetSobjectType - Object type of the action to target"," * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID."," * @prop {String} targetRecordTypeId - Record type of the targeted record"," * @prop {Object} layout - Layout sections that comprise an action"," */","","/**"," * Describe the action's information (including layout, etc.)"," *"," * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function"," * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}"," */","QuickAction.prototype.describe = function(callback) {","  var url = this._path + \"/describe\";","  return this._conn.request(url).thenCall(callback);","};","","/**"," * Retrieve default field values in the action (for given record, if specified)"," *"," * @param {String} [contextId] - ID of record to get default values specific to the record"," * @param {Callback.<Record>} [callback] - Callback function"," * @returns {Promise.<Record>}"," */","QuickAction.prototype.defaultValues = function(contextId, callback) {","  if (typeof contextId === 'function') {","    callback = contextId;","    contextId = null;","  }","  var url = this._path + \"/defaultValues\";","  if (contextId) {","    url += \"/\" + contextId;","  }","  return this._conn.request(url).thenCall(callback);","};","","/**"," * @typedef {Object} QuickAction~QuickActionResult"," * @param {String} id - Record id of the action result"," * @param {Array.<String>} feedItemIds - List of IDs for feed item"," * @param {Boolean} success - True if the action successfully completed"," * @param {Boolean} created - True if the action yields a new record"," * @param {String} contextId - Context record ID of the action"," * @param {Array.<Object>} errors - Errors if the action failed"," */","","/**"," * Execute the action for given context Id and record information"," * "," * @param {String} contextId - Context record ID of the action"," * @param {Record} record - Input record information for the action"," * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function"," * @returns {Promise.<QuickAction~QuickActionResult>}"," */","QuickAction.prototype.execute = function(contextId, record, callback) {","  var body = {","    contextId: contextId,","    record: record","  };","  return this._conn.requestPost(this._path, body).thenCall(callback);","};",""],"l":{"15":1,"16":0,"17":0,"42":1,"43":0,"44":0,"54":1,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"63":0,"84":1,"85":0,"89":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/http-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/http-api.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":1,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":38}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":20},"end":{"line":22,"column":34}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":28},"end":{"line":40,"column":56}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":17},"end":{"line":50,"column":31}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":31},"end":{"line":63,"column":50}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":7},"end":{"line":65,"column":21}}},"7":{"name":"(anonymous_7)","line":82,"loc":{"start":{"line":82,"column":51},"end":{"line":82,"column":70}}},"8":{"name":"(anonymous_8)","line":99,"loc":{"start":{"line":99,"column":5},"end":{"line":99,"column":19}}},"9":{"name":"(anonymous_9)","line":111,"loc":{"start":{"line":111,"column":39},"end":{"line":111,"column":50}}},"10":{"name":"(anonymous_10)","line":119,"loc":{"start":{"line":119,"column":31},"end":{"line":119,"column":49}}},"11":{"name":"(anonymous_11)","line":137,"loc":{"start":{"line":137,"column":43},"end":{"line":137,"column":62}}},"12":{"name":"(anonymous_12)","line":144,"loc":{"start":{"line":144,"column":38},"end":{"line":144,"column":57}}},"13":{"name":"(anonymous_13)","line":161,"loc":{"start":{"line":161,"column":36},"end":{"line":161,"column":55}}},"14":{"name":"parseJSON","line":181,"loc":{"start":{"line":181,"column":0},"end":{"line":181,"column":24}}},"15":{"name":"parseXML","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":23}}},"16":{"name":"(anonymous_16)","line":188,"loc":{"start":{"line":188,"column":63},"end":{"line":188,"column":85}}},"17":{"name":"parseCSV","line":196,"loc":{"start":{"line":196,"column":0},"end":{"line":196,"column":23}}},"18":{"name":"parseText","line":201,"loc":{"start":{"line":201,"column":0},"end":{"line":201,"column":24}}},"19":{"name":"(anonymous_19)","line":208,"loc":{"start":{"line":208,"column":37},"end":{"line":208,"column":56}}},"20":{"name":"(anonymous_20)","line":216,"loc":{"start":{"line":216,"column":36},"end":{"line":216,"column":55}}},"21":{"name":"(anonymous_21)","line":224,"loc":{"start":{"line":224,"column":43},"end":{"line":224,"column":58}}},"22":{"name":"(anonymous_22)","line":232,"loc":{"start":{"line":232,"column":31},"end":{"line":232,"column":46}}},"23":{"name":"(anonymous_23)","line":241,"loc":{"start":{"line":241,"column":29},"end":{"line":241,"column":54}}},"24":{"name":"(anonymous_24)","line":261,"loc":{"start":{"line":261,"column":29},"end":{"line":261,"column":55}}},"25":{"name":"(anonymous_25)","line":273,"loc":{"start":{"line":273,"column":43},"end":{"line":273,"column":69}}},"26":{"name":"(anonymous_26)","line":283,"loc":{"start":{"line":283,"column":31},"end":{"line":283,"column":63}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":35}},"2":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":20}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":65}},"6":{"start":{"line":22,"column":36},"end":{"line":22,"column":61}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":44}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":57}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":54}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"11":{"start":{"line":40,"column":0},"end":{"line":106,"column":2}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":28}},"15":{"start":{"line":44,"column":2},"end":{"line":44,"column":50}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":41}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":33}},"18":{"start":{"line":50,"column":2},"end":{"line":68,"column":4}},"19":{"start":{"line":51,"column":4},"end":{"line":54,"column":5}},"20":{"start":{"line":52,"column":6},"end":{"line":52,"column":27}},"21":{"start":{"line":53,"column":6},"end":{"line":53,"column":13}},"22":{"start":{"line":56,"column":4},"end":{"line":61,"column":5}},"23":{"start":{"line":60,"column":6},"end":{"line":60,"column":74}},"24":{"start":{"line":63,"column":4},"end":{"line":67,"column":7}},"25":{"start":{"line":64,"column":6},"end":{"line":64,"column":33}},"26":{"start":{"line":66,"column":6},"end":{"line":66,"column":27}},"27":{"start":{"line":70,"column":2},"end":{"line":73,"column":3}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":45}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":47}},"30":{"start":{"line":76,"column":2},"end":{"line":76,"column":27}},"31":{"start":{"line":78,"column":2},"end":{"line":78,"column":32}},"32":{"start":{"line":79,"column":2},"end":{"line":79,"column":78}},"33":{"start":{"line":80,"column":2},"end":{"line":80,"column":31}},"34":{"start":{"line":82,"column":2},"end":{"line":105,"column":22}},"35":{"start":{"line":83,"column":4},"end":{"line":83,"column":34}},"36":{"start":{"line":84,"column":4},"end":{"line":84,"column":77}},"37":{"start":{"line":85,"column":4},"end":{"line":85,"column":86}},"38":{"start":{"line":87,"column":4},"end":{"line":87,"column":36}},"39":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"40":{"start":{"line":91,"column":6},"end":{"line":91,"column":53}},"41":{"start":{"line":92,"column":6},"end":{"line":92,"column":30}},"42":{"start":{"line":94,"column":4},"end":{"line":97,"column":5}},"43":{"start":{"line":95,"column":6},"end":{"line":95,"column":40}},"44":{"start":{"line":96,"column":6},"end":{"line":96,"column":16}},"45":{"start":{"line":98,"column":4},"end":{"line":98,"column":42}},"46":{"start":{"line":100,"column":4},"end":{"line":100,"column":34}},"47":{"start":{"line":101,"column":4},"end":{"line":101,"column":77}},"48":{"start":{"line":102,"column":4},"end":{"line":102,"column":22}},"49":{"start":{"line":103,"column":4},"end":{"line":103,"column":14}},"50":{"start":{"line":111,"column":0},"end":{"line":113,"column":2}},"51":{"start":{"line":112,"column":2},"end":{"line":112,"column":37}},"52":{"start":{"line":119,"column":0},"end":{"line":131,"column":2}},"53":{"start":{"line":120,"column":2},"end":{"line":120,"column":42}},"54":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"55":{"start":{"line":122,"column":4},"end":{"line":122,"column":71}},"56":{"start":{"line":124,"column":2},"end":{"line":130,"column":3}},"57":{"start":{"line":125,"column":4},"end":{"line":125,"column":25}},"58":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"59":{"start":{"line":127,"column":6},"end":{"line":127,"column":66}},"60":{"start":{"line":129,"column":4},"end":{"line":129,"column":68}},"61":{"start":{"line":137,"column":0},"end":{"line":139,"column":2}},"62":{"start":{"line":138,"column":2},"end":{"line":138,"column":84}},"63":{"start":{"line":144,"column":0},"end":{"line":155,"column":2}},"64":{"start":{"line":145,"column":2},"end":{"line":145,"column":58}},"65":{"start":{"line":146,"column":2},"end":{"line":149,"column":19}},"66":{"start":{"line":150,"column":2},"end":{"line":154,"column":3}},"67":{"start":{"line":151,"column":4},"end":{"line":151,"column":36}},"68":{"start":{"line":153,"column":4},"end":{"line":153,"column":25}},"69":{"start":{"line":161,"column":0},"end":{"line":178,"column":2}},"70":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"71":{"start":{"line":163,"column":4},"end":{"line":163,"column":35}},"72":{"start":{"line":165,"column":2},"end":{"line":165,"column":46}},"73":{"start":{"line":166,"column":2},"end":{"line":166,"column":10}},"74":{"start":{"line":167,"column":2},"end":{"line":170,"column":3}},"75":{"start":{"line":168,"column":4},"end":{"line":168,"column":40}},"76":{"start":{"line":169,"column":4},"end":{"line":169,"column":14}},"77":{"start":{"line":171,"column":2},"end":{"line":176,"column":3}},"78":{"start":{"line":172,"column":4},"end":{"line":172,"column":46}},"79":{"start":{"line":173,"column":4},"end":{"line":173,"column":34}},"80":{"start":{"line":174,"column":4},"end":{"line":174,"column":23}},"81":{"start":{"line":175,"column":4},"end":{"line":175,"column":14}},"82":{"start":{"line":177,"column":2},"end":{"line":177,"column":14}},"83":{"start":{"line":181,"column":0},"end":{"line":183,"column":1}},"84":{"start":{"line":182,"column":2},"end":{"line":182,"column":25}},"85":{"start":{"line":186,"column":0},"end":{"line":193,"column":1}},"86":{"start":{"line":187,"column":2},"end":{"line":187,"column":15}},"87":{"start":{"line":188,"column":2},"end":{"line":190,"column":5}},"88":{"start":{"line":189,"column":4},"end":{"line":189,"column":42}},"89":{"start":{"line":191,"column":2},"end":{"line":191,"column":37}},"90":{"start":{"line":191,"column":19},"end":{"line":191,"column":35}},"91":{"start":{"line":192,"column":2},"end":{"line":192,"column":20}},"92":{"start":{"line":196,"column":0},"end":{"line":198,"column":1}},"93":{"start":{"line":197,"column":2},"end":{"line":197,"column":40}},"94":{"start":{"line":201,"column":0},"end":{"line":201,"column":39}},"95":{"start":{"line":201,"column":26},"end":{"line":201,"column":37}},"96":{"start":{"line":208,"column":0},"end":{"line":210,"column":2}},"97":{"start":{"line":209,"column":2},"end":{"line":209,"column":37}},"98":{"start":{"line":216,"column":0},"end":{"line":218,"column":2}},"99":{"start":{"line":217,"column":2},"end":{"line":217,"column":36}},"100":{"start":{"line":224,"column":0},"end":{"line":226,"column":2}},"101":{"start":{"line":225,"column":2},"end":{"line":225,"column":15}},"102":{"start":{"line":232,"column":0},"end":{"line":235,"column":2}},"103":{"start":{"line":233,"column":2},"end":{"line":233,"column":20}},"104":{"start":{"line":234,"column":2},"end":{"line":234,"column":48}},"105":{"start":{"line":241,"column":0},"end":{"line":254,"column":2}},"106":{"start":{"line":242,"column":2},"end":{"line":242,"column":12}},"107":{"start":{"line":243,"column":2},"end":{"line":245,"column":15}},"108":{"start":{"line":244,"column":4},"end":{"line":244,"column":70}},"109":{"start":{"line":246,"column":2},"end":{"line":249,"column":4}},"110":{"start":{"line":250,"column":2},"end":{"line":250,"column":37}},"111":{"start":{"line":251,"column":2},"end":{"line":251,"column":29}},"112":{"start":{"line":252,"column":2},"end":{"line":252,"column":51}},"113":{"start":{"line":252,"column":27},"end":{"line":252,"column":49}},"114":{"start":{"line":253,"column":2},"end":{"line":253,"column":13}},"115":{"start":{"line":261,"column":0},"end":{"line":265,"column":2}},"116":{"start":{"line":262,"column":2},"end":{"line":262,"column":20}},"117":{"start":{"line":263,"column":2},"end":{"line":263,"column":30}},"118":{"start":{"line":264,"column":2},"end":{"line":264,"column":27}},"119":{"start":{"line":267,"column":0},"end":{"line":267,"column":54}},"120":{"start":{"line":273,"column":0},"end":{"line":293,"column":2}},"121":{"start":{"line":275,"column":2},"end":{"line":275,"column":59}},"122":{"start":{"line":275,"column":39},"end":{"line":275,"column":57}},"123":{"start":{"line":276,"column":2},"end":{"line":276,"column":18}},"124":{"start":{"line":277,"column":2},"end":{"line":277,"column":24}},"125":{"start":{"line":278,"column":2},"end":{"line":278,"column":28}},"126":{"start":{"line":279,"column":2},"end":{"line":279,"column":32}},"127":{"start":{"line":280,"column":2},"end":{"line":280,"column":35}},"128":{"start":{"line":280,"column":26},"end":{"line":280,"column":33}},"129":{"start":{"line":281,"column":2},"end":{"line":281,"column":34}},"130":{"start":{"line":282,"column":2},"end":{"line":282,"column":26}},"131":{"start":{"line":283,"column":2},"end":{"line":292,"column":5}},"132":{"start":{"line":284,"column":4},"end":{"line":288,"column":5}},"133":{"start":{"line":285,"column":6},"end":{"line":285,"column":92}},"134":{"start":{"line":286,"column":6},"end":{"line":286,"column":37}},"135":{"start":{"line":287,"column":6},"end":{"line":287,"column":45}},"136":{"start":{"line":289,"column":4},"end":{"line":289,"column":39}},"137":{"start":{"line":290,"column":4},"end":{"line":290,"column":29}},"138":{"start":{"line":291,"column":4},"end":{"line":291,"column":29}},"139":{"start":{"line":299,"column":0},"end":{"line":299,"column":56}},"140":{"start":{"line":300,"column":0},"end":{"line":300,"column":25}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":19}},{"start":{"line":20,"column":23},"end":{"line":20,"column":25}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":20},"end":{"line":24,"column":37}},{"start":{"line":24,"column":41},"end":{"line":24,"column":56}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"6":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":21}},{"start":{"line":70,"column":25},"end":{"line":70,"column":52}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"8":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":39}},{"start":{"line":90,"column":43},"end":{"line":90,"column":58}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"10":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":20},"end":{"line":120,"column":35}},{"start":{"line":120,"column":39},"end":{"line":120,"column":41}}]},"11":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":9},"end":{"line":138,"column":27}},{"start":{"line":138,"column":31},"end":{"line":138,"column":47}},{"start":{"line":138,"column":51},"end":{"line":138,"column":83}}]},"14":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":70},"end":{"line":146,"column":78}},{"start":{"line":147,"column":9},"end":{"line":149,"column":18}}]},"15":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":55},"end":{"line":147,"column":64}},{"start":{"line":148,"column":9},"end":{"line":149,"column":18}}]},"16":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":47},"end":{"line":148,"column":55}},{"start":{"line":149,"column":9},"end":{"line":149,"column":18}}]},"17":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"18":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"19":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"20":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"21":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":29},"end":{"line":234,"column":38}},{"start":{"line":234,"column":41},"end":{"line":234,"column":47}}]},"22":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":28},"end":{"line":244,"column":32}},{"start":{"line":244,"column":36},"end":{"line":244,"column":68}}]},"23":{"line":246,"type":"cond-expr","locations":[{"start":{"line":246,"column":59},"end":{"line":246,"column":64}},{"start":{"line":246,"column":67},"end":{"line":249,"column":3}}]},"24":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":10},"end":{"line":246,"column":27}},{"start":{"line":246,"column":31},"end":{"line":246,"column":56}}]},"25":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"26":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"27":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]}},"code":["'use strict';","","var inherits = require('inherits'),","    events = require('events'),","    _ = require('lodash/core'),","    Promise = require('./promise');","","/**"," * HTTP based API class with authorization hook"," *"," * @constructor"," * @extends events.EventEmitter"," * @param {Connection} conn - Connection object"," * @param {Object} [options] - Http API Options"," * @param {String} [options.responseType] - Overriding content mime-type in response"," * @param {Transport} [options.transport] - Transport for http api"," * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)"," */","var HttpApi = function(conn, options) {","  options = options || {};","  this._conn = conn;","  this.on('resume', function(err) { conn.emit('resume', err); });","  this._responseType = options.responseType;","  this._transport = options.transport || conn._transport;","  this._noContentResponse = options.noContentResponse;","};","","inherits(HttpApi, events.EventEmitter);","","/**"," * Callout to API endpoint using http"," *"," * @param {Object} request - Http Request object"," * @param {String} request.url - Endpoint URL to request"," * @param {String} request.method - Http method for request"," * @param {Object} [request.headers] - Http request headers in hash object"," * @param {Callback.<Object>} callback - Callback function"," * @returns {Promise.<Object>} -"," */","HttpApi.prototype.request = function(request, callback) {","  var self = this;","  var conn = this._conn;","  var logger = conn._logger;","  var refreshDelegate = this.getRefreshDelegate();","  // remember previous instance url in case it changes after a refresh","  var lastInstanceUrl = conn.instanceUrl;","","  var deferred = Promise.defer();","","  var onResume = function(err) {","    if (err) {","      deferred.reject(err);","      return;","    }","    // check to see if the token refresh has changed the instance url","    if(lastInstanceUrl !== conn.instanceUrl){","      // if the instance url has changed","      // then replace the current request urls instance url fragment","      // with the updated instance url","      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);","    }","","    self.request(request).then(function(response) {","      deferred.resolve(response);","    }, function(err) {","      deferred.reject(err);","    });","  };","","  if (refreshDelegate && refreshDelegate._refreshing) {","    refreshDelegate.once('resume', onResume);","    return deferred.promise.thenCall(callback);","  }","","  // hook before sending","  self.beforeSend(request);","","  self.emit('request', request);","  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);","  var requestTime = Date.now();","","  return this._transport.httpRequest(request).then(function(response) {","    var responseTime = Date.now();","    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");","    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);","","    self.emit('response', response);","    // Refresh token if session has been expired and requires authentication","    // when session refresh delegate is available","    if (self.isSessionExpired(response) && refreshDelegate) {","      refreshDelegate.refresh(requestTime, onResume);","      return deferred.promise;","    }","    if (self.isErrorResponse(response)) {","      var err = self.getError(response);","      throw err;","    }","    return self.getResponseBody(response);","  }, function(err) {","    var responseTime = Date.now();","    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");","    logger.error(err);","    throw err;","  })","  .thenCall(callback);","};","","/**"," * @protected"," */","HttpApi.prototype.getRefreshDelegate = function() {","  return this._conn._refreshDelegate;","};","","/**"," *"," * @protected"," */","HttpApi.prototype.beforeSend = function(request) {","  request.headers = request.headers || {};","  if (this._conn.accessToken) {","    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;","  }","  if (this._conn.callOptions) {","    var callOptions = [];","    for (var name in this._conn.callOptions) {","      callOptions.push(name + \"=\" + this._conn.callOptions[name]);","    }","    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');","  }","};","","/**"," * Detect response content mime-type"," * @protected"," */","HttpApi.prototype.getResponseContentType = function(response) {","  return this._responseType || response.headers && response.headers[\"content-type\"];","};","","/**"," *"," */","HttpApi.prototype.parseResponseBody = function(response) {","  var contentType = this.getResponseContentType(response);","  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :","         /^application\\/json(;|$)/.test(contentType) ? parseJSON :","         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :","         parseText;","  try {","    return parseBody(response.body);","  } catch(e) {","    return response.body;","  }","};","","/**"," * Get response body"," * @protected"," */","HttpApi.prototype.getResponseBody = function(response) {","  if (response.statusCode === 204) { // No Content","    return this._noContentResponse;","  }","  var body = this.parseResponseBody(response);","  var err;","  if (this.hasErrorInResponseBody(body)) {","    err = this.getError(response, body);","    throw err;","  }","  if (response.statusCode === 300) { // Multiple Choices","    err = new Error('Multiple records found');","    err.name = \"MULTIPLE_CHOICES\";","    err.content = body;","    throw err;","  }","  return body;","};","","/** @private */","function parseJSON(str) {","  return JSON.parse(str);","}","","/** @private */","function parseXML(str) {","  var ret = {};","  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {","    ret = { error: err, result : result };","  });","  if (ret.error) { throw ret.error; }","  return ret.result;","}","","/** @private */","function parseCSV(str) {","  return require('./csv').parseCSV(str);","}","","/** @private */","function parseText(str) { return str; }","","","/**"," * Detect session expiry"," * @protected"," */","HttpApi.prototype.isSessionExpired = function(response) {","  return response.statusCode === 401;","};","","/**"," * Detect error response"," * @protected"," */","HttpApi.prototype.isErrorResponse = function(response) {","  return response.statusCode >= 400;","};","","/**"," * Detect error in response body"," * @protected"," */","HttpApi.prototype.hasErrorInResponseBody = function(body) {","  return false;","};","","/**"," * Parsing error message in response"," * @protected"," */","HttpApi.prototype.parseError = function(body) {","  var errors = body;","  return _.isArray(errors) ? errors[0] : errors;","};","","/**"," * Get error message in response"," * @protected"," */","HttpApi.prototype.getError = function(response, body) {","  var error;","  try {","    error = this.parseError(body || this.parseResponseBody(response));","  } catch(e) {}","  error = _.isObject(error) && _.isString(error.message) ? error : {","    errorCode: 'ERROR_HTTP_' + response.statusCode,","    message : response.body","  };","  var err = new Error(error.message);","  err.name = error.errorCode;","  for (var key in error) { err[key] = error[key]; }","  return err;","};","","/*-------------------------------------------------------------------------*/","","/**"," * @protected"," */","var SessionRefreshDelegate = function(conn, refreshFn) {","  this._conn = conn;","  this._refreshFn = refreshFn;","  this._refreshing = false;","};","","inherits(SessionRefreshDelegate, events.EventEmitter);","","/**"," * Refresh access token"," * @private"," */","SessionRefreshDelegate.prototype.refresh = function(since, callback) {","  // Callback immediately When refreshed after designated time","  if (this._lastRefreshedAt > since) { return callback(); }","  var self = this;","  var conn = this._conn;","  var logger = conn._logger;","  self.once('resume', callback);","  if (self._refreshing) { return; }","  logger.debug(\"<refresh token>\");","  self._refreshing = true;","  return self._refreshFn(conn, function(err, accessToken, res) {","    if (!err) {","      logger.debug(\"Connection refresh completed. Refreshed access token = \" + accessToken);","      conn.accessToken = accessToken;","      conn.emit(\"refresh\", accessToken, res);","    }","    self._lastRefreshedAt = Date.now();","    self._refreshing = false;","    self.emit('resume', err);","  });","};","","","/**"," *"," */","HttpApi.SessionRefreshDelegate = SessionRefreshDelegate;","module.exports = HttpApi;",""],"l":{"3":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"28":1,"40":1,"41":0,"42":0,"43":0,"44":0,"46":0,"48":0,"50":0,"51":0,"52":0,"53":0,"56":0,"60":0,"63":0,"64":0,"66":0,"70":0,"71":0,"72":0,"76":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"87":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"98":0,"100":0,"101":0,"102":0,"103":0,"111":1,"112":0,"119":1,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"127":0,"129":0,"137":1,"138":0,"144":1,"145":0,"146":0,"150":0,"151":0,"153":0,"161":1,"162":0,"163":0,"165":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"177":0,"181":1,"182":0,"186":1,"187":0,"188":0,"189":0,"191":0,"192":0,"196":1,"197":0,"201":1,"208":1,"209":0,"216":1,"217":0,"224":1,"225":0,"232":1,"233":0,"234":0,"241":1,"242":0,"243":0,"244":0,"246":0,"250":0,"251":0,"252":0,"253":0,"261":1,"262":0,"263":0,"264":0,"267":1,"273":1,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"289":0,"290":0,"291":0,"299":1,"300":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/process.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/process.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":31},"end":{"line":18,"column":46}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":18},"end":{"line":37,"column":33}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":29},"end":{"line":55,"column":48}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":51},"end":{"line":56,"column":65}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":32},"end":{"line":76,"column":63}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":22},"end":{"line":96,"column":37}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":33},"end":{"line":114,"column":52}}},"8":{"name":"(anonymous_8)","line":115,"loc":{"start":{"line":115,"column":55},"end":{"line":115,"column":69}}},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":36},"end":{"line":139,"column":65}}},"10":{"name":"(anonymous_10)","line":140,"loc":{"start":{"line":140,"column":26},"end":{"line":140,"column":40}}},"11":{"name":"(anonymous_11)","line":156,"loc":{"start":{"line":156,"column":43},"end":{"line":156,"column":104}}},"12":{"name":"(anonymous_12)","line":189,"loc":{"start":{"line":189,"column":35},"end":{"line":189,"column":84}}},"13":{"name":"(anonymous_13)","line":206,"loc":{"start":{"line":206,"column":36},"end":{"line":206,"column":86}}},"14":{"name":"(anonymous_14)","line":223,"loc":{"start":{"line":223,"column":35},"end":{"line":223,"column":85}}},"15":{"name":"(anonymous_15)","line":242,"loc":{"start":{"line":242,"column":29},"end":{"line":242,"column":56}}},"16":{"name":"(anonymous_16)","line":253,"loc":{"start":{"line":253,"column":40},"end":{"line":253,"column":70}}},"17":{"name":"(anonymous_17)","line":255,"loc":{"start":{"line":255,"column":57},"end":{"line":255,"column":72}}},"18":{"name":"(anonymous_18)","line":268,"loc":{"start":{"line":268,"column":44},"end":{"line":268,"column":63}}},"19":{"name":"(anonymous_19)","line":269,"loc":{"start":{"line":269,"column":30},"end":{"line":269,"column":44}}},"20":{"name":"(anonymous_20)","line":271,"loc":{"start":{"line":271,"column":5},"end":{"line":271,"column":19}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":41}},"2":{"start":{"line":18,"column":0},"end":{"line":29,"column":2}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":36}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":44}},"5":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":20}},"7":{"start":{"line":55,"column":0},"end":{"line":59,"column":2}},"8":{"start":{"line":56,"column":2},"end":{"line":58,"column":24}},"9":{"start":{"line":57,"column":4},"end":{"line":57,"column":21}},"10":{"start":{"line":76,"column":0},"end":{"line":88,"column":2}},"11":{"start":{"line":77,"column":2},"end":{"line":77,"column":67}},"12":{"start":{"line":78,"column":2},"end":{"line":87,"column":24}},"13":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"14":{"start":{"line":97,"column":2},"end":{"line":97,"column":20}},"15":{"start":{"line":114,"column":0},"end":{"line":118,"column":2}},"16":{"start":{"line":115,"column":2},"end":{"line":117,"column":24}},"17":{"start":{"line":116,"column":4},"end":{"line":116,"column":25}},"18":{"start":{"line":139,"column":0},"end":{"line":149,"column":2}},"19":{"start":{"line":140,"column":2},"end":{"line":142,"column":5}},"20":{"start":{"line":141,"column":4},"end":{"line":141,"column":45}},"21":{"start":{"line":143,"column":2},"end":{"line":148,"column":24}},"22":{"start":{"line":156,"column":0},"end":{"line":174,"column":2}},"23":{"start":{"line":157,"column":2},"end":{"line":161,"column":3}},"24":{"start":{"line":158,"column":4},"end":{"line":158,"column":24}},"25":{"start":{"line":159,"column":4},"end":{"line":159,"column":19}},"26":{"start":{"line":160,"column":4},"end":{"line":160,"column":20}},"27":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"28":{"start":{"line":163,"column":4},"end":{"line":163,"column":23}},"29":{"start":{"line":164,"column":4},"end":{"line":164,"column":19}},"30":{"start":{"line":166,"column":2},"end":{"line":166,"column":26}},"31":{"start":{"line":167,"column":2},"end":{"line":171,"column":4}},"32":{"start":{"line":172,"column":2},"end":{"line":172,"column":29}},"33":{"start":{"line":173,"column":2},"end":{"line":173,"column":70}},"34":{"start":{"line":189,"column":0},"end":{"line":191,"column":2}},"35":{"start":{"line":190,"column":2},"end":{"line":190,"column":79}},"36":{"start":{"line":206,"column":0},"end":{"line":208,"column":2}},"37":{"start":{"line":207,"column":2},"end":{"line":207,"column":81}},"38":{"start":{"line":223,"column":0},"end":{"line":225,"column":2}},"39":{"start":{"line":224,"column":2},"end":{"line":224,"column":80}},"40":{"start":{"line":242,"column":0},"end":{"line":245,"column":2}},"41":{"start":{"line":243,"column":2},"end":{"line":243,"column":26}},"42":{"start":{"line":244,"column":2},"end":{"line":244,"column":26}},"43":{"start":{"line":253,"column":0},"end":{"line":260,"column":2}},"44":{"start":{"line":254,"column":2},"end":{"line":258,"column":3}},"45":{"start":{"line":255,"column":4},"end":{"line":257,"column":7}},"46":{"start":{"line":256,"column":6},"end":{"line":256,"column":21}},"47":{"start":{"line":259,"column":2},"end":{"line":259,"column":42}},"48":{"start":{"line":268,"column":0},"end":{"line":275,"column":2}},"49":{"start":{"line":269,"column":2},"end":{"line":274,"column":7}},"50":{"start":{"line":270,"column":4},"end":{"line":270,"column":24}},"51":{"start":{"line":272,"column":4},"end":{"line":272,"column":18}}},"branchMap":{"1":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":39},"end":{"line":77,"column":49}},{"start":{"line":77,"column":52},"end":{"line":77,"column":66}}]},"2":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":26},"end":{"line":141,"column":38}},{"start":{"line":141,"column":41},"end":{"line":141,"column":44}}]},"3":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"4":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"5":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":19}},{"start":{"line":166,"column":23},"end":{"line":166,"column":25}}]},"6":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"7":{"line":269,"type":"cond-expr","locations":[{"start":{"line":269,"column":20},"end":{"line":273,"column":4}},{"start":{"line":274,"column":2},"end":{"line":274,"column":6}}]}},"code":["/**"," * @file Process class to manage/run workflow rule and approval process"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _ = require('lodash/core'),","    Promise = require('./promise'),","    Conneciton = require('./connection');","","/**"," * A class which manages process rules and approval processes"," *"," * @class"," * @param {Connection} conn - Connection object"," */","var Process = module.exports = function(conn) {","  /**","   * Object which mangages process rules","   * @member {Process~ProcessRule} Process#rule","   */","  this.rule = new ProcessRule(conn);","  /**","   * Object which mangages approval process","   * @member {Process~ApprovalProcess} Process#approval","   */","  this.approval = new ApprovalProcess(conn);","};","","/**"," * A class which manages process (workflow) rules"," *"," * @class Process~ProcessRule"," * @param {Connection} conn - Connection object"," */","var ProcessRule = function(conn) {","  this._conn = conn;","};","","/**"," * @typedef {Object} Process~ProcessRuleDefinition"," * @prop {String} id - Id of approval process definition"," * @prop {String} name - Name of process rule definition"," * @prop {String} object - SObject name which process rule is defined"," */","","/**"," * Get all process rule definitions registered to sobjects"," *"," * @method Process~ProcessRule#list"," * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function"," * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}"," */","ProcessRule.prototype.list = function(callback) {","  return this._conn.request(\"/process/rules\").then(function(res) {","    return res.rules;","  }).thenCall(callback);","};","","","/**"," * @typedef {Object} Process~ProcessRuleTriggerResult"," * @prop {Boolean} success - Is process rule trigger succeeded or not"," * @prop {Array.<Object>} errors - Array of errors returned if the request failed"," */","","/**"," * Trigger process rule for given entities"," *"," * @method Process~ProcessRule#trigger"," * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process"," * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function"," * @returns {Promise.<Process~ProcessRuleTriggerResult>}"," */","ProcessRule.prototype.trigger = function(contextIds, callback) {","  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];","  return this._conn.request({","    method: \"POST\",","    url: \"/process/rules/\",","    body: JSON.stringify({","      contextIds: contextIds","    }),","    headers: {","      \"content-type\": \"application/json\"","    }","  }).thenCall(callback);","};","","/**"," * A class which manages approval processes"," *"," * @class Process~ApprovalProcess"," * @param {Connection} conn - Connection object"," */","var ApprovalProcess = function(conn) {","  this._conn = conn;","};","","/**"," * @typedef {Object} Process~ApprovalProcessDefinition"," * @prop {String} id - Id of approval process definition"," * @prop {String} name - Name of approval process definition"," * @prop {String} object - SObject name which approval process is defined"," * @prop {Number} sortOrder - Processing order of approval in SObject"," */","/**"," * Get all approval process definitions registered to sobjects"," *"," * @method Process~ApprovalProcess#list"," * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function"," * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}"," */","ApprovalProcess.prototype.list = function(callback) {","  return this._conn.request(\"/process/approvals\").then(function(res) {","    return res.approvals;","  }).thenCall(callback);","};","","/**"," * @typedef {Object} Process~ApprovalProcessRequestResult"," * @prop {Boolean} success - True if processing or approval completed successfully"," * @prop {Array.<Object>} errors - The set of errors returned if the request failed"," * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step"," * @prop {String} entityId - Object being processed"," * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing"," * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)"," * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)"," */","","/**"," * Send bulk requests for approval process"," *"," * @method Process~ApprovalProcess#request"," * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send"," * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function"," * @param {Promise.<Array.<ApprovalProcessRequestResult>>}"," */","ApprovalProcess.prototype.request = function(requests, callback) {","  requests = requests.map(function(req) {","    return req._request ? req._request : req;","  });","  return this._conn.request({","    method: 'POST',","    url: '/process/approvals',","    headers: { \"content-type\": \"application/json\" },","    body: JSON.stringify({ requests: requests })","  }).thenCall(callback);","};","","/**"," * Create approval process request"," *"," * @private"," */","ApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {","  if (typeof comments === \"function\") {","    callback = comments;","    options = null;","    comments = null;","  }","  if (typeof options === \"function\") {","    callback = options;","    options = null;","  }","  options = options || {};","  var request = {","    actionType: actionType,","    contextId: contextId,","    comments: comments","  };","  _.extend(request, options);","  return new ApprovalProcessRequest(this, request).thenCall(callback);","};","","/**"," * Submit approval request for an item"," *"," * @method Process~ApprovalProcess#submit"," * @param {String} contextId - ID of the item that is being acted upon"," * @param {String} [comments] - Comment to add to the history step associated with this request"," * @param {Object} [options] - Request parameters"," * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request"," * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition"," * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null"," * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function"," * @returns {ApprovalProcessRequest}"," */","ApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {","  return this._createRequest(\"Submit\", contextId, comments, options, callback);","};","","/**"," * Approve approval request for an item"," *"," * @method Process~ApprovalProcess#approve"," * @param {String} workitemId - ID of the item that is being acted upon"," * @param {String} [comments] - Comment to add to the history step associated with this request"," * @param {Object} [options] - Request parameters"," * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request"," * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition"," * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null"," * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function"," * @returns {ApprovalProcessRequest}"," */","ApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {","  return this._createRequest(\"Approve\", workitemId, comments, options, callback);","};","","/**"," * Reject approval request for an item"," *"," * @method Process~ApprovalProcess#reject"," * @param {String} workitemId - ID of the item that is being acted upon"," * @param {String} [comments] - Comment to add to the history step associated with this request"," * @param {Object} [options] - Request parameters"," * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request"," * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition"," * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null"," * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function"," * @returns {ApprovalProcessRequest}"," */","ApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {","  return this._createRequest(\"Reject\", workitemId, comments, options, callback);","};","","/**"," * A class representing approval process request"," *"," * @protected"," * @class Process~ApprovalProcessRequest"," * @implements {Promise.<Process~ApprovalProcessRequestResult>}"," * @param {Process~ApprovalProcess} process - ApprovalProcess"," * @param {Object} request - Request parameters"," * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject"," * @param {String} request.contextId - ID of the item that is being acted upon"," * @param {String} request.comments - Comment to add to the history step associated with this request"," * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request"," * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition"," * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null"," */","var ApprovalProcessRequest = function(process, request) {","  this._process = process;","  this._request = request;","};","","/**"," * Promise/A+ interface"," * http://promises-aplus.github.io/promises-spec/"," *"," * @method Process~ApprovalProcessRequest#then"," */","ApprovalProcessRequest.prototype.then = function(onResolve, onReject) {","  if (!this._promise) {","    this._promise = this._process.request([ this ]).then(function(rets) {","      return rets[0];","    });","  }","  this._promise.then(onResolve, onReject);","};","","/**"," * Promise/A+ extension"," * Call \"then\" using given node-style callback function"," *"," * @method Process~ApprovalProcessRequest#thenCall"," */","ApprovalProcessRequest.prototype.thenCall = function(callback) {","  return callback ? this.then(function(res) {","    callback(null, res);","  }, function(err) {","    callback(err);","  }) :","  this;","};",""],"l":{"8":1,"18":1,"23":0,"28":0,"37":1,"38":0,"55":1,"56":0,"57":0,"76":1,"77":0,"78":0,"96":1,"97":0,"114":1,"115":0,"116":0,"139":1,"140":0,"141":0,"143":0,"156":1,"157":0,"158":0,"159":0,"160":0,"162":0,"163":0,"164":0,"166":0,"167":0,"172":0,"173":0,"189":1,"190":0,"206":1,"207":0,"223":1,"224":0,"242":1,"243":0,"244":0,"253":1,"254":0,"255":0,"256":0,"259":0,"268":1,"269":0,"270":0,"272":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/require.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/require.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":20}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":25}},"6":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":57}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":11}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":26}},{"start":{"line":6,"column":30},"end":{"line":6,"column":48}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]}},"code":["'use strict';","","var required = require('./_required');","","module.exports = function(name) {","  if (name === './jsforce' || name === 'jsforce') {","    name = './core';","  }","  var m = required[name];","  if (typeof m === 'undefined') {","    throw new Error(\"Cannot find module '\" + name + \"'\");","  }","  return m;","};",""],"l":{"3":1,"5":1,"6":0,"7":0,"9":0,"10":0,"11":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/_required.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/_required.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":29,"column":2}}},"branchMap":{},"code":["// This file content is dynamically created in build script","\"use strict\";","module.exports = {","  'inherits': require('inherits'),","  'util': require('util'),","  'events': require('events'),","  'lodash/core': require('lodash/core'),","  'readable-stream': require('readable-stream'),","  'multistream': require('multistream'),","  './VERSION': require('./VERSION'),","  './cache': require('./cache'),","  './connection': require('./connection'),","  './core': require('./core'),","  './csv': require('./csv'),","  './date': require('./date'),","  './http-api': require('./http-api'),","  './logger': require('./logger'),","  './oauth2': require('./oauth2'),","  './process': require('./process'),","  './promise': require('./promise'),","  './query': require('./query'),","  './quick-action': require('./quick-action'),","  './record-stream': require('./record-stream'),","  './record': require('./record'),","  './soap': require('./soap'),","  './sobject': require('./sobject'),","  './soql-builder': require('./soql-builder'),","  './transport': require('./transport')","};"],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/soap.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/soap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":1,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":28},"end":{"line":25,"column":52}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":24},"end":{"line":42,"column":65}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":10},"end":{"line":57,"column":24}}},"4":{"name":"convertType","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":21},"end":{"line":65,"column":33}}},"6":{"name":"(anonymous_6)","line":101,"loc":{"start":{"line":101,"column":28},"end":{"line":101,"column":46}}},"7":{"name":"(anonymous_7)","line":106,"loc":{"start":{"line":106,"column":34},"end":{"line":106,"column":53}}},"8":{"name":"(anonymous_8)","line":112,"loc":{"start":{"line":112,"column":28},"end":{"line":112,"column":43}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":33},"end":{"line":121,"column":52}}},"10":{"name":"lookupValue","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":39}}},"11":{"name":"toXML","line":147,"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":28}}},"12":{"name":"(anonymous_12)","line":153,"loc":{"start":{"line":153,"column":24},"end":{"line":153,"column":36}}},"13":{"name":"(anonymous_13)","line":185,"loc":{"start":{"line":185,"column":33},"end":{"line":185,"column":51}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":11,"column":36}},"2":{"start":{"line":25,"column":0},"end":{"line":29,"column":2}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":42}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":63}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}},"7":{"start":{"line":42,"column":0},"end":{"line":60,"column":2}},"8":{"start":{"line":43,"column":2},"end":{"line":46,"column":3}},"9":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":18}},"11":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":25}},"13":{"start":{"line":49,"column":2},"end":{"line":59,"column":24}},"14":{"start":{"line":58,"column":4},"end":{"line":58,"column":51}},"15":{"start":{"line":63,"column":0},"end":{"line":98,"column":1}},"16":{"start":{"line":64,"column":2},"end":{"line":97,"column":3}},"17":{"start":{"line":65,"column":4},"end":{"line":67,"column":7}},"18":{"start":{"line":66,"column":6},"end":{"line":66,"column":48}},"19":{"start":{"line":68,"column":9},"end":{"line":97,"column":3}},"20":{"start":{"line":69,"column":4},"end":{"line":79,"column":5}},"21":{"start":{"line":70,"column":6},"end":{"line":70,"column":18}},"22":{"start":{"line":71,"column":11},"end":{"line":79,"column":5}},"23":{"start":{"line":72,"column":6},"end":{"line":72,"column":47}},"24":{"start":{"line":74,"column":6},"end":{"line":74,"column":17}},"25":{"start":{"line":75,"column":6},"end":{"line":77,"column":7}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":64}},"27":{"start":{"line":78,"column":6},"end":{"line":78,"column":15}},"28":{"start":{"line":81,"column":4},"end":{"line":96,"column":5}},"29":{"start":{"line":82,"column":6},"end":{"line":82,"column":47}},"30":{"start":{"line":83,"column":11},"end":{"line":96,"column":5}},"31":{"start":{"line":84,"column":6},"end":{"line":84,"column":16}},"32":{"start":{"line":86,"column":6},"end":{"line":95,"column":7}},"33":{"start":{"line":88,"column":10},"end":{"line":88,"column":31}},"34":{"start":{"line":90,"column":10},"end":{"line":90,"column":31}},"35":{"start":{"line":92,"column":10},"end":{"line":92,"column":34}},"36":{"start":{"line":94,"column":10},"end":{"line":94,"column":23}},"37":{"start":{"line":101,"column":0},"end":{"line":103,"column":2}},"38":{"start":{"line":102,"column":2},"end":{"line":102,"column":55}},"39":{"start":{"line":106,"column":0},"end":{"line":109,"column":2}},"40":{"start":{"line":107,"column":2},"end":{"line":108,"column":79}},"41":{"start":{"line":112,"column":0},"end":{"line":118,"column":2}},"42":{"start":{"line":113,"column":2},"end":{"line":113,"column":71}},"43":{"start":{"line":114,"column":2},"end":{"line":117,"column":4}},"44":{"start":{"line":121,"column":0},"end":{"line":124,"column":2}},"45":{"start":{"line":122,"column":2},"end":{"line":122,"column":72}},"46":{"start":{"line":123,"column":2},"end":{"line":123,"column":61}},"47":{"start":{"line":129,"column":0},"end":{"line":142,"column":1}},"48":{"start":{"line":130,"column":2},"end":{"line":130,"column":35}},"49":{"start":{"line":131,"column":2},"end":{"line":141,"column":3}},"50":{"start":{"line":132,"column":4},"end":{"line":132,"column":15}},"51":{"start":{"line":135,"column":4},"end":{"line":139,"column":5}},"52":{"start":{"line":136,"column":6},"end":{"line":138,"column":7}},"53":{"start":{"line":137,"column":8},"end":{"line":137,"column":51}},"54":{"start":{"line":140,"column":4},"end":{"line":140,"column":16}},"55":{"start":{"line":147,"column":0},"end":{"line":180,"column":1}},"56":{"start":{"line":148,"column":2},"end":{"line":151,"column":3}},"57":{"start":{"line":149,"column":4},"end":{"line":149,"column":17}},"58":{"start":{"line":150,"column":4},"end":{"line":150,"column":16}},"59":{"start":{"line":152,"column":2},"end":{"line":179,"column":3}},"60":{"start":{"line":153,"column":4},"end":{"line":153,"column":73}},"61":{"start":{"line":153,"column":38},"end":{"line":153,"column":60}},"62":{"start":{"line":155,"column":4},"end":{"line":155,"column":19}},"63":{"start":{"line":156,"column":4},"end":{"line":156,"column":19}},"64":{"start":{"line":157,"column":4},"end":{"line":175,"column":5}},"65":{"start":{"line":158,"column":6},"end":{"line":166,"column":7}},"66":{"start":{"line":159,"column":8},"end":{"line":159,"column":25}},"67":{"start":{"line":160,"column":8},"end":{"line":165,"column":9}},"68":{"start":{"line":161,"column":10},"end":{"line":161,"column":29}},"69":{"start":{"line":162,"column":10},"end":{"line":162,"column":41}},"70":{"start":{"line":164,"column":10},"end":{"line":164,"column":34}},"71":{"start":{"line":167,"column":6},"end":{"line":167,"column":29}},"72":{"start":{"line":169,"column":6},"end":{"line":174,"column":33}},"73":{"start":{"line":176,"column":4},"end":{"line":176,"column":98}},"74":{"start":{"line":177,"column":4},"end":{"line":177,"column":47}},"75":{"start":{"line":178,"column":4},"end":{"line":178,"column":38}},"76":{"start":{"line":185,"column":0},"end":{"line":207,"column":2}},"77":{"start":{"line":186,"column":2},"end":{"line":186,"column":18}},"78":{"start":{"line":187,"column":2},"end":{"line":187,"column":24}},"79":{"start":{"line":188,"column":2},"end":{"line":190,"column":3}},"80":{"start":{"line":189,"column":4},"end":{"line":189,"column":65}},"81":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"82":{"start":{"line":192,"column":4},"end":{"line":192,"column":42}},"83":{"start":{"line":194,"column":2},"end":{"line":206,"column":13}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":29}},{"start":{"line":28,"column":33},"end":{"line":28,"column":62}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"3":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":44}},{"start":{"line":58,"column":47},"end":{"line":58,"column":50}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"5":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":28},"end":{"line":66,"column":34}},{"start":{"line":66,"column":38},"end":{"line":66,"column":47}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":9},"end":{"line":68,"column":9}},{"start":{"line":68,"column":9},"end":{"line":68,"column":9}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"8":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":15}},{"start":{"line":69,"column":19},"end":{"line":69,"column":48}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":11},"end":{"line":71,"column":11}},{"start":{"line":71,"column":11},"end":{"line":71,"column":11}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":41},"end":{"line":76,"column":47}},{"start":{"line":76,"column":51},"end":{"line":76,"column":62}}]},"11":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":11},"end":{"line":83,"column":11}},{"start":{"line":83,"column":11},"end":{"line":83,"column":11}}]},"13":{"line":86,"type":"switch","locations":[{"start":{"line":87,"column":8},"end":{"line":88,"column":31}},{"start":{"line":89,"column":8},"end":{"line":90,"column":31}},{"start":{"line":91,"column":8},"end":{"line":92,"column":34}},{"start":{"line":93,"column":8},"end":{"line":94,"column":23}}]},"14":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":9},"end":{"line":107,"column":36}},{"start":{"line":108,"column":4},"end":{"line":108,"column":78}}]},"15":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"16":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"17":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"18":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"19":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"20":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":8}},{"start":{"line":160,"column":8},"end":{"line":160,"column":8}}]},"21":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":26},"end":{"line":176,"column":92}},{"start":{"line":176,"column":95},"end":{"line":176,"column":97}}]},"22":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":59},"end":{"line":176,"column":80}},{"start":{"line":176,"column":83},"end":{"line":176,"column":85}}]},"23":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":24},"end":{"line":177,"column":41}},{"start":{"line":177,"column":44},"end":{"line":177,"column":46}}]},"24":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"25":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]}},"code":["/**"," * @file Manages method call to SOAP endpoint"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var inherits = require('inherits'),","    _ = require('lodash/core'),","    xml2js = require('xml2js'),","    HttpApi = require('./http-api');","","","/**"," * Class for SOAP endpoint of Salesforce"," *"," * @protected"," * @class"," * @constructor"," * @param {Connection} conn - Connection instance"," * @param {Object} options - SOAP endpoint setting options"," * @param {String} options.endpointUrl - SOAP endpoint URL"," * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")"," */","var SOAP = module.exports = function(conn, options) {","  SOAP.super_.apply(this, arguments);","  this._endpointUrl = options.endpointUrl;","  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';","};","","inherits(SOAP, HttpApi);","","/**"," * Invoke SOAP call using method and arguments"," *"," * @param {String} method - Method name"," * @param {Object} args - Arguments for the method call"," * @param {Object} [schema] - Schema definition of response message"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","SOAP.prototype.invoke = function(method, args, schema, callback) {","  if (typeof schema === 'function') {","    callback = schema;","    schema = null;","  }","  var message = {};","  message[method] = args;","  return this.request({","    method: 'POST',","    url: this._endpointUrl,","    headers: {","      'Content-Type': 'text/xml',","      'SOAPAction': '\"\"'","    },","    message: message","  }).then(function(res) {","    return schema ? convertType(res, schema) : res;","  }).thenCall(callback);","};","","/* @private */","function convertType(value, schema) {","  if (_.isArray(value)) {","    return value.map(function(v) {","      return convertType(v, schema && schema[0])","    });","  } else if (_.isObject(value)) {","    if (value.$ && value.$['xsi:nil'] === 'true') {","      return null;","    } else if (_.isArray(schema)) {","      return [ convertType(value, schema[0]) ];","    } else {","      var o = {};","      for (var key in value) {","        o[key] = convertType(value[key], schema && schema[key]);","      }","      return o;","    }","  } else {","    if (_.isArray(schema)) {","      return [ convertType(value, schema[0]) ];","    } else if (_.isObject(schema)) {","      return {};","    } else {","      switch(schema) {","        case 'string':","          return String(value);","        case 'number':","          return Number(value);","        case 'boolean':","          return value === 'true';","        default:","          return value;","      }","    }","  }","}","","/** @override **/","SOAP.prototype.beforeSend = function(request) {","  request.body = this._createEnvelope(request.message);","};","","/** @override **/","SOAP.prototype.isSessionExpired = function(response) {","  return response.statusCode === 500 &&","    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);","};","","/** @override **/","SOAP.prototype.parseError = function(body) {","  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);","  return {","    errorCode: error.faultcode,","    message: error.faultstring","  };","};","","/** @override **/","SOAP.prototype.getResponseBody = function(response) {","  var body = SOAP.super_.prototype.getResponseBody.call(this, response);","  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);","};","","/**"," * @private"," */","function lookupValue(obj, propRegExps) {","  var regexp = propRegExps.shift();","  if (!regexp) {","    return obj;","  }","  else {","    for (var prop in obj) {","      if (regexp.test(prop)) {","        return lookupValue(obj[prop], propRegExps);","      }","    }","    return null;","  }","}","","/**"," * @private"," */","function toXML(name, value) {","  if (_.isObject(name)) {","    value = name;","    name = null;","  }","  if (_.isArray(value)) {","    return _.map(value, function(v) { return toXML(name, v); }).join('');","  } else {","    var attrs = [];","    var elems = [];","    if (_.isObject(value)) {","      for (var k in value) {","        var v = value[k];","        if (k[0] === '@') {","          k = k.substring(1);","          attrs.push(k + '=\"' + v + '\"');","        } else {","          elems.push(toXML(k, v));","        }","      }","      value = elems.join('');","    } else {","      value = String(value)","        .replace(/&/g, '&amp;')","        .replace(/</g, '&lt;')","        .replace(/>/g, '&gt;')","        .replace(/\"/g, '&quot;')","        .replace(/'/g, '&apos;');","    }","    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';","    var endTag = name ? '</' + name + '>' : '';","    return  startTag + value + endTag;","  }","}","","/**"," * @private"," */","SOAP.prototype._createEnvelope = function(message) {","  var header = {};","  var conn = this._conn;","  if (conn.accessToken) {","    header.SessionHeader = { sessionId: this._conn.accessToken };","  }","  if (conn.callOptions) {","    header.CallOptions = conn.callOptions;","  }","  return [","    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',","    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',","    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',","    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',","    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',","    toXML(header),","    '</soapenv:Header>',","    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',","    toXML(message),","    '</soapenv:Body>',","    '</soapenv:Envelope>'","  ].join('');","};",""],"l":{"8":1,"25":1,"26":0,"27":0,"28":0,"31":1,"42":1,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"58":0,"63":1,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"76":0,"78":0,"81":0,"82":0,"83":0,"84":0,"86":0,"88":0,"90":0,"92":0,"94":0,"101":1,"102":0,"106":1,"107":0,"112":1,"113":0,"114":0,"121":1,"122":0,"123":0,"129":1,"130":0,"131":0,"132":0,"135":0,"136":0,"137":0,"140":0,"147":1,"148":0,"149":0,"150":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"164":0,"167":0,"169":0,"176":0,"177":0,"178":0,"185":1,"186":0,"187":0,"188":0,"189":0,"191":0,"192":0,"194":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/apex.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/apex.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":26}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":26},"end":{"line":23,"column":37}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":38},"end":{"line":30,"column":76}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":21},"end":{"line":57,"column":55}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":22},"end":{"line":74,"column":62}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":21},"end":{"line":97,"column":61}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":23},"end":{"line":120,"column":63}}},"8":{"name":"(anonymous_8)","line":156,"loc":{"start":{"line":156,"column":29},"end":{"line":156,"column":63}}},"9":{"name":"(anonymous_9)","line":169,"loc":{"start":{"line":169,"column":29},"end":{"line":169,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"2":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":20}},"4":{"start":{"line":23,"column":0},"end":{"line":25,"column":2}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":55}},"6":{"start":{"line":30,"column":0},"end":{"line":47,"column":2}},"7":{"start":{"line":31,"column":2},"end":{"line":35,"column":16}},"8":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":34}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":50}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":28}},"13":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":39}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}},"16":{"start":{"line":57,"column":0},"end":{"line":63,"column":2}},"17":{"start":{"line":58,"column":2},"end":{"line":61,"column":3}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":23}},"19":{"start":{"line":60,"column":4},"end":{"line":60,"column":24}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":107}},"21":{"start":{"line":74,"column":0},"end":{"line":86,"column":2}},"22":{"start":{"line":75,"column":2},"end":{"line":79,"column":3}},"23":{"start":{"line":76,"column":4},"end":{"line":76,"column":20}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":21}},"25":{"start":{"line":78,"column":4},"end":{"line":78,"column":24}},"26":{"start":{"line":80,"column":2},"end":{"line":83,"column":3}},"27":{"start":{"line":81,"column":4},"end":{"line":81,"column":23}},"28":{"start":{"line":82,"column":4},"end":{"line":82,"column":24}},"29":{"start":{"line":84,"column":2},"end":{"line":84,"column":70}},"30":{"start":{"line":85,"column":2},"end":{"line":85,"column":55}},"31":{"start":{"line":97,"column":0},"end":{"line":109,"column":2}},"32":{"start":{"line":98,"column":2},"end":{"line":102,"column":3}},"33":{"start":{"line":99,"column":4},"end":{"line":99,"column":20}},"34":{"start":{"line":100,"column":4},"end":{"line":100,"column":21}},"35":{"start":{"line":101,"column":4},"end":{"line":101,"column":24}},"36":{"start":{"line":103,"column":2},"end":{"line":106,"column":3}},"37":{"start":{"line":104,"column":4},"end":{"line":104,"column":23}},"38":{"start":{"line":105,"column":4},"end":{"line":105,"column":24}},"39":{"start":{"line":107,"column":2},"end":{"line":107,"column":69}},"40":{"start":{"line":108,"column":2},"end":{"line":108,"column":55}},"41":{"start":{"line":120,"column":0},"end":{"line":132,"column":2}},"42":{"start":{"line":121,"column":2},"end":{"line":125,"column":3}},"43":{"start":{"line":122,"column":4},"end":{"line":122,"column":20}},"44":{"start":{"line":123,"column":4},"end":{"line":123,"column":21}},"45":{"start":{"line":124,"column":4},"end":{"line":124,"column":24}},"46":{"start":{"line":126,"column":2},"end":{"line":129,"column":3}},"47":{"start":{"line":127,"column":4},"end":{"line":127,"column":23}},"48":{"start":{"line":128,"column":4},"end":{"line":128,"column":24}},"49":{"start":{"line":130,"column":2},"end":{"line":130,"column":71}},"50":{"start":{"line":131,"column":2},"end":{"line":131,"column":55}},"51":{"start":{"line":155,"column":0},"end":{"line":162,"column":2}},"52":{"start":{"line":157,"column":2},"end":{"line":160,"column":3}},"53":{"start":{"line":158,"column":4},"end":{"line":158,"column":23}},"54":{"start":{"line":159,"column":4},"end":{"line":159,"column":24}},"55":{"start":{"line":161,"column":2},"end":{"line":161,"column":110}},"56":{"start":{"line":169,"column":0},"end":{"line":171,"column":3}},"57":{"start":{"line":170,"column":2},"end":{"line":170,"column":29}},"58":{"start":{"line":174,"column":0},"end":{"line":174,"column":22}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":5},"end":{"line":36,"column":12}},{"start":{"line":36,"column":16},"end":{"line":36,"column":54}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"9":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"10":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"11":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"12":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]}},"code":["/**"," * @file Manages Salesforce Apex REST endpoint calls"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var jsforce = require('../core');","","/**"," * API class for Apex REST endpoint call"," *"," * @class"," * @param {Connection} conn Connection"," */","var Apex = function(conn) {","  this._conn = conn;","};","","/**"," * @private"," */","Apex.prototype._baseUrl = function() {","  return this._conn.instanceUrl + \"/services/apexrest\";","};","","/**"," * @private"," */","Apex.prototype._createRequestParams = function(method, path, body, options) {","  var params = {","    method: method,","    url: this._baseUrl() + path","  },","  _headers = {};","  if(options && 'object' === typeof options['headers']){","    _headers = options['headers'];","  }","  if (!/^(GET|DELETE)$/i.test(method)) {","    _headers[\"Content-Type\"] = \"application/json\";","  }","  params.headers = _headers;","  if (body) {","    params.body = JSON.stringify(body);","  }","  return params;","};","","/**"," * Call Apex REST service in GET request"," *"," * @param {String} path - URL path to Apex REST service"," * @param {Object} options - Holds headers and other meta data for the request."," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Apex.prototype.get = function(path, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  return this._conn.request(this._createRequestParams('GET', path, undefined, options)).thenCall(callback);","};","","/**"," * Call Apex REST service in POST request"," *"," * @param {String} path - URL path to Apex REST service"," * @param {Object} [body] - Request body"," * @param {Object} options - Holds headers and other meta data for the request."," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Apex.prototype.post = function(path, body, options, callback) {","  if (typeof body === 'function') {","    callback = body;","    body = undefined;","    options = undefined;","  }","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  var params = this._createRequestParams('POST', path, body, options);","  return this._conn.request(params).thenCall(callback);","};","","/**"," * Call Apex REST service in PUT request"," *"," * @param {String} path - URL path to Apex REST service"," * @param {Object} [body] - Request body"," * @param {Object} [options] - Holds headers and other meta data for the request."," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Apex.prototype.put = function(path, body, options, callback) {","  if (typeof body === 'function') {","    callback = body;","    body = undefined;","    options = undefined;","  }","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  var params = this._createRequestParams('PUT', path, body, options);","  return this._conn.request(params).thenCall(callback);","};","","/**"," * Call Apex REST service in PATCH request"," *"," * @param {String} path - URL path to Apex REST service"," * @param {Object} [body] - Request body"," * @param {Object} [options] - Holds headers and other meta data for the request."," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Apex.prototype.patch = function(path, body, options, callback) {","  if (typeof body === 'function') {","    callback = body;","    body = undefined;","    options = undefined;","  }","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  var params = this._createRequestParams('PATCH', path, body, options);","  return this._conn.request(params).thenCall(callback);","};","","/**"," * Synonym of Apex#delete()"," *"," * @method Apex#del"," *"," * @param {String} path - URL path to Apex REST service"," * @param {Object} [body] - Request body"," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","/**"," * Call Apex REST service in DELETE request"," *"," * @method Apex#delete"," *"," * @param {String} path - URL path to Apex REST service"," * @param {Object} [body] - Request body"," * @param {Object} [options] - Holds headers and other meta data for the request."," * @param {Callback.<Object>} [callback] - Callback function"," * @returns {Promise.<Object>}"," */","Apex.prototype.del =","  Apex.prototype[\"delete\"] = function(path, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  return this._conn.request(this._createRequestParams('DELETE', path, undefined, options)).thenCall(callback);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.apex = new Apex(conn);","});","","","module.exports = Apex;",""],"l":{"8":1,"16":1,"17":0,"23":1,"24":0,"30":1,"31":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"57":1,"58":0,"59":0,"60":0,"62":0,"74":1,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"84":0,"85":0,"97":1,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"107":0,"108":0,"120":1,"121":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"130":0,"131":0,"155":1,"157":0,"158":0,"159":0,"161":0,"169":1,"170":0,"174":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/bulk.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/bulk.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":1,"261":0,"262":1,"263":1,"264":0,"265":0,"266":1,"267":0,"268":1,"269":0,"270":1,"271":0,"272":1,"273":0,"274":0,"275":1,"276":1,"277":1,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":1,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":1,"325":0,"326":1,"327":0,"328":1,"329":0,"330":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":10},"end":{"line":37,"column":58}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":21},"end":{"line":64,"column":40}}},"3":{"name":"(anonymous_3)","line":80,"loc":{"start":{"line":80,"column":21},"end":{"line":80,"column":40}}},"4":{"name":"(anonymous_4)","line":115,"loc":{"start":{"line":115,"column":12},"end":{"line":115,"column":26}}},"5":{"name":"(anonymous_5)","line":120,"loc":{"start":{"line":120,"column":7},"end":{"line":120,"column":21}}},"6":{"name":"(anonymous_6)","line":134,"loc":{"start":{"line":134,"column":28},"end":{"line":134,"column":39}}},"7":{"name":"(anonymous_7)","line":137,"loc":{"start":{"line":137,"column":20},"end":{"line":137,"column":31}}},"8":{"name":"(anonymous_8)","line":150,"loc":{"start":{"line":150,"column":22},"end":{"line":150,"column":40}}},"9":{"name":"(anonymous_9)","line":166,"loc":{"start":{"line":166,"column":22},"end":{"line":166,"column":41}}},"10":{"name":"(anonymous_10)","line":171,"loc":{"start":{"line":171,"column":42},"end":{"line":171,"column":53}}},"11":{"name":"(anonymous_11)","line":177,"loc":{"start":{"line":177,"column":10},"end":{"line":177,"column":24}}},"12":{"name":"(anonymous_12)","line":195,"loc":{"start":{"line":195,"column":28},"end":{"line":195,"column":47}}},"13":{"name":"(anonymous_13)","line":207,"loc":{"start":{"line":207,"column":21},"end":{"line":207,"column":40}}},"14":{"name":"(anonymous_14)","line":212,"loc":{"start":{"line":212,"column":33},"end":{"line":212,"column":44}}},"15":{"name":"(anonymous_15)","line":218,"loc":{"start":{"line":218,"column":10},"end":{"line":218,"column":24}}},"16":{"name":"(anonymous_16)","line":234,"loc":{"start":{"line":234,"column":22},"end":{"line":234,"column":33}}},"17":{"name":"(anonymous_17)","line":236,"loc":{"start":{"line":236,"column":42},"end":{"line":236,"column":60}}},"18":{"name":"(anonymous_18)","line":240,"loc":{"start":{"line":240,"column":5},"end":{"line":240,"column":19}}},"19":{"name":"(anonymous_19)","line":253,"loc":{"start":{"line":253,"column":22},"end":{"line":253,"column":33}}},"20":{"name":"(anonymous_20)","line":255,"loc":{"start":{"line":255,"column":43},"end":{"line":255,"column":61}}},"21":{"name":"(anonymous_21)","line":259,"loc":{"start":{"line":259,"column":5},"end":{"line":259,"column":19}}},"22":{"name":"(anonymous_22)","line":268,"loc":{"start":{"line":268,"column":29},"end":{"line":268,"column":55}}},"23":{"name":"(anonymous_23)","line":273,"loc":{"start":{"line":273,"column":42},"end":{"line":273,"column":53}}},"24":{"name":"(anonymous_24)","line":289,"loc":{"start":{"line":289,"column":10},"end":{"line":289,"column":24}}},"25":{"name":"(anonymous_25)","line":311,"loc":{"start":{"line":311,"column":12},"end":{"line":311,"column":35}}},"26":{"name":"(anonymous_26)","line":326,"loc":{"start":{"line":326,"column":36},"end":{"line":326,"column":47}}},"27":{"name":"(anonymous_27)","line":334,"loc":{"start":{"line":334,"column":20},"end":{"line":334,"column":31}}},"28":{"name":"(anonymous_28)","line":337,"loc":{"start":{"line":337,"column":42},"end":{"line":337,"column":53}}},"29":{"name":"(anonymous_29)","line":338,"loc":{"start":{"line":338,"column":26},"end":{"line":338,"column":37}}},"30":{"name":"(anonymous_30)","line":346,"loc":{"start":{"line":346,"column":22},"end":{"line":346,"column":46}}},"31":{"name":"(anonymous_31)","line":349,"loc":{"start":{"line":349,"column":26},"end":{"line":349,"column":37}}},"32":{"name":"(anonymous_32)","line":353,"loc":{"start":{"line":353,"column":42},"end":{"line":353,"column":53}}},"33":{"name":"(anonymous_33)","line":356,"loc":{"start":{"line":356,"column":37},"end":{"line":356,"column":48}}},"34":{"name":"(anonymous_34)","line":359,"loc":{"start":{"line":359,"column":21},"end":{"line":359,"column":36}}},"35":{"name":"(anonymous_35)","line":373,"loc":{"start":{"line":373,"column":39},"end":{"line":373,"column":50}}},"36":{"name":"(anonymous_36)","line":385,"loc":{"start":{"line":385,"column":5},"end":{"line":385,"column":24}}},"37":{"name":"(anonymous_37)","line":402,"loc":{"start":{"line":402,"column":25},"end":{"line":402,"column":51}}},"38":{"name":"(anonymous_38)","line":419,"loc":{"start":{"line":419,"column":25},"end":{"line":419,"column":36}}},"39":{"name":"(anonymous_39)","line":433,"loc":{"start":{"line":433,"column":26},"end":{"line":433,"column":52}}},"40":{"name":"(anonymous_40)","line":448,"loc":{"start":{"line":448,"column":20},"end":{"line":448,"column":34}}},"41":{"name":"(anonymous_41)","line":450,"loc":{"start":{"line":450,"column":5},"end":{"line":450,"column":19}}},"42":{"name":"(anonymous_42)","line":453,"loc":{"start":{"line":453,"column":24},"end":{"line":453,"column":38}}},"43":{"name":"(anonymous_43)","line":456,"loc":{"start":{"line":456,"column":21},"end":{"line":456,"column":35}}},"44":{"name":"(anonymous_44)","line":465,"loc":{"start":{"line":465,"column":23},"end":{"line":465,"column":40}}},"45":{"name":"(anonymous_45)","line":486,"loc":{"start":{"line":486,"column":23},"end":{"line":486,"column":66}}},"46":{"name":"(anonymous_46)","line":496,"loc":{"start":{"line":496,"column":27},"end":{"line":496,"column":46}}},"47":{"name":"(anonymous_47)","line":498,"loc":{"start":{"line":498,"column":14},"end":{"line":498,"column":28}}},"48":{"name":"(anonymous_48)","line":499,"loc":{"start":{"line":499,"column":23},"end":{"line":499,"column":34}}},"49":{"name":"(anonymous_49)","line":502,"loc":{"start":{"line":502,"column":7},"end":{"line":502,"column":21}}},"50":{"name":"(anonymous_50)","line":503,"loc":{"start":{"line":503,"column":23},"end":{"line":503,"column":34}}},"51":{"name":"(anonymous_51)","line":526,"loc":{"start":{"line":526,"column":24},"end":{"line":526,"column":43}}},"52":{"name":"(anonymous_52)","line":540,"loc":{"start":{"line":540,"column":10},"end":{"line":540,"column":24}}},"53":{"name":"(anonymous_53)","line":554,"loc":{"start":{"line":554,"column":23},"end":{"line":554,"column":51}}},"54":{"name":"(anonymous_54)","line":563,"loc":{"start":{"line":563,"column":13},"end":{"line":563,"column":24}}},"55":{"name":"(anonymous_55)","line":573,"loc":{"start":{"line":573,"column":15},"end":{"line":573,"column":34}}},"56":{"name":"(anonymous_56)","line":609,"loc":{"start":{"line":609,"column":27},"end":{"line":609,"column":46}}},"57":{"name":"(anonymous_57)","line":620,"loc":{"start":{"line":620,"column":25},"end":{"line":620,"column":43}}},"58":{"name":"(anonymous_58)","line":625,"loc":{"start":{"line":625,"column":10},"end":{"line":625,"column":24}}},"59":{"name":"(anonymous_59)","line":631,"loc":{"start":{"line":631,"column":66},"end":{"line":631,"column":79}}},"60":{"name":"(anonymous_60)","line":639,"loc":{"start":{"line":639,"column":27},"end":{"line":639,"column":41}}},"61":{"name":"(anonymous_61)","line":649,"loc":{"start":{"line":649,"column":10},"end":{"line":649,"column":24}}},"62":{"name":"(anonymous_62)","line":660,"loc":{"start":{"line":660,"column":25},"end":{"line":660,"column":44}}},"63":{"name":"(anonymous_63)","line":680,"loc":{"start":{"line":680,"column":14},"end":{"line":680,"column":25}}},"64":{"name":"(anonymous_64)","line":686,"loc":{"start":{"line":686,"column":31},"end":{"line":686,"column":49}}},"65":{"name":"(anonymous_65)","line":691,"loc":{"start":{"line":691,"column":37},"end":{"line":691,"column":56}}},"66":{"name":"(anonymous_66)","line":696,"loc":{"start":{"line":696,"column":43},"end":{"line":696,"column":58}}},"67":{"name":"(anonymous_67)","line":700,"loc":{"start":{"line":700,"column":31},"end":{"line":700,"column":46}}},"68":{"name":"(anonymous_68)","line":715,"loc":{"start":{"line":715,"column":11},"end":{"line":715,"column":26}}},"69":{"name":"(anonymous_69)","line":733,"loc":{"start":{"line":733,"column":26},"end":{"line":733,"column":54}}},"70":{"name":"(anonymous_70)","line":756,"loc":{"start":{"line":756,"column":22},"end":{"line":756,"column":74}}},"71":{"name":"(anonymous_71)","line":767,"loc":{"start":{"line":767,"column":20},"end":{"line":767,"column":37}}},"72":{"name":"(anonymous_72)","line":773,"loc":{"start":{"line":773,"column":16},"end":{"line":773,"column":27}}},"73":{"name":"(anonymous_73)","line":777,"loc":{"start":{"line":777,"column":23},"end":{"line":777,"column":37}}},"74":{"name":"(anonymous_74)","line":784,"loc":{"start":{"line":784,"column":20},"end":{"line":784,"column":31}}},"75":{"name":"(anonymous_75)","line":794,"loc":{"start":{"line":794,"column":23},"end":{"line":794,"column":38}}},"76":{"name":"(anonymous_76)","line":803,"loc":{"start":{"line":803,"column":38},"end":{"line":803,"column":56}}},"77":{"name":"(anonymous_77)","line":804,"loc":{"start":{"line":804,"column":30},"end":{"line":804,"column":47}}},"78":{"name":"(anonymous_78)","line":813,"loc":{"start":{"line":813,"column":10},"end":{"line":813,"column":24}}},"79":{"name":"(anonymous_79)","line":828,"loc":{"start":{"line":828,"column":27},"end":{"line":828,"column":62}}},"80":{"name":"(anonymous_80)","line":838,"loc":{"start":{"line":838,"column":21},"end":{"line":838,"column":37}}},"81":{"name":"(anonymous_81)","line":847,"loc":{"start":{"line":847,"column":29},"end":{"line":847,"column":44}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":18,"column":42}},"2":{"start":{"line":37,"column":0},"end":{"line":45,"column":2}},"3":{"start":{"line":38,"column":2},"end":{"line":38,"column":20}},"4":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"5":{"start":{"line":40,"column":2},"end":{"line":40,"column":29}},"6":{"start":{"line":41,"column":2},"end":{"line":41,"column":31}},"7":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"8":{"start":{"line":43,"column":2},"end":{"line":43,"column":44}},"9":{"start":{"line":44,"column":2},"end":{"line":44,"column":21}},"10":{"start":{"line":47,"column":0},"end":{"line":47,"column":35}},"11":{"start":{"line":64,"column":0},"end":{"line":71,"column":2}},"12":{"start":{"line":65,"column":2},"end":{"line":65,"column":18}},"13":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"14":{"start":{"line":68,"column":4},"end":{"line":68,"column":33}},"15":{"start":{"line":70,"column":2},"end":{"line":70,"column":42}},"16":{"start":{"line":80,"column":0},"end":{"line":126,"column":2}},"17":{"start":{"line":81,"column":2},"end":{"line":81,"column":18}},"18":{"start":{"line":82,"column":2},"end":{"line":82,"column":24}},"19":{"start":{"line":83,"column":2},"end":{"line":83,"column":28}},"20":{"start":{"line":86,"column":2},"end":{"line":124,"column":3}},"21":{"start":{"line":87,"column":4},"end":{"line":87,"column":49}},"22":{"start":{"line":88,"column":4},"end":{"line":88,"column":65}},"23":{"start":{"line":88,"column":38},"end":{"line":88,"column":63}},"24":{"start":{"line":89,"column":4},"end":{"line":105,"column":15}},"25":{"start":{"line":107,"column":4},"end":{"line":123,"column":7}},"26":{"start":{"line":116,"column":6},"end":{"line":116,"column":37}},"27":{"start":{"line":117,"column":6},"end":{"line":117,"column":31}},"28":{"start":{"line":118,"column":6},"end":{"line":118,"column":37}},"29":{"start":{"line":119,"column":6},"end":{"line":119,"column":25}},"30":{"start":{"line":121,"column":6},"end":{"line":121,"column":30}},"31":{"start":{"line":122,"column":6},"end":{"line":122,"column":16}},"32":{"start":{"line":125,"column":2},"end":{"line":125,"column":42}},"33":{"start":{"line":134,"column":0},"end":{"line":141,"column":2}},"34":{"start":{"line":135,"column":2},"end":{"line":135,"column":30}},"35":{"start":{"line":136,"column":2},"end":{"line":136,"column":18}},"36":{"start":{"line":137,"column":2},"end":{"line":139,"column":5}},"37":{"start":{"line":138,"column":4},"end":{"line":138,"column":36}},"38":{"start":{"line":140,"column":2},"end":{"line":140,"column":15}},"39":{"start":{"line":150,"column":0},"end":{"line":157,"column":2}},"40":{"start":{"line":151,"column":2},"end":{"line":151,"column":37}},"41":{"start":{"line":152,"column":2},"end":{"line":155,"column":3}},"42":{"start":{"line":153,"column":4},"end":{"line":153,"column":37}},"43":{"start":{"line":154,"column":4},"end":{"line":154,"column":35}},"44":{"start":{"line":156,"column":2},"end":{"line":156,"column":15}},"45":{"start":{"line":166,"column":0},"end":{"line":186,"column":2}},"46":{"start":{"line":167,"column":2},"end":{"line":167,"column":18}},"47":{"start":{"line":168,"column":2},"end":{"line":168,"column":24}},"48":{"start":{"line":169,"column":2},"end":{"line":169,"column":28}},"49":{"start":{"line":171,"column":2},"end":{"line":184,"column":5}},"50":{"start":{"line":172,"column":4},"end":{"line":176,"column":7}},"51":{"start":{"line":178,"column":4},"end":{"line":178,"column":30}},"52":{"start":{"line":179,"column":4},"end":{"line":179,"column":29}},"53":{"start":{"line":180,"column":4},"end":{"line":180,"column":35}},"54":{"start":{"line":181,"column":4},"end":{"line":181,"column":43}},"55":{"start":{"line":182,"column":4},"end":{"line":182,"column":35}},"56":{"start":{"line":183,"column":4},"end":{"line":183,"column":23}},"57":{"start":{"line":185,"column":2},"end":{"line":185,"column":42}},"58":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"59":{"start":{"line":196,"column":2},"end":{"line":196,"column":87}},"60":{"start":{"line":207,"column":0},"end":{"line":225,"column":2}},"61":{"start":{"line":208,"column":2},"end":{"line":208,"column":18}},"62":{"start":{"line":209,"column":2},"end":{"line":209,"column":24}},"63":{"start":{"line":210,"column":2},"end":{"line":210,"column":28}},"64":{"start":{"line":212,"column":2},"end":{"line":223,"column":24}},"65":{"start":{"line":213,"column":4},"end":{"line":217,"column":7}},"66":{"start":{"line":219,"column":4},"end":{"line":219,"column":46}},"67":{"start":{"line":220,"column":4},"end":{"line":220,"column":42}},"68":{"start":{"line":221,"column":4},"end":{"line":221,"column":111}},"69":{"start":{"line":222,"column":4},"end":{"line":222,"column":25}},"70":{"start":{"line":234,"column":0},"end":{"line":244,"column":2}},"71":{"start":{"line":235,"column":2},"end":{"line":235,"column":18}},"72":{"start":{"line":236,"column":2},"end":{"line":243,"column":5}},"73":{"start":{"line":237,"column":4},"end":{"line":237,"column":19}},"74":{"start":{"line":238,"column":4},"end":{"line":238,"column":32}},"75":{"start":{"line":239,"column":4},"end":{"line":239,"column":19}},"76":{"start":{"line":241,"column":4},"end":{"line":241,"column":28}},"77":{"start":{"line":242,"column":4},"end":{"line":242,"column":14}},"78":{"start":{"line":253,"column":0},"end":{"line":263,"column":2}},"79":{"start":{"line":254,"column":2},"end":{"line":254,"column":18}},"80":{"start":{"line":255,"column":2},"end":{"line":262,"column":5}},"81":{"start":{"line":256,"column":4},"end":{"line":256,"column":19}},"82":{"start":{"line":257,"column":4},"end":{"line":257,"column":32}},"83":{"start":{"line":258,"column":4},"end":{"line":258,"column":19}},"84":{"start":{"line":260,"column":4},"end":{"line":260,"column":28}},"85":{"start":{"line":261,"column":4},"end":{"line":261,"column":14}},"86":{"start":{"line":268,"column":0},"end":{"line":296,"column":2}},"87":{"start":{"line":269,"column":2},"end":{"line":269,"column":18}},"88":{"start":{"line":270,"column":2},"end":{"line":270,"column":24}},"89":{"start":{"line":271,"column":2},"end":{"line":271,"column":28}},"90":{"start":{"line":273,"column":2},"end":{"line":293,"column":5}},"91":{"start":{"line":274,"column":4},"end":{"line":279,"column":15}},"92":{"start":{"line":280,"column":4},"end":{"line":288,"column":7}},"93":{"start":{"line":290,"column":4},"end":{"line":290,"column":30}},"94":{"start":{"line":291,"column":4},"end":{"line":291,"column":35}},"95":{"start":{"line":292,"column":4},"end":{"line":292,"column":23}},"96":{"start":{"line":294,"column":2},"end":{"line":294,"column":42}},"97":{"start":{"line":311,"column":0},"end":{"line":318,"column":2}},"98":{"start":{"line":312,"column":2},"end":{"line":312,"column":48}},"99":{"start":{"line":313,"column":2},"end":{"line":313,"column":17}},"100":{"start":{"line":314,"column":2},"end":{"line":314,"column":20}},"101":{"start":{"line":315,"column":2},"end":{"line":315,"column":25}},"102":{"start":{"line":316,"column":2},"end":{"line":316,"column":35}},"103":{"start":{"line":317,"column":2},"end":{"line":317,"column":27}},"104":{"start":{"line":320,"column":0},"end":{"line":320,"column":33}},"105":{"start":{"line":326,"column":0},"end":{"line":365,"column":2}},"106":{"start":{"line":327,"column":2},"end":{"line":327,"column":19}},"107":{"start":{"line":328,"column":2},"end":{"line":328,"column":48}},"108":{"start":{"line":329,"column":2},"end":{"line":329,"column":55}},"109":{"start":{"line":330,"column":2},"end":{"line":330,"column":78}},"110":{"start":{"line":331,"column":2},"end":{"line":331,"column":53}},"111":{"start":{"line":332,"column":2},"end":{"line":332,"column":82}},"112":{"start":{"line":334,"column":2},"end":{"line":336,"column":5}},"113":{"start":{"line":335,"column":4},"end":{"line":335,"column":30}},"114":{"start":{"line":337,"column":2},"end":{"line":342,"column":5}},"115":{"start":{"line":338,"column":4},"end":{"line":341,"column":7}},"116":{"start":{"line":340,"column":6},"end":{"line":340,"column":65}},"117":{"start":{"line":345,"column":2},"end":{"line":345,"column":51}},"118":{"start":{"line":346,"column":2},"end":{"line":348,"column":4}},"119":{"start":{"line":347,"column":4},"end":{"line":347,"column":49}},"120":{"start":{"line":349,"column":2},"end":{"line":351,"column":5}},"121":{"start":{"line":350,"column":4},"end":{"line":350,"column":34}},"122":{"start":{"line":353,"column":2},"end":{"line":355,"column":5}},"123":{"start":{"line":354,"column":4},"end":{"line":354,"column":23}},"124":{"start":{"line":356,"column":2},"end":{"line":358,"column":5}},"125":{"start":{"line":357,"column":4},"end":{"line":357,"column":26}},"126":{"start":{"line":359,"column":2},"end":{"line":364,"column":4}},"127":{"start":{"line":360,"column":4},"end":{"line":360,"column":14}},"128":{"start":{"line":361,"column":4},"end":{"line":363,"column":5}},"129":{"start":{"line":362,"column":6},"end":{"line":362,"column":29}},"130":{"start":{"line":373,"column":0},"end":{"line":394,"column":2}},"131":{"start":{"line":374,"column":2},"end":{"line":374,"column":19}},"132":{"start":{"line":375,"column":2},"end":{"line":375,"column":25}},"133":{"start":{"line":376,"column":2},"end":{"line":376,"column":28}},"134":{"start":{"line":378,"column":2},"end":{"line":393,"column":14}},"135":{"start":{"line":386,"column":4},"end":{"line":392,"column":5}},"136":{"start":{"line":387,"column":6},"end":{"line":387,"column":31}},"137":{"start":{"line":389,"column":6},"end":{"line":389,"column":34}},"138":{"start":{"line":390,"column":6},"end":{"line":390,"column":34}},"139":{"start":{"line":391,"column":6},"end":{"line":391,"column":41}},"140":{"start":{"line":402,"column":0},"end":{"line":412,"column":2}},"141":{"start":{"line":403,"column":2},"end":{"line":403,"column":27}},"142":{"start":{"line":404,"column":2},"end":{"line":408,"column":3}},"143":{"start":{"line":405,"column":4},"end":{"line":405,"column":21}},"144":{"start":{"line":406,"column":9},"end":{"line":408,"column":3}},"145":{"start":{"line":407,"column":4},"end":{"line":407,"column":31}},"146":{"start":{"line":409,"column":2},"end":{"line":409,"column":21}},"147":{"start":{"line":410,"column":2},"end":{"line":410,"column":27}},"148":{"start":{"line":411,"column":2},"end":{"line":411,"column":44}},"149":{"start":{"line":419,"column":0},"end":{"line":421,"column":2}},"150":{"start":{"line":420,"column":2},"end":{"line":420,"column":26}},"151":{"start":{"line":431,"column":0},"end":{"line":476,"column":2}},"152":{"start":{"line":434,"column":2},"end":{"line":434,"column":18}},"153":{"start":{"line":436,"column":2},"end":{"line":439,"column":3}},"154":{"start":{"line":437,"column":4},"end":{"line":437,"column":21}},"155":{"start":{"line":438,"column":4},"end":{"line":438,"column":17}},"156":{"start":{"line":442,"column":2},"end":{"line":444,"column":3}},"157":{"start":{"line":443,"column":4},"end":{"line":443,"column":47}},"158":{"start":{"line":446,"column":2},"end":{"line":446,"column":34}},"159":{"start":{"line":447,"column":2},"end":{"line":447,"column":35}},"160":{"start":{"line":448,"column":2},"end":{"line":452,"column":5}},"161":{"start":{"line":449,"column":4},"end":{"line":449,"column":32}},"162":{"start":{"line":451,"column":4},"end":{"line":451,"column":31}},"163":{"start":{"line":453,"column":2},"end":{"line":455,"column":5}},"164":{"start":{"line":454,"column":4},"end":{"line":454,"column":27}},"165":{"start":{"line":456,"column":2},"end":{"line":458,"column":5}},"166":{"start":{"line":457,"column":4},"end":{"line":457,"column":26}},"167":{"start":{"line":460,"column":2},"end":{"line":472,"column":3}},"168":{"start":{"line":461,"column":4},"end":{"line":461,"column":33}},"169":{"start":{"line":463,"column":4},"end":{"line":463,"column":13}},"170":{"start":{"line":464,"column":4},"end":{"line":471,"column":5}},"171":{"start":{"line":465,"column":6},"end":{"line":465,"column":65}},"172":{"start":{"line":465,"column":42},"end":{"line":465,"column":61}},"173":{"start":{"line":466,"column":6},"end":{"line":466,"column":17}},"174":{"start":{"line":467,"column":11},"end":{"line":471,"column":5}},"175":{"start":{"line":468,"column":6},"end":{"line":468,"column":19}},"176":{"start":{"line":469,"column":6},"end":{"line":469,"column":43}},"177":{"start":{"line":470,"column":6},"end":{"line":470,"column":29}},"178":{"start":{"line":475,"column":2},"end":{"line":475,"column":33}},"179":{"start":{"line":486,"column":0},"end":{"line":488,"column":2}},"180":{"start":{"line":487,"column":2},"end":{"line":487,"column":71}},"181":{"start":{"line":496,"column":0},"end":{"line":509,"column":2}},"182":{"start":{"line":497,"column":2},"end":{"line":507,"column":3}},"183":{"start":{"line":498,"column":4},"end":{"line":506,"column":7}},"184":{"start":{"line":499,"column":6},"end":{"line":501,"column":9}},"185":{"start":{"line":500,"column":8},"end":{"line":500,"column":28}},"186":{"start":{"line":503,"column":6},"end":{"line":505,"column":9}},"187":{"start":{"line":504,"column":8},"end":{"line":504,"column":22}},"188":{"start":{"line":508,"column":2},"end":{"line":508,"column":14}},"189":{"start":{"line":526,"column":0},"end":{"line":544,"column":2}},"190":{"start":{"line":527,"column":2},"end":{"line":527,"column":18}},"191":{"start":{"line":528,"column":2},"end":{"line":528,"column":24}},"192":{"start":{"line":529,"column":2},"end":{"line":529,"column":28}},"193":{"start":{"line":530,"column":2},"end":{"line":530,"column":26}},"194":{"start":{"line":531,"column":2},"end":{"line":531,"column":24}},"195":{"start":{"line":533,"column":2},"end":{"line":535,"column":3}},"196":{"start":{"line":534,"column":4},"end":{"line":534,"column":42}},"197":{"start":{"line":536,"column":2},"end":{"line":543,"column":24}},"198":{"start":{"line":541,"column":4},"end":{"line":541,"column":32}},"199":{"start":{"line":542,"column":4},"end":{"line":542,"column":25}},"200":{"start":{"line":554,"column":0},"end":{"line":593,"column":2}},"201":{"start":{"line":555,"column":2},"end":{"line":555,"column":18}},"202":{"start":{"line":556,"column":2},"end":{"line":556,"column":26}},"203":{"start":{"line":557,"column":2},"end":{"line":557,"column":24}},"204":{"start":{"line":559,"column":2},"end":{"line":561,"column":3}},"205":{"start":{"line":560,"column":4},"end":{"line":560,"column":42}},"206":{"start":{"line":562,"column":2},"end":{"line":562,"column":39}},"207":{"start":{"line":563,"column":2},"end":{"line":591,"column":4}},"208":{"start":{"line":564,"column":4},"end":{"line":564,"column":35}},"209":{"start":{"line":565,"column":4},"end":{"line":572,"column":5}},"210":{"start":{"line":566,"column":6},"end":{"line":566,"column":94}},"211":{"start":{"line":567,"column":6},"end":{"line":567,"column":34}},"212":{"start":{"line":568,"column":6},"end":{"line":568,"column":24}},"213":{"start":{"line":569,"column":6},"end":{"line":569,"column":28}},"214":{"start":{"line":570,"column":6},"end":{"line":570,"column":30}},"215":{"start":{"line":571,"column":6},"end":{"line":571,"column":13}},"216":{"start":{"line":573,"column":4},"end":{"line":590,"column":7}},"217":{"start":{"line":574,"column":6},"end":{"line":589,"column":7}},"218":{"start":{"line":575,"column":8},"end":{"line":575,"column":32}},"219":{"start":{"line":577,"column":8},"end":{"line":588,"column":9}},"220":{"start":{"line":578,"column":10},"end":{"line":582,"column":11}},"221":{"start":{"line":579,"column":12},"end":{"line":579,"column":28}},"222":{"start":{"line":581,"column":12},"end":{"line":581,"column":60}},"223":{"start":{"line":583,"column":15},"end":{"line":588,"column":9}},"224":{"start":{"line":584,"column":10},"end":{"line":584,"column":26}},"225":{"start":{"line":586,"column":10},"end":{"line":586,"column":37}},"226":{"start":{"line":587,"column":10},"end":{"line":587,"column":37}},"227":{"start":{"line":592,"column":2},"end":{"line":592,"column":29}},"228":{"start":{"line":609,"column":0},"end":{"line":653,"column":2}},"229":{"start":{"line":610,"column":2},"end":{"line":610,"column":18}},"230":{"start":{"line":611,"column":2},"end":{"line":611,"column":24}},"231":{"start":{"line":612,"column":2},"end":{"line":612,"column":26}},"232":{"start":{"line":613,"column":2},"end":{"line":613,"column":21}},"233":{"start":{"line":614,"column":2},"end":{"line":614,"column":24}},"234":{"start":{"line":616,"column":2},"end":{"line":618,"column":3}},"235":{"start":{"line":617,"column":4},"end":{"line":617,"column":42}},"236":{"start":{"line":620,"column":2},"end":{"line":652,"column":24}},"237":{"start":{"line":621,"column":4},"end":{"line":624,"column":7}},"238":{"start":{"line":626,"column":4},"end":{"line":626,"column":16}},"239":{"start":{"line":627,"column":4},"end":{"line":646,"column":5}},"240":{"start":{"line":628,"column":6},"end":{"line":628,"column":28}},"241":{"start":{"line":629,"column":6},"end":{"line":629,"column":48}},"242":{"start":{"line":630,"column":6},"end":{"line":630,"column":42}},"243":{"start":{"line":631,"column":6},"end":{"line":637,"column":9}},"244":{"start":{"line":632,"column":8},"end":{"line":636,"column":10}},"245":{"start":{"line":639,"column":6},"end":{"line":645,"column":9}},"246":{"start":{"line":640,"column":8},"end":{"line":644,"column":10}},"247":{"start":{"line":647,"column":4},"end":{"line":647,"column":35}},"248":{"start":{"line":648,"column":4},"end":{"line":648,"column":19}},"249":{"start":{"line":650,"column":4},"end":{"line":650,"column":28}},"250":{"start":{"line":651,"column":4},"end":{"line":651,"column":14}},"251":{"start":{"line":660,"column":0},"end":{"line":674,"column":2}},"252":{"start":{"line":661,"column":2},"end":{"line":661,"column":26}},"253":{"start":{"line":662,"column":2},"end":{"line":662,"column":24}},"254":{"start":{"line":663,"column":2},"end":{"line":665,"column":3}},"255":{"start":{"line":664,"column":4},"end":{"line":664,"column":42}},"256":{"start":{"line":666,"column":2},"end":{"line":666,"column":49}},"257":{"start":{"line":667,"column":2},"end":{"line":667,"column":52}},"258":{"start":{"line":668,"column":2},"end":{"line":672,"column":37}},"259":{"start":{"line":673,"column":2},"end":{"line":673,"column":22}},"260":{"start":{"line":680,"column":0},"end":{"line":682,"column":2}},"261":{"start":{"line":681,"column":2},"end":{"line":681,"column":40}},"262":{"start":{"line":684,"column":0},"end":{"line":684,"column":27}},"263":{"start":{"line":686,"column":0},"end":{"line":689,"column":2}},"264":{"start":{"line":687,"column":2},"end":{"line":687,"column":42}},"265":{"start":{"line":688,"column":2},"end":{"line":688,"column":61}},"266":{"start":{"line":691,"column":0},"end":{"line":694,"column":2}},"267":{"start":{"line":692,"column":2},"end":{"line":693,"column":75}},"268":{"start":{"line":696,"column":0},"end":{"line":698,"column":2}},"269":{"start":{"line":697,"column":2},"end":{"line":697,"column":22}},"270":{"start":{"line":700,"column":0},"end":{"line":705,"column":2}},"271":{"start":{"line":701,"column":2},"end":{"line":704,"column":4}},"272":{"start":{"line":715,"column":0},"end":{"line":718,"column":2}},"273":{"start":{"line":716,"column":2},"end":{"line":716,"column":20}},"274":{"start":{"line":717,"column":2},"end":{"line":717,"column":30}},"275":{"start":{"line":724,"column":0},"end":{"line":724,"column":35}},"276":{"start":{"line":730,"column":0},"end":{"line":730,"column":35}},"277":{"start":{"line":733,"column":0},"end":{"line":742,"column":2}},"278":{"start":{"line":734,"column":2},"end":{"line":734,"column":24}},"279":{"start":{"line":735,"column":2},"end":{"line":735,"column":29}},"280":{"start":{"line":736,"column":2},"end":{"line":736,"column":79}},"281":{"start":{"line":737,"column":2},"end":{"line":737,"column":39}},"282":{"start":{"line":738,"column":2},"end":{"line":738,"column":55}},"283":{"start":{"line":739,"column":2},"end":{"line":739,"column":22}},"284":{"start":{"line":740,"column":2},"end":{"line":740,"column":30}},"285":{"start":{"line":741,"column":2},"end":{"line":741,"column":78}},"286":{"start":{"line":756,"column":0},"end":{"line":786,"column":2}},"287":{"start":{"line":757,"column":2},"end":{"line":757,"column":18}},"288":{"start":{"line":758,"column":2},"end":{"line":760,"column":3}},"289":{"start":{"line":759,"column":4},"end":{"line":759,"column":94}},"290":{"start":{"line":761,"column":2},"end":{"line":765,"column":3}},"291":{"start":{"line":762,"column":4},"end":{"line":762,"column":21}},"292":{"start":{"line":763,"column":4},"end":{"line":763,"column":20}},"293":{"start":{"line":764,"column":4},"end":{"line":764,"column":19}},"294":{"start":{"line":766,"column":2},"end":{"line":766,"column":53}},"295":{"start":{"line":767,"column":2},"end":{"line":771,"column":5}},"296":{"start":{"line":768,"column":4},"end":{"line":770,"column":5}},"297":{"start":{"line":769,"column":6},"end":{"line":769,"column":33}},"298":{"start":{"line":772,"column":2},"end":{"line":772,"column":32}},"299":{"start":{"line":773,"column":2},"end":{"line":776,"column":4}},"300":{"start":{"line":774,"column":4},"end":{"line":774,"column":17}},"301":{"start":{"line":775,"column":4},"end":{"line":775,"column":16}},"302":{"start":{"line":777,"column":2},"end":{"line":781,"column":4}},"303":{"start":{"line":778,"column":4},"end":{"line":780,"column":5}},"304":{"start":{"line":779,"column":6},"end":{"line":779,"column":16}},"305":{"start":{"line":782,"column":2},"end":{"line":782,"column":32}},"306":{"start":{"line":783,"column":2},"end":{"line":783,"column":36}},"307":{"start":{"line":784,"column":2},"end":{"line":784,"column":85}},"308":{"start":{"line":784,"column":33},"end":{"line":784,"column":81}},"309":{"start":{"line":785,"column":2},"end":{"line":785,"column":40}},"310":{"start":{"line":794,"column":0},"end":{"line":817,"column":2}},"311":{"start":{"line":795,"column":2},"end":{"line":795,"column":66}},"312":{"start":{"line":796,"column":2},"end":{"line":798,"column":3}},"313":{"start":{"line":797,"column":4},"end":{"line":797,"column":85}},"314":{"start":{"line":799,"column":2},"end":{"line":799,"column":18}},"315":{"start":{"line":800,"column":2},"end":{"line":800,"column":18}},"316":{"start":{"line":801,"column":2},"end":{"line":801,"column":49}},"317":{"start":{"line":802,"column":2},"end":{"line":802,"column":46}},"318":{"start":{"line":803,"column":2},"end":{"line":815,"column":5}},"319":{"start":{"line":804,"column":4},"end":{"line":810,"column":7}},"320":{"start":{"line":805,"column":6},"end":{"line":809,"column":18}},"321":{"start":{"line":812,"column":4},"end":{"line":812,"column":42}},"322":{"start":{"line":814,"column":4},"end":{"line":814,"column":36}},"323":{"start":{"line":816,"column":2},"end":{"line":816,"column":22}},"324":{"start":{"line":828,"column":0},"end":{"line":830,"column":2}},"325":{"start":{"line":829,"column":2},"end":{"line":829,"column":49}},"326":{"start":{"line":838,"column":0},"end":{"line":840,"column":2}},"327":{"start":{"line":839,"column":2},"end":{"line":839,"column":48}},"328":{"start":{"line":847,"column":0},"end":{"line":849,"column":3}},"329":{"start":{"line":848,"column":2},"end":{"line":848,"column":29}},"330":{"start":{"line":852,"column":0},"end":{"line":852,"column":22}}},"branchMap":{"1":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":17},"end":{"line":41,"column":24}},{"start":{"line":41,"column":28},"end":{"line":41,"column":30}}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":25},"end":{"line":43,"column":31}},{"start":{"line":43,"column":34},"end":{"line":43,"column":43}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"6":{"line":94,"type":"cond-expr","locations":[{"start":{"line":95,"column":9},"end":{"line":95,"column":81}},{"start":{"line":96,"column":9},"end":{"line":96,"column":11}}]},"7":{"line":97,"type":"cond-expr","locations":[{"start":{"line":98,"column":9},"end":{"line":98,"column":78}},{"start":{"line":99,"column":9},"end":{"line":99,"column":11}}]},"8":{"line":100,"type":"cond-expr","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":86}},{"start":{"line":102,"column":10},"end":{"line":102,"column":12}}]},"9":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"10":{"line":196,"type":"cond-expr","locations":[{"start":{"line":196,"column":20},"end":{"line":196,"column":52}},{"start":{"line":196,"column":55},"end":{"line":196,"column":66}}]},"11":{"line":221,"type":"cond-expr","locations":[{"start":{"line":221,"column":57},"end":{"line":221,"column":80}},{"start":{"line":221,"column":83},"end":{"line":221,"column":110}}]},"12":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"13":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"14":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":9},"end":{"line":406,"column":9}},{"start":{"line":406,"column":9},"end":{"line":406,"column":9}}]},"15":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":2},"end":{"line":436,"column":2}},{"start":{"line":436,"column":2},"end":{"line":436,"column":2}}]},"16":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]},"17":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":2},"end":{"line":460,"column":2}},{"start":{"line":460,"column":2},"end":{"line":460,"column":2}}]},"18":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":6},"end":{"line":460,"column":23}},{"start":{"line":460,"column":27},"end":{"line":460,"column":51}}]},"19":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":4},"end":{"line":464,"column":4}},{"start":{"line":464,"column":4},"end":{"line":464,"column":4}}]},"20":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":11},"end":{"line":467,"column":11}},{"start":{"line":467,"column":11},"end":{"line":467,"column":11}}]},"21":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":2},"end":{"line":497,"column":2}},{"start":{"line":497,"column":2},"end":{"line":497,"column":2}}]},"22":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":2}},{"start":{"line":533,"column":2},"end":{"line":533,"column":2}}]},"23":{"line":533,"type":"binary-expr","locations":[{"start":{"line":533,"column":6},"end":{"line":533,"column":12}},{"start":{"line":533,"column":16},"end":{"line":533,"column":24}}]},"24":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"25":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":6},"end":{"line":559,"column":12}},{"start":{"line":559,"column":16},"end":{"line":559,"column":24}}]},"26":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":4},"end":{"line":565,"column":4}},{"start":{"line":565,"column":4},"end":{"line":565,"column":4}}]},"27":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":6},"end":{"line":574,"column":6}},{"start":{"line":574,"column":6},"end":{"line":574,"column":6}}]},"28":{"line":577,"type":"if","locations":[{"start":{"line":577,"column":8},"end":{"line":577,"column":8}},{"start":{"line":577,"column":8},"end":{"line":577,"column":8}}]},"29":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":10},"end":{"line":578,"column":10}},{"start":{"line":578,"column":10},"end":{"line":578,"column":10}}]},"30":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":15},"end":{"line":583,"column":15}},{"start":{"line":583,"column":15},"end":{"line":583,"column":15}}]},"31":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":2},"end":{"line":616,"column":2}},{"start":{"line":616,"column":2},"end":{"line":616,"column":2}}]},"32":{"line":616,"type":"binary-expr","locations":[{"start":{"line":616,"column":6},"end":{"line":616,"column":12}},{"start":{"line":616,"column":16},"end":{"line":616,"column":24}}]},"33":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":4},"end":{"line":627,"column":4}},{"start":{"line":627,"column":4},"end":{"line":627,"column":4}}]},"34":{"line":631,"type":"cond-expr","locations":[{"start":{"line":631,"column":43},"end":{"line":631,"column":50}},{"start":{"line":631,"column":53},"end":{"line":631,"column":64}}]},"35":{"line":641,"type":"binary-expr","locations":[{"start":{"line":641,"column":14},"end":{"line":641,"column":20}},{"start":{"line":641,"column":24},"end":{"line":641,"column":28}}]},"36":{"line":643,"type":"cond-expr","locations":[{"start":{"line":643,"column":30},"end":{"line":643,"column":43}},{"start":{"line":643,"column":46},"end":{"line":643,"column":48}}]},"37":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":2},"end":{"line":663,"column":2}},{"start":{"line":663,"column":2},"end":{"line":663,"column":2}}]},"38":{"line":663,"type":"binary-expr","locations":[{"start":{"line":663,"column":6},"end":{"line":663,"column":12}},{"start":{"line":663,"column":16},"end":{"line":663,"column":24}}]},"39":{"line":687,"type":"binary-expr","locations":[{"start":{"line":687,"column":20},"end":{"line":687,"column":35}},{"start":{"line":687,"column":39},"end":{"line":687,"column":41}}]},"40":{"line":692,"type":"binary-expr","locations":[{"start":{"line":692,"column":9},"end":{"line":692,"column":36}},{"start":{"line":693,"column":4},"end":{"line":693,"column":74}}]},"41":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":2},"end":{"line":758,"column":2}},{"start":{"line":758,"column":2},"end":{"line":758,"column":2}}]},"42":{"line":758,"type":"binary-expr","locations":[{"start":{"line":758,"column":6},"end":{"line":758,"column":11}},{"start":{"line":758,"column":15},"end":{"line":758,"column":25}}]},"43":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":2},"end":{"line":761,"column":2}},{"start":{"line":761,"column":2},"end":{"line":761,"column":2}}]},"44":{"line":761,"type":"binary-expr","locations":[{"start":{"line":761,"column":6},"end":{"line":761,"column":26}},{"start":{"line":761,"column":30},"end":{"line":761,"column":60}}]},"45":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":4},"end":{"line":768,"column":4}},{"start":{"line":768,"column":4},"end":{"line":768,"column":4}}]},"46":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":4},"end":{"line":778,"column":4}},{"start":{"line":778,"column":4},"end":{"line":778,"column":4}}]},"47":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":2},"end":{"line":796,"column":2}},{"start":{"line":796,"column":2},"end":{"line":796,"column":2}}]}},"code":["/*global process*/","/**"," * @file Manages Salesforce Bulk API related operations"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var inherits     = require('inherits'),","    stream       = require('readable-stream'),","    Duplex       = stream.Duplex,","    events       = require('events'),","    _            = require('lodash/core'),","    joinStreams  = require('multistream'),","    jsforce      = require('../core'),","    RecordStream = require('../record-stream'),","    Promise      = require('../promise'),","    HttpApi      = require('../http-api');","","/*--------------------------------------------*/","","/**"," * Class for Bulk API Job"," *"," * @protected"," * @class Bulk~Job"," * @extends events.EventEmitter"," *"," * @param {Bulk} bulk - Bulk API object"," * @param {String} [type] - SObject type"," * @param {String} [operation] - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')"," * @param {Object} [options] - Options for bulk loading operation"," * @param {String} [options.extIdField] - External ID field name (used when upsert operation)."," * @param {String} [options.concurrencyMode] - 'Serial' or 'Parallel'. Defaults to Parallel."," * @param {String} [jobId] - Job ID (if already available)"," */","var Job = function(bulk, type, operation, options, jobId) {","  this._bulk = bulk;","  this.type = type;","  this.operation = operation;","  this.options = options || {};","  this.id = jobId;","  this.state = this.id ? 'Open' : 'Unknown';","  this._batches = {};","};","","inherits(Job, events.EventEmitter);","","/**"," * @typedef {Object} Bulk~JobInfo"," * @prop {String} id - Job ID"," * @prop {String} object - Object type name"," * @prop {String} operation - Operation type of the job"," * @prop {String} state - Job status"," */","","/**"," * Return latest jobInfo from cache"," *"," * @method Bulk~Job#open"," * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~JobInfo>}"," */","Job.prototype.info = function(callback) {","  var self = this;","  // if cache is not available, check the latest","  if (!this._jobInfo) {","    this._jobInfo = this.check();","  }","  return this._jobInfo.thenCall(callback);","};","","/**"," * Open new job and get jobinfo"," *"," * @method Bulk~Job#open"," * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~JobInfo>}"," */","Job.prototype.open = function(callback) {","  var self = this;","  var bulk = this._bulk;","  var logger = bulk._logger;","","  // if not requested opening job","  if (!this._jobInfo) {","    var operation = this.operation.toLowerCase();","    if (operation === 'harddelete') { operation = 'hardDelete'; }","    var body = [","      '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',","      '<jobInfo  xmlns=\"http://www.force.com/2009/06/asyncapi/dataload\">',","        '<operation>' + operation + '</operation>',","        '<object>' + this.type + '</object>',","        (this.options.extIdField ?","         '<externalIdFieldName>'+this.options.extIdField+'</externalIdFieldName>' :","         ''),","        (this.options.concurrencyMode ?","         '<concurrencyMode>'+this.options.concurrencyMode+'</concurrencyMode>' :","         ''),","        (this.options.assignmentRuleId ?","          '<assignmentRuleId>' + this.options.assignmentRuleId + '</assignmentRuleId>' :","          ''),","        '<contentType>CSV</contentType>',","      '</jobInfo>'","    ].join('');","","    this._jobInfo = bulk._request({","      method : 'POST',","      path : \"/job\",","      body : body,","      headers : {","        \"Content-Type\" : \"application/xml; charset=utf-8\"","      },","      responseType: \"application/xml\"","    }).then(function(res) {","      self.emit(\"open\", res.jobInfo);","      self.id = res.jobInfo.id;","      self.state = res.jobInfo.state;","      return res.jobInfo;","    }, function(err) {","      self.emit(\"error\", err);","      throw err;","    });","  }","  return this._jobInfo.thenCall(callback);","};","","/**"," * Create a new batch instance in the job"," *"," * @method Bulk~Job#createBatch"," * @returns {Bulk~Batch}"," */","Job.prototype.createBatch = function() {","  var batch = new Batch(this);","  var self = this;","  batch.on('queue', function() {","    self._batches[batch.id] = batch;","  });","  return batch;","};","","/**"," * Get a batch instance specified by given batch ID"," *"," * @method Bulk~Job#batch"," * @param {String} batchId - Batch ID"," * @returns {Bulk~Batch}"," */","Job.prototype.batch = function(batchId) {","  var batch = this._batches[batchId];","  if (!batch) {","    batch = new Batch(this, batchId);","    this._batches[batchId] = batch;","  }","  return batch;","};","","/**"," * Check the latest job status from server"," *"," * @method Bulk~Job#check"," * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~JobInfo>}"," */","Job.prototype.check = function(callback) {","  var self = this;","  var bulk = this._bulk;","  var logger = bulk._logger;","","  this._jobInfo = this._waitAssign().then(function() {","    return bulk._request({","      method : 'GET',","      path : \"/job/\" + self.id,","      responseType: \"application/xml\"","    });","  }).then(function(res) {","    logger.debug(res.jobInfo);","    self.id = res.jobInfo.id;","    self.type = res.jobInfo.object;","    self.operation = res.jobInfo.operation;","    self.state = res.jobInfo.state;","    return res.jobInfo;","  });","  return this._jobInfo.thenCall(callback);","};","","/**"," * Wait till the job is assigned to server"," *"," * @method Bulk~Job#info"," * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~JobInfo>}"," */","Job.prototype._waitAssign = function(callback) {","  return (this.id ? Promise.resolve({ id: this.id }) : this.open()).thenCall(callback);","};","","","/**"," * List all registered batch info in job"," *"," * @method Bulk~Job#list"," * @param {Callback.<Array.<Bulk~BatchInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<Bulk~BatchInfo>>}"," */","Job.prototype.list = function(callback) {","  var self = this;","  var bulk = this._bulk;","  var logger = bulk._logger;","","  return this._waitAssign().then(function() {","    return bulk._request({","      method : 'GET',","      path : \"/job/\" + self.id + \"/batch\",","      responseType: \"application/xml\"","    });","  }).then(function(res) {","    logger.debug(res.batchInfoList.batchInfo);","    var batchInfoList = res.batchInfoList;","    batchInfoList = _.isArray(batchInfoList.batchInfo) ? batchInfoList.batchInfo : [ batchInfoList.batchInfo ];","    return batchInfoList;","  }).thenCall(callback);","","};","","/**"," * Close opened job"," *"," * @method Bulk~Job#close"," * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~JobInfo>}"," */","Job.prototype.close = function() {","  var self = this;","  return this._changeState(\"Closed\").then(function(jobInfo) {","    self.id = null;","    self.emit(\"close\", jobInfo);","    return jobInfo;","  }, function(err) {","    self.emit(\"error\", err);","    throw err;","  });","};","","/**"," * Set the status to abort"," *"," * @method Bulk~Job#abort"," * @param {Callback.<Bulk~JobInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~JobInfo>}"," */","Job.prototype.abort = function() {","  var self = this;","  return this._changeState(\"Aborted\").then(function(jobInfo) {","    self.id = null;","    self.emit(\"abort\", jobInfo);","    return jobInfo;","  }, function(err) {","    self.emit(\"error\", err);","    throw err;","  });","};","","/**"," * @private"," */","Job.prototype._changeState = function(state, callback) {","  var self = this;","  var bulk = this._bulk;","  var logger = bulk._logger;","","  this._jobInfo = this._waitAssign().then(function() {","    var body = [","      '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',","      '<jobInfo xmlns=\"http://www.force.com/2009/06/asyncapi/dataload\">',","        '<state>' + state + '</state>',","      '</jobInfo>'","    ].join('');","    return bulk._request({","      method : 'POST',","      path : \"/job/\" + self.id,","      body : body,","      headers : {","        \"Content-Type\" : \"application/xml; charset=utf-8\"","      },","      responseType: \"application/xml\"","    });","  }).then(function(res) {","    logger.debug(res.jobInfo);","    self.state = res.jobInfo.state;","    return res.jobInfo;","  });","  return this._jobInfo.thenCall(callback);","","};","","","/*--------------------------------------------*/","","/**"," * Batch (extends RecordStream)"," *"," * @protected"," * @class Bulk~Batch"," * @extends {stream.Writable}"," * @implements {Promise.<Array.<RecordResult>>}"," * @param {Bulk~Job} job - Bulk job object"," * @param {String} [batchId] - Batch ID (if already available)"," */","var Batch = function(job, batchId) {","  Batch.super_.call(this, { objectMode: true });","  this.job = job;","  this.id = batchId;","  this._bulk = job._bulk;","  this._deferred = Promise.defer();","  this._setupDataStreams();","};","","inherits(Batch, stream.Writable);","","","/**"," * @private"," */","Batch.prototype._setupDataStreams = function() {","  var batch = this;","  var converterOptions = { nullValue : '#N/A' };","  this._uploadStream = new RecordStream.Serializable();","  this._uploadDataStream = this._uploadStream.stream('csv', converterOptions);","  this._downloadStream = new RecordStream.Parsable();","  this._downloadDataStream = this._downloadStream.stream('csv', converterOptions);","","  this.on('finish', function() {","    batch._uploadStream.end();","  });","  this._uploadDataStream.once('readable', function() {","    batch.job.open().then(function() {","      // pipe upload data to batch API request stream","      batch._uploadDataStream.pipe(batch._createRequestStream());","    });","  });","","  // duplex data stream, opened access to API programmers by Batch#stream()","  var dataStream = this._dataStream = new Duplex();","  dataStream._write = function(data, enc, cb) {","    batch._uploadDataStream.write(data, enc, cb);","  };","  dataStream.on('finish', function() {","    batch._uploadDataStream.end();","  });","","  this._downloadDataStream.on('readable', function() {","    dataStream.read(0);","  });","  this._downloadDataStream.on('end', function() {","    dataStream.push(null);","  });","  dataStream._read = function(size) {","    var chunk;","    while ((chunk = batch._downloadDataStream.read()) !== null) {","      dataStream.push(chunk);","    }","  };","};","","/**"," * Connect batch API and create stream instance of request/response"," *"," * @private"," * @returns {stream.Duplex}"," */","Batch.prototype._createRequestStream = function() {","  var batch = this;","  var bulk = batch._bulk;","  var logger = bulk._logger;","","  return bulk._request({","    method : 'POST',","    path : \"/job/\" + batch.job.id + \"/batch\",","    headers: {","      \"Content-Type\": \"text/csv\"","    },","    responseType: \"application/xml\"","  }, function(err, res) {","    if (err) {","      batch.emit('error', err);","    } else {","      logger.debug(res.batchInfo);","      batch.id = res.batchInfo.id;","      batch.emit('queue', res.batchInfo);","    }","  }).stream();","};","","/**"," * Implementation of Writable"," *"," * @override"," * @private"," */","Batch.prototype._write = function(record, enc, cb) {","  record = _.clone(record);","  if (this.job.operation === \"insert\") {","    delete record.Id;","  } else if (this.job.operation === \"delete\") {","    record = { Id: record.Id };","  }","  delete record.type;","  delete record.attributes;","  this._uploadStream.write(record, enc, cb);","};","","/**"," * Returns duplex stream which accepts CSV data input and batch result output"," *"," * @returns {stream.Duplex}"," */","Batch.prototype.stream = function() {","  return this._dataStream;","};","","/**"," * Execute batch operation"," *"," * @method Bulk~Batch#execute"," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for batch operation. Accepts array of records, CSV string, and CSV data input stream in insert/update/upsert/delete/hardDelete operation, SOQL string in query operation."," * @param {Callback.<Array.<RecordResult>|Array.<BatchResultInfo>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","Batch.prototype.run =","Batch.prototype.exec =","Batch.prototype.execute = function(input, callback) {","  var self = this;","","  if (typeof input === 'function') { // if input argument is omitted","    callback = input;","    input = null;","  }","","  // if batch is already executed","  if (this._result) {","    throw new Error(\"Batch already executed.\");","  }","","  var rdeferred = Promise.defer();","  this._result = rdeferred.promise;","  this._result.then(function(res) {","    self._deferred.resolve(res);","  }, function(err) {","    self._deferred.reject(err);","  });","  this.once('response', function(res) {","    rdeferred.resolve(res);","  });","  this.once('error', function(err) {","    rdeferred.reject(err);","  });","","  if (_.isObject(input) && _.isFunction(input.pipe)) { // if input has stream.Readable interface","    input.pipe(this._dataStream);","  } else {","    var data;","    if (_.isArray(input)) {","      _.forEach(input, function(record) { self.write(record); });","      self.end();","    } else if (_.isString(input)){","      data = input;","      this._dataStream.write(data, 'utf8');","      this._dataStream.end();","    }","  }","","  // return Batch instance for chaining","  return this.thenCall(callback);","};","","/**"," * Promise/A+ interface"," * http://promises-aplus.github.io/promises-spec/"," *"," * Delegate to deferred promise, return promise instance for batch result"," *"," * @method Bulk~Batch#then"," */","Batch.prototype.then = function(onResolved, onReject, onProgress) {","  return this._deferred.promise.then(onResolved, onReject, onProgress);","};","","/**"," * Promise/A+ extension"," * Call \"then\" using given node-style callback function"," *"," * @method Bulk~Batch#thenCall"," */","Batch.prototype.thenCall = function(callback) {","  if (_.isFunction(callback)) {","    this.then(function(res) {","      process.nextTick(function() {","        callback(null, res);","      });","    }, function(err) {","      process.nextTick(function() {","        callback(err);","      });","    });","  }","  return this;","};","","/**"," * @typedef {Object} Bulk~BatchInfo"," * @prop {String} id - Batch ID"," * @prop {String} jobId - Job ID"," * @prop {String} state - Batch state"," * @prop {String} stateMessage - Batch state message"," */","","/**"," * Check the latest batch status in server"," *"," * @method Bulk~Batch#check"," * @param {Callback.<Bulk~BatchInfo>} [callback] - Callback function"," * @returns {Promise.<Bulk~BatchInfo>}"," */","Batch.prototype.check = function(callback) {","  var self = this;","  var bulk = this._bulk;","  var logger = bulk._logger;","  var jobId = this.job.id;","  var batchId = this.id;","","  if (!jobId || !batchId) {","    throw new Error(\"Batch not started.\");","  }","  return bulk._request({","    method : 'GET',","    path : \"/job/\" + jobId + \"/batch/\" + batchId,","    responseType: \"application/xml\"","  }).then(function(res) {","    logger.debug(res.batchInfo);","    return res.batchInfo;","  }).thenCall(callback);","};","","","/**"," * Polling the batch result and retrieve"," *"," * @method Bulk~Batch#poll"," * @param {Number} interval - Polling interval in milliseconds"," * @param {Number} timeout - Polling timeout in milliseconds"," */","Batch.prototype.poll = function(interval, timeout) {","  var self = this;","  var jobId = this.job.id;","  var batchId = this.id;","","  if (!jobId || !batchId) {","    throw new Error(\"Batch not started.\");","  }","  var startTime = new Date().getTime();","  var poll = function() {","    var now = new Date().getTime();","    if (startTime + timeout < now) {","      var err = new Error(\"Polling time out. Job Id = \" + jobId + \" , batch Id = \" + batchId);","      err.name = 'PollingTimeout';","      err.jobId = jobId;","      err.batchId = batchId;","      self.emit('error', err);","      return;","    }","    self.check(function(err, res) {","      if (err) {","        self.emit('error', err);","      } else {","        if (res.state === \"Failed\") {","          if (parseInt(res.numberRecordsProcessed, 10) > 0) {","            self.retrieve();","          } else {","            self.emit('error', new Error(res.stateMessage));","          }","        } else if (res.state === \"Completed\") {","          self.retrieve();","        } else {","          self.emit('progress', res);","          setTimeout(poll, interval);","        }","      }","    });","  };","  setTimeout(poll, interval);","};","","/**"," * @typedef {Object} Bulk~BatchResultInfo"," * @prop {String} id - Batch result ID"," * @prop {String} batchId - Batch ID which includes this batch result."," * @prop {String} jobId - Job ID which includes this batch result."," */","","/**"," * Retrieve batch result"," *"," * @method Bulk~Batch#retrieve"," * @param {Callback.<Array.<RecordResult>|Array.<Bulk~BatchResultInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<RecordResult>|Array.<Bulk~BatchResultInfo>>}"," */","Batch.prototype.retrieve = function(callback) {","  var self = this;","  var bulk = this._bulk;","  var jobId = this.job.id;","  var job = this.job;","  var batchId = this.id;","","  if (!jobId || !batchId) {","    throw new Error(\"Batch not started.\");","  }","","  return job.info().then(function(jobInfo) {","    return bulk._request({","      method : 'GET',","      path : \"/job/\" + jobId + \"/batch/\" + batchId + \"/result\"","    });","  }).then(function(res) {","    var results;","    if (job.operation === 'query') {","      var conn = bulk._conn;","      var resultIds = res['result-list'].result;","      results = res['result-list'].result;","      results = _.map(_.isArray(results) ? results : [ results ], function(id) {","        return {","          id: id,","          batchId: batchId,","          jobId: jobId","        };","      });","    } else {","      results = _.map(res, function(ret) {","        return {","          id: ret.Id || null,","          success: ret.Success === \"true\",","          errors: ret.Error ? [ ret.Error ] : []","        };","      });","    }","    self.emit('response', results);","    return results;","  }).fail(function(err) {","    self.emit('error', err);","    throw err;","  }).thenCall(callback);","};","","/**"," * Fetch query result as a record stream"," * @param {String} resultId - Result id"," * @returns {RecordStream} - Record stream, convertible to CSV data stream"," */","Batch.prototype.result = function(resultId) {","  var jobId = this.job.id;","  var batchId = this.id;","  if (!jobId || !batchId) {","    throw new Error(\"Batch not started.\");","  }","  var resultStream = new RecordStream.Parsable();","  var resultDataStream = resultStream.stream('csv');","  var reqStream = this._bulk._request({","    method : 'GET',","    path : \"/job/\" + jobId + \"/batch/\" + batchId + \"/result/\" + resultId,","    responseType: \"application/octet-stream\"","  }).stream().pipe(resultDataStream);","  return resultStream;","};","","/*--------------------------------------------*/","/**"," * @private"," */","var BulkApi = function() {","  BulkApi.super_.apply(this, arguments);","};","","inherits(BulkApi, HttpApi);","","BulkApi.prototype.beforeSend = function(request) {","  request.headers = request.headers || {};","  request.headers[\"X-SFDC-SESSION\"] = this._conn.accessToken;","};","","BulkApi.prototype.isSessionExpired = function(response) {","  return response.statusCode === 400 &&","    /<exceptionCode>InvalidSessionId<\\/exceptionCode>/.test(response.body);","};","","BulkApi.prototype.hasErrorInResponseBody = function(body) {","  return !!body.error;","};","","BulkApi.prototype.parseError = function(body) {","  return {","    errorCode: body.error.exceptionCode,","    message: body.error.exceptionMessage","  };","};","","/*--------------------------------------------*/","","/**"," * Class for Bulk API"," *"," * @class"," * @param {Connection} conn - Connection object"," */","var Bulk = function(conn) {","  this._conn = conn;","  this._logger = conn._logger;","};","","/**"," * Polling interval in milliseconds"," * @type {Number}"," */","Bulk.prototype.pollInterval = 1000;","","/**"," * Polling timeout in milliseconds"," * @type {Number}"," */","Bulk.prototype.pollTimeout = 10000;","","/** @private **/","Bulk.prototype._request = function(request, callback) {","  var conn = this._conn;","  request = _.clone(request);","  var baseUrl = [ conn.instanceUrl, \"services/async\", conn.version ].join('/');","  request.url = baseUrl + request.path;","  var options = { responseType: request.responseType };","  delete request.path;","  delete request.responseType;","  return new BulkApi(this._conn, options).request(request).thenCall(callback);","};","","/**"," * Create and start bulkload job and batch"," *"," * @param {String} type - SObject type"," * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')"," * @param {Object} [options] - Options for bulk loading operation"," * @param {String} [options.extIdField] - External ID field name (used when upsert operation)."," * @param {String} [options.concurrencyMode] - 'Serial' or 'Parallel'. Defaults to Parallel."," * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSV string, and CSV data input stream in insert/update/upsert/delete/hardDelete operation, SOQL string in query operation."," * @param {Callback.<Array.<RecordResult>|Array.<Bulk~BatchResultInfo>>} [callback] - Callback function"," * @returns {Bulk~Batch}"," */","Bulk.prototype.load = function(type, operation, options, input, callback) {","  var self = this;","  if (!type || !operation) {","    throw new Error(\"Insufficient arguments. At least, 'type' and 'operation' are required.\");","  }","  if (!_.isObject(options) || options.constructor !== Object) { // when options is not plain hash object, it is omitted","    callback = input;","    input = options;","    options = null;","  }","  var job = this.createJob(type, operation, options);","  job.once('error', function (error) {","    if (batch) {","      batch.emit('error', error); // pass job error to batch","    }","  });","  var batch = job.createBatch();","  var cleanup = function() {","    batch = null;","    job.close();","  };","  var cleanupOnError = function(err) {","    if (err.name !== 'PollingTimeout') {","      cleanup();","    }","  };","  batch.on('response', cleanup);","  batch.on('error', cleanupOnError);","  batch.on('queue', function() { batch.poll(self.pollInterval, self.pollTimeout); });","  return batch.execute(input, callback);","};","","/**"," * Execute bulk query and get record stream"," *"," * @param {String} soql - SOQL to execute in bulk job"," * @returns {RecordStream.Parsable} - Record stream, convertible to CSV data stream"," */","Bulk.prototype.query = function(soql) {","  var m = soql.replace(/\\([\\s\\S]+\\)/g, '').match(/FROM\\s+(\\w+)/i);","  if (!m) {","    throw new Error(\"No sobject type found in query, maybe caused by invalid SOQL.\");","  }","  var type = m[1];","  var self = this;","  var recordStream = new RecordStream.Parsable();","  var dataStream = recordStream.stream('csv');","  this.load(type, \"query\", soql).then(function(results) {","    var streams = results.map(function(result) {","      return self","        .job(result.jobId)","        .batch(result.batchId)","        .result(result.id)","        .stream();","    });","","    joinStreams(streams).pipe(dataStream);","  }).fail(function(err) {","    recordStream.emit('error', err);","  });","  return recordStream;","};","","","/**"," * Create a new job instance"," *"," * @param {String} type - SObject type"," * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', 'hardDelete', or 'query')"," * @param {Object} [options] - Options for bulk loading operation"," * @returns {Bulk~Job}"," */","Bulk.prototype.createJob = function(type, operation, options) {","  return new Job(this, type, operation, options);","};","","/**"," * Get a job instance specified by given job ID"," *"," * @param {String} jobId - Job ID"," * @returns {Bulk~Job}"," */","Bulk.prototype.job = function(jobId) {","  return new Job(this, null, null, null, jobId);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.bulk = new Bulk(conn);","});","","","module.exports = Bulk;",""],"l":{"9":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"47":1,"64":1,"65":0,"67":0,"68":0,"70":0,"80":1,"81":0,"82":0,"83":0,"86":0,"87":0,"88":0,"89":0,"107":0,"116":0,"117":0,"118":0,"119":0,"121":0,"122":0,"125":0,"134":1,"135":0,"136":0,"137":0,"138":0,"140":0,"150":1,"151":0,"152":0,"153":0,"154":0,"156":0,"166":1,"167":0,"168":0,"169":0,"171":0,"172":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"185":0,"195":1,"196":0,"207":1,"208":0,"209":0,"210":0,"212":0,"213":0,"219":0,"220":0,"221":0,"222":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"241":0,"242":0,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"260":0,"261":0,"268":1,"269":0,"270":0,"271":0,"273":0,"274":0,"280":0,"290":0,"291":0,"292":0,"294":0,"311":1,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"320":1,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"334":0,"335":0,"337":0,"338":0,"340":0,"345":0,"346":0,"347":0,"349":0,"350":0,"353":0,"354":0,"356":0,"357":0,"359":0,"360":0,"361":0,"362":0,"373":1,"374":0,"375":0,"376":0,"378":0,"386":0,"387":0,"389":0,"390":0,"391":0,"402":1,"403":0,"404":0,"405":0,"406":0,"407":0,"409":0,"410":0,"411":0,"419":1,"420":0,"431":1,"434":0,"436":0,"437":0,"438":0,"442":0,"443":0,"446":0,"447":0,"448":0,"449":0,"451":0,"453":0,"454":0,"456":0,"457":0,"460":0,"461":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"475":0,"486":1,"487":0,"496":1,"497":0,"498":0,"499":0,"500":0,"503":0,"504":0,"508":0,"526":1,"527":0,"528":0,"529":0,"530":0,"531":0,"533":0,"534":0,"536":0,"541":0,"542":0,"554":1,"555":0,"556":0,"557":0,"559":0,"560":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"573":0,"574":0,"575":0,"577":0,"578":0,"579":0,"581":0,"583":0,"584":0,"586":0,"587":0,"592":0,"609":1,"610":0,"611":0,"612":0,"613":0,"614":0,"616":0,"617":0,"620":0,"621":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"639":0,"640":0,"647":0,"648":0,"650":0,"651":0,"660":1,"661":0,"662":0,"663":0,"664":0,"666":0,"667":0,"668":0,"673":0,"680":1,"681":0,"684":1,"686":1,"687":0,"688":0,"691":1,"692":0,"696":1,"697":0,"700":1,"701":0,"715":1,"716":0,"717":0,"724":1,"730":1,"733":1,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"756":1,"757":0,"758":0,"759":0,"761":0,"762":0,"763":0,"764":0,"766":0,"767":0,"768":0,"769":0,"772":0,"773":0,"774":0,"775":0,"777":0,"778":0,"779":0,"782":0,"783":0,"784":0,"785":0,"794":1,"795":0,"796":0,"797":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"812":0,"814":0,"816":0,"828":1,"829":0,"838":1,"839":0,"847":1,"848":0,"852":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/chatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/chatter.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":31},"end":{"line":19,"column":46}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":29},"end":{"line":27,"column":56}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":34},"end":{"line":44,"column":48}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":28},"end":{"line":74,"column":55}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":29},"end":{"line":85,"column":56}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":26},"end":{"line":104,"column":55}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":22},"end":{"line":107,"column":40}}},"8":{"name":"(anonymous_8)","line":120,"loc":{"start":{"line":120,"column":35},"end":{"line":120,"column":49}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":27},"end":{"line":121,"column":47}}},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":14},"end":{"line":144,"column":40}}},"11":{"name":"(anonymous_11)","line":163,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":43}}},"12":{"name":"(anonymous_12)","line":181,"loc":{"start":{"line":181,"column":28},"end":{"line":181,"column":39}}},"13":{"name":"(anonymous_13)","line":191,"loc":{"start":{"line":191,"column":27},"end":{"line":191,"column":38}}},"14":{"name":"(anonymous_14)","line":203,"loc":{"start":{"line":203,"column":25},"end":{"line":203,"column":55}}},"15":{"name":"(anonymous_15)","line":213,"loc":{"start":{"line":213,"column":29},"end":{"line":213,"column":48}}},"16":{"name":"(anonymous_16)","line":229,"loc":{"start":{"line":229,"column":15},"end":{"line":229,"column":51}}},"17":{"name":"(anonymous_17)","line":231,"loc":{"start":{"line":231,"column":45},"end":{"line":231,"column":60}}},"18":{"name":"(anonymous_18)","line":250,"loc":{"start":{"line":250,"column":28},"end":{"line":250,"column":53}}},"19":{"name":"(anonymous_19)","line":265,"loc":{"start":{"line":265,"column":30},"end":{"line":265,"column":49}}},"20":{"name":"(anonymous_20)","line":277,"loc":{"start":{"line":277,"column":28},"end":{"line":277,"column":53}}},"21":{"name":"(anonymous_21)","line":300,"loc":{"start":{"line":300,"column":31},"end":{"line":300,"column":50}}},"22":{"name":"(anonymous_22)","line":312,"loc":{"start":{"line":312,"column":29},"end":{"line":312,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":11,"column":36}},"2":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"4":{"start":{"line":27,"column":0},"end":{"line":38,"column":2}},"5":{"start":{"line":28,"column":2},"end":{"line":35,"column":3}},"6":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"7":{"start":{"line":30,"column":6},"end":{"line":32,"column":8}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":48}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":46}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":46}},"11":{"start":{"line":44,"column":0},"end":{"line":54,"column":2}},"12":{"start":{"line":45,"column":2},"end":{"line":53,"column":3}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":57}},"14":{"start":{"line":47,"column":9},"end":{"line":53,"column":3}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":34}},"16":{"start":{"line":49,"column":9},"end":{"line":53,"column":3}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":70}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":15}},"19":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"20":{"start":{"line":75,"column":2},"end":{"line":75,"column":54}},"21":{"start":{"line":85,"column":0},"end":{"line":87,"column":2}},"22":{"start":{"line":86,"column":2},"end":{"line":86,"column":46}},"23":{"start":{"line":104,"column":0},"end":{"line":131,"column":2}},"24":{"start":{"line":105,"column":2},"end":{"line":105,"column":18}},"25":{"start":{"line":106,"column":2},"end":{"line":106,"column":46}},"26":{"start":{"line":107,"column":2},"end":{"line":112,"column":5}},"27":{"start":{"line":108,"column":4},"end":{"line":108,"column":35}},"28":{"start":{"line":109,"column":4},"end":{"line":109,"column":40}},"29":{"start":{"line":110,"column":4},"end":{"line":110,"column":46}},"30":{"start":{"line":111,"column":4},"end":{"line":111,"column":34}},"31":{"start":{"line":113,"column":2},"end":{"line":119,"column":4}},"32":{"start":{"line":120,"column":2},"end":{"line":130,"column":24}},"33":{"start":{"line":121,"column":4},"end":{"line":128,"column":7}},"34":{"start":{"line":122,"column":6},"end":{"line":122,"column":39}},"35":{"start":{"line":123,"column":6},"end":{"line":127,"column":7}},"36":{"start":{"line":124,"column":8},"end":{"line":124,"column":39}},"37":{"start":{"line":126,"column":8},"end":{"line":126,"column":40}},"38":{"start":{"line":129,"column":4},"end":{"line":129,"column":15}},"39":{"start":{"line":144,"column":0},"end":{"line":148,"column":2}},"40":{"start":{"line":145,"column":2},"end":{"line":145,"column":26}},"41":{"start":{"line":146,"column":2},"end":{"line":146,"column":24}},"42":{"start":{"line":147,"column":2},"end":{"line":147,"column":23}},"43":{"start":{"line":163,"column":0},"end":{"line":173,"column":2}},"44":{"start":{"line":164,"column":2},"end":{"line":164,"column":28}},"45":{"start":{"line":165,"column":2},"end":{"line":168,"column":4}},"46":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"47":{"start":{"line":170,"column":4},"end":{"line":170,"column":46}},"48":{"start":{"line":172,"column":2},"end":{"line":172,"column":21}},"49":{"start":{"line":181,"column":0},"end":{"line":183,"column":2}},"50":{"start":{"line":182,"column":2},"end":{"line":182,"column":63}},"51":{"start":{"line":191,"column":0},"end":{"line":193,"column":2}},"52":{"start":{"line":192,"column":2},"end":{"line":192,"column":55}},"53":{"start":{"line":203,"column":0},"end":{"line":205,"column":2}},"54":{"start":{"line":204,"column":2},"end":{"line":204,"column":50}},"55":{"start":{"line":213,"column":0},"end":{"line":215,"column":2}},"56":{"start":{"line":214,"column":2},"end":{"line":214,"column":75}},"57":{"start":{"line":229,"column":0},"end":{"line":238,"column":2}},"58":{"start":{"line":230,"column":2},"end":{"line":235,"column":3}},"59":{"start":{"line":231,"column":4},"end":{"line":233,"column":17}},"60":{"start":{"line":232,"column":6},"end":{"line":232,"column":64}},"61":{"start":{"line":234,"column":4},"end":{"line":234,"column":56}},"62":{"start":{"line":236,"column":2},"end":{"line":236,"column":67}},"63":{"start":{"line":237,"column":2},"end":{"line":237,"column":18}},"64":{"start":{"line":240,"column":0},"end":{"line":240,"column":28}},"65":{"start":{"line":250,"column":0},"end":{"line":256,"column":2}},"66":{"start":{"line":251,"column":2},"end":{"line":255,"column":24}},"67":{"start":{"line":265,"column":0},"end":{"line":267,"column":2}},"68":{"start":{"line":266,"column":2},"end":{"line":266,"column":33}},"69":{"start":{"line":277,"column":0},"end":{"line":283,"column":2}},"70":{"start":{"line":278,"column":2},"end":{"line":282,"column":24}},"71":{"start":{"line":299,"column":0},"end":{"line":305,"column":2}},"72":{"start":{"line":301,"column":2},"end":{"line":304,"column":24}},"73":{"start":{"line":312,"column":0},"end":{"line":314,"column":3}},"74":{"start":{"line":313,"column":2},"end":{"line":313,"column":35}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":36}},{"start":{"line":45,"column":40},"end":{"line":45,"column":70}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":47,"column":9}},{"start":{"line":47,"column":9},"end":{"line":47,"column":9}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":9},"end":{"line":49,"column":9}},{"start":{"line":49,"column":9},"end":{"line":49,"column":9}}]},"7":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":44}},{"start":{"line":49,"column":48},"end":{"line":49,"column":62}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"9":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"10":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":9},"end":{"line":182,"column":22}},{"start":{"line":182,"column":26},"end":{"line":182,"column":62}}]},"11":{"line":214,"type":"cond-expr","locations":[{"start":{"line":214,"column":34},"end":{"line":214,"column":67}},{"start":{"line":214,"column":70},"end":{"line":214,"column":74}}]},"12":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"13":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":35},"end":{"line":234,"column":38}},{"start":{"line":234,"column":41},"end":{"line":234,"column":44}}]}},"code":["/**"," * @file Manages Salesforce Chatter REST API calls"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var inherits = require('inherits'),","    _       = require('lodash/core'),","    jsforce = require('../core'),","    Promise = require('../promise');","","/**"," * API class for Chatter REST API call"," *"," * @class"," * @param {Connection} conn Connection"," */","var Chatter = module.exports = function(conn) {","  this._conn = conn;","};","","/**"," * Sending request to API endpoint"," * @private"," */","Chatter.prototype._request = function(params, callback) {","  if (/^(put|post|patch)$/i.test(params.method)) {","    if (_.isObject(params.body)) {","      params.headers = {","        \"Content-Type\": \"application/json\"","      };","      params.body = JSON.stringify(params.body);","    }","  }","  params.url = this._normalizeUrl(params.url);","  return this._conn.request(params, callback);","};","","/**"," * Convert path to site root relative url"," * @private"," */","Chatter.prototype._normalizeUrl = function(url) {","  if (url.indexOf('/chatter/') === 0 || url.indexOf('/connect/') === 0) {","    return '/services/data/v' + this._conn.version + url;","  } else if (/^\\/v[\\d]+\\.[\\d]+\\//.test(url)) {","    return '/services/data' + url;","  } else if (url.indexOf('/services/') !== 0 && url[0] === '/') {","    return '/services/data/v' + this._conn.version + '/chatter' + url;","  } else {","    return url;","  }","};","","/**"," * @typedef {Object} Chatter~RequestParams"," * @prop {String} method - HTTP method"," * @prop {String} url - Resource URL"," * @prop {String} [body] - HTTP body (in POST/PUT/PATCH methods)"," */","","/**"," * @typedef {Object} Chatter~RequestResult"," */","","/**"," * Make a request for chatter API resource"," *"," * @param {Chatter~RequestParams} params - Paramters representing HTTP request"," * @param {Callback.<Chatter~RequestResult>} [callback] - Callback func"," * @returns {Chatter~Request}"," */","Chatter.prototype.request = function(params, callback) {","  return new Request(this, params).thenCall(callback);","};","","/**"," * Make a resource request to chatter API"," *"," * @param {String} url - Resource URL"," * @param {Object} [queryParams] - Query parameters (in hash object)"," * @returns {Chatter~Resource}"," */","Chatter.prototype.resource = function(url, queryParams) {","  return new Resource(this, url, queryParams);","};","","/**"," * @typedef {Object} Chatter~BatchRequestResult"," * @prop {Boolean} hasError - Flag if the batch has one or more errors"," * @prop {Array.<Object>} results - Batch request results in array"," * @prop {Number} results.statusCode - HTTP response status code"," * @prop {Chatter~RequestResult} results.result - Parsed HTTP response body"," */","","/**"," * Make a batch request to chatter API"," *"," * @params {Array.<Chatter~Request>} requests - Chatter API requests"," * @param {Callback.<Chatter~BatchRequestResult>} [callback] - Callback func"," * @returns {Promise.<Chatter~BatchRequestResult>}"," */","Chatter.prototype.batch = function(requests, callback) {","  var self = this;","  var batchRequests = [], batchDeferreds = [];","  _.forEach(requests, function(request) {","    var deferred = Promise.defer();","    request._promise = deferred.promise;","    batchRequests.push(request.batchParams());","    batchDeferreds.push(deferred);","  });","  var params = {","    method: 'POST',","    url: this._normalizeUrl('/connect/batch'),","    body: {","      batchRequests: batchRequests","    }","  };","  return this.request(params).then(function(res) {","    _.forEach(res.results, function(result, i) {","      var deferred = batchDeferreds[i];","      if (result.statusCode >= 400) {","        deferred.reject(result.result);","      } else {","        deferred.resolve(result.result);","      }","    });","    return res;","  }).thenCall(callback);","};","","","/*--------------------------------------------*/","/**"," * A class representing chatter API request"," *"," * @protected"," * @class Chatter~Request"," * @implements {Promise.<Chatter~RequestResult>}"," * @param {Chatter} chatter - Chatter API object"," * @param {Chatter~RequestParams} params - Paramters representing HTTP request"," */","var Request = function(chatter, params) {","  this._chatter = chatter;","  this._params = params;","  this._promise = null;","};","","/**"," * @typedef {Object} Chatter~BatchRequestParams"," * @prop {String} method - HTTP method"," * @prop {String} url - Resource URL"," * @prop {String} [richInput] - HTTP body (in POST/PUT/PATCH methods)"," */","","/**"," * Retrieve parameters in batch request form"," *"," * @method Chatter~Request#batchParams"," * @returns {Chatter~BatchRequestParams}"," */","Request.prototype.batchParams = function() {","  var params = this._params;","  var batchParams = {","    method: params.method,","    url: this._chatter._normalizeUrl(params.url)","  };","  if (this._params.body) {","    batchParams.richInput = this._params.body;","  }","  return batchParams;","};","","/**"," * Retrieve parameters in batch request form"," *"," * @method Chatter~Request#promise"," * @returns {Promise.<Chatter~RequestResult>}"," */","Request.prototype.promise = function() {","  return this._promise || this._chatter._request(this._params);","};","","/**"," * Returns Node.js Stream object for request"," *"," * @method Chatter~Request#stream"," * @returns {stream.Stream}"," */","Request.prototype.stream = function() {","  return this._chatter._request(this._params).stream();","};","","/**"," * Promise/A+ interface"," * http://promises-aplus.github.io/promises-spec/"," *"," * Delegate to deferred promise, return promise instance for batch result"," *"," * @method Chatter~Request#then"," */","Request.prototype.then = function(onResolve, onReject) {","  return this.promise().then(onResolve, onReject);","};","","/**"," * Promise/A+ extension"," * Call \"then\" using given node-style callback function"," *"," * @method Chatter~Request#thenCall"," */","Request.prototype.thenCall = function(callback) {","  return _.isFunction(callback) ? this.promise().thenCall(callback) : this;","};","","","/*--------------------------------------------*/","/**"," * A class representing chatter API resource"," *"," * @protected"," * @class Chatter~Resource"," * @extends Chatter~Request"," * @param {Chatter} chatter - Chatter API object"," * @param {String} url - Resource URL"," * @param {Object} [queryParams] - Query parameters (in hash object)"," */","var Resource = function(chatter, url, queryParams) {","  if (queryParams) {","    var qstring = _.map(_.keys(queryParams), function(name) {","      return name + \"=\" + encodeURIComponent(queryParams[name]);","    }).join('&');","    url += (url.indexOf('?') > 0 ? '&' : '?') + qstring;","  }","  Resource.super_.call(this, chatter, { method: 'GET', url: url });","  this._url = url;","};","","inherits(Resource, Request);","","/**"," * Create a new resource"," *"," * @method Chatter~Resource#create"," * @param {Object} data - Data to newly post"," * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function"," * @returns {Chatter~Request}"," */","Resource.prototype.create = function(data, callback) {","  return this._chatter.request({","    method: 'POST',","    url: this._url,","    body: data","  }).thenCall(callback);","};","","/**"," * Retrieve resource content"," *"," * @method Chatter~Resource#retrieve"," * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function"," * @returns {Chatter~Request}"," */","Resource.prototype.retrieve = function(callback) {","  return this.thenCall(callback);","};","","/**"," * Update specified resource"," *"," * @method Chatter~Resource#update"," * @param {Obejct} data - Data to update"," * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function"," * @returns {Chatter~Request}"," */","Resource.prototype.update = function(data, callback) {","  return this._chatter.request({","    method: 'POST',","    url: this._url,","    body: data","  }).thenCall(callback);","};","","/**"," * Synonym of Resource#delete()"," *"," * @method Chatter~Resource#del"," * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function"," * @returns {Chatter~Request}"," */","/**"," * Delete specified resource"," *"," * @method Chatter~Resource#delete"," * @param {Callback.<Chatter~RequestResult>} [callback] - Callback function"," * @returns {Chatter~Request}"," */","Resource.prototype.del =","Resource.prototype[\"delete\"] = function(callback) {","  return this._chatter.request({","    method: 'DELETE',","    url: this._url","  }).thenCall(callback);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.chatter = new Chatter(conn);","});",""],"l":{"8":1,"19":1,"20":0,"27":1,"28":0,"29":0,"30":0,"33":0,"36":0,"37":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"74":1,"75":0,"85":1,"86":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"113":0,"120":0,"121":0,"122":0,"123":0,"124":0,"126":0,"129":0,"144":1,"145":0,"146":0,"147":0,"163":1,"164":0,"165":0,"169":0,"170":0,"172":0,"181":1,"182":0,"191":1,"192":0,"203":1,"204":0,"213":1,"214":0,"229":1,"230":0,"231":0,"232":0,"234":0,"236":0,"237":0,"240":1,"250":1,"251":0,"265":1,"266":0,"277":1,"278":0,"299":1,"301":0,"312":1,"313":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/metadata.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/metadata.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":1,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":1,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":1,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":1,"225":1,"226":0,"227":0,"228":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":1,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":1,"254":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":32},"end":{"line":24,"column":47}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":65}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":51},"end":{"line":52,"column":65}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":33},"end":{"line":71,"column":68}}},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":29}}},"6":{"name":"convertToSaveResult","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":37}}},"7":{"name":"convertToUpsertResult","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":39}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":28},"end":{"line":135,"column":63}}},"9":{"name":"(anonymous_9)","line":136,"loc":{"start":{"line":136,"column":16},"end":{"line":136,"column":29}}},"10":{"name":"(anonymous_10)","line":142,"loc":{"start":{"line":142,"column":69},"end":{"line":142,"column":87}}},"11":{"name":"convertToMetadataInfo","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":36}}},"12":{"name":"(anonymous_12)","line":175,"loc":{"start":{"line":175,"column":26},"end":{"line":175,"column":62}}},"13":{"name":"(anonymous_13)","line":176,"loc":{"start":{"line":176,"column":81},"end":{"line":176,"column":95}}},"14":{"name":"(anonymous_14)","line":195,"loc":{"start":{"line":195,"column":33},"end":{"line":195,"column":74}}},"15":{"name":"(anonymous_15)","line":199,"loc":{"start":{"line":199,"column":16},"end":{"line":199,"column":30}}},"16":{"name":"(anonymous_16)","line":228,"loc":{"start":{"line":228,"column":28},"end":{"line":228,"column":63}}},"17":{"name":"(anonymous_17)","line":229,"loc":{"start":{"line":229,"column":16},"end":{"line":229,"column":29}}},"18":{"name":"(anonymous_18)","line":235,"loc":{"start":{"line":235,"column":69},"end":{"line":235,"column":87}}},"19":{"name":"(anonymous_19)","line":259,"loc":{"start":{"line":259,"column":28},"end":{"line":259,"column":63}}},"20":{"name":"(anonymous_20)","line":260,"loc":{"start":{"line":260,"column":16},"end":{"line":260,"column":29}}},"21":{"name":"(anonymous_21)","line":266,"loc":{"start":{"line":266,"column":69},"end":{"line":266,"column":87}}},"22":{"name":"(anonymous_22)","line":279,"loc":{"start":{"line":279,"column":33},"end":{"line":279,"column":68}}},"23":{"name":"(anonymous_23)","line":283,"loc":{"start":{"line":283,"column":16},"end":{"line":283,"column":29}}},"24":{"name":"(anonymous_24)","line":327,"loc":{"start":{"line":327,"column":31},"end":{"line":327,"column":67}}},"25":{"name":"(anonymous_25)","line":328,"loc":{"start":{"line":328,"column":83},"end":{"line":328,"column":101}}},"26":{"name":"(anonymous_26)","line":342,"loc":{"start":{"line":342,"column":28},"end":{"line":342,"column":79}}},"27":{"name":"(anonymous_27)","line":343,"loc":{"start":{"line":343,"column":113},"end":{"line":343,"column":130}}},"28":{"name":"(anonymous_28)","line":355,"loc":{"start":{"line":355,"column":33},"end":{"line":355,"column":57}}},"29":{"name":"(anonymous_29)","line":384,"loc":{"start":{"line":384,"column":30},"end":{"line":384,"column":58}}},"30":{"name":"(anonymous_30)","line":389,"loc":{"start":{"line":389,"column":73},"end":{"line":389,"column":87}}},"31":{"name":"(anonymous_31)","line":391,"loc":{"start":{"line":391,"column":53},"end":{"line":391,"column":66}}},"32":{"name":"(anonymous_32)","line":435,"loc":{"start":{"line":435,"column":26},"end":{"line":435,"column":63}}},"33":{"name":"(anonymous_33)","line":457,"loc":{"start":{"line":457,"column":30},"end":{"line":457,"column":58}}},"34":{"name":"(anonymous_34)","line":469,"loc":{"start":{"line":469,"column":41},"end":{"line":469,"column":64}}},"35":{"name":"(anonymous_35)","line":491,"loc":{"start":{"line":491,"column":28},"end":{"line":491,"column":66}}},"36":{"name":"(anonymous_36)","line":499,"loc":{"start":{"line":499,"column":24},"end":{"line":499,"column":36}}},"37":{"name":"(anonymous_37)","line":502,"loc":{"start":{"line":502,"column":23},"end":{"line":502,"column":34}}},"38":{"name":"(anonymous_38)","line":515,"loc":{"start":{"line":515,"column":34},"end":{"line":515,"column":58}}},"39":{"name":"(anonymous_39)","line":532,"loc":{"start":{"line":532,"column":39},"end":{"line":532,"column":78}}},"40":{"name":"(anonymous_40)","line":542,"loc":{"start":{"line":542,"column":10},"end":{"line":542,"column":24}}},"41":{"name":"(anonymous_41)","line":586,"loc":{"start":{"line":586,"column":25},"end":{"line":586,"column":58}}},"42":{"name":"(anonymous_42)","line":602,"loc":{"start":{"line":602,"column":36},"end":{"line":602,"column":66}}},"43":{"name":"(anonymous_43)","line":604,"loc":{"start":{"line":604,"column":28},"end":{"line":604,"column":46}}},"44":{"name":"(anonymous_44)","line":605,"loc":{"start":{"line":605,"column":22},"end":{"line":605,"column":36}}},"45":{"name":"(anonymous_45)","line":626,"loc":{"start":{"line":626,"column":40},"end":{"line":626,"column":59}}},"46":{"name":"(anonymous_46)","line":627,"loc":{"start":{"line":627,"column":44},"end":{"line":627,"column":58}}},"47":{"name":"(anonymous_47)","line":628,"loc":{"start":{"line":628,"column":21},"end":{"line":628,"column":32}}},"48":{"name":"(anonymous_48)","line":631,"loc":{"start":{"line":631,"column":5},"end":{"line":631,"column":19}}},"49":{"name":"(anonymous_49)","line":632,"loc":{"start":{"line":632,"column":21},"end":{"line":632,"column":32}}},"50":{"name":"(anonymous_50)","line":645,"loc":{"start":{"line":645,"column":37},"end":{"line":645,"column":56}}},"51":{"name":"(anonymous_51)","line":648,"loc":{"start":{"line":648,"column":19},"end":{"line":648,"column":37}}},"52":{"name":"(anonymous_52)","line":649,"loc":{"start":{"line":649,"column":50},"end":{"line":649,"column":63}}},"53":{"name":"(anonymous_53)","line":662,"loc":{"start":{"line":662,"column":36},"end":{"line":662,"column":64}}},"54":{"name":"(anonymous_54)","line":665,"loc":{"start":{"line":665,"column":13},"end":{"line":665,"column":24}}},"55":{"name":"(anonymous_55)","line":675,"loc":{"start":{"line":675,"column":22},"end":{"line":675,"column":40}}},"56":{"name":"(anonymous_56)","line":690,"loc":{"start":{"line":690,"column":7},"end":{"line":690,"column":21}}},"57":{"name":"(anonymous_57)","line":704,"loc":{"start":{"line":704,"column":40},"end":{"line":704,"column":59}}},"58":{"name":"(anonymous_58)","line":706,"loc":{"start":{"line":706,"column":22},"end":{"line":706,"column":40}}},"59":{"name":"(anonymous_59)","line":709,"loc":{"start":{"line":709,"column":19},"end":{"line":709,"column":33}}},"60":{"name":"(anonymous_60)","line":727,"loc":{"start":{"line":727,"column":28},"end":{"line":727,"column":51}}},"61":{"name":"(anonymous_61)","line":749,"loc":{"start":{"line":749,"column":43},"end":{"line":749,"column":62}}},"62":{"name":"(anonymous_62)","line":751,"loc":{"start":{"line":751,"column":73},"end":{"line":751,"column":90}}},"63":{"name":"(anonymous_63)","line":762,"loc":{"start":{"line":762,"column":41},"end":{"line":762,"column":52}}},"64":{"name":"(anonymous_64)","line":766,"loc":{"start":{"line":766,"column":23},"end":{"line":766,"column":34}}},"65":{"name":"(anonymous_65)","line":769,"loc":{"start":{"line":769,"column":18},"end":{"line":769,"column":40}}},"66":{"name":"(anonymous_66)","line":791,"loc":{"start":{"line":791,"column":26},"end":{"line":791,"column":49}}},"67":{"name":"(anonymous_67)","line":829,"loc":{"start":{"line":829,"column":41},"end":{"line":829,"column":76}}},"68":{"name":"(anonymous_68)","line":835,"loc":{"start":{"line":835,"column":71},"end":{"line":835,"column":88}}},"69":{"name":"(anonymous_69)","line":845,"loc":{"start":{"line":845,"column":29},"end":{"line":845,"column":44}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":15,"column":33}},"2":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},"4":{"start":{"line":33,"column":0},"end":{"line":33,"column":39}},"5":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}},"6":{"start":{"line":47,"column":0},"end":{"line":55,"column":2}},"7":{"start":{"line":48,"column":2},"end":{"line":51,"column":5}},"8":{"start":{"line":52,"column":2},"end":{"line":54,"column":24}},"9":{"start":{"line":53,"column":4},"end":{"line":53,"column":22}},"10":{"start":{"line":71,"column":0},"end":{"line":83,"column":2}},"11":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"12":{"start":{"line":73,"column":4},"end":{"line":73,"column":89}},"13":{"start":{"line":75,"column":2},"end":{"line":78,"column":4}},"14":{"start":{"line":76,"column":4},"end":{"line":76,"column":27}},"15":{"start":{"line":77,"column":4},"end":{"line":77,"column":14}},"16":{"start":{"line":79,"column":2},"end":{"line":79,"column":36}},"17":{"start":{"line":80,"column":2},"end":{"line":80,"column":68}},"18":{"start":{"line":81,"column":2},"end":{"line":81,"column":59}},"19":{"start":{"line":82,"column":2},"end":{"line":82,"column":71}},"20":{"start":{"line":94,"column":0},"end":{"line":98,"column":1}},"21":{"start":{"line":95,"column":2},"end":{"line":95,"column":35}},"22":{"start":{"line":96,"column":2},"end":{"line":96,"column":53}},"23":{"start":{"line":97,"column":2},"end":{"line":97,"column":20}},"24":{"start":{"line":110,"column":0},"end":{"line":114,"column":1}},"25":{"start":{"line":111,"column":2},"end":{"line":111,"column":49}},"26":{"start":{"line":112,"column":2},"end":{"line":112,"column":57}},"27":{"start":{"line":113,"column":2},"end":{"line":113,"column":22}},"28":{"start":{"line":134,"column":0},"end":{"line":145,"column":2}},"29":{"start":{"line":136,"column":2},"end":{"line":139,"column":4}},"30":{"start":{"line":137,"column":4},"end":{"line":137,"column":27}},"31":{"start":{"line":138,"column":4},"end":{"line":138,"column":14}},"32":{"start":{"line":140,"column":2},"end":{"line":140,"column":36}},"33":{"start":{"line":141,"column":2},"end":{"line":141,"column":68}},"34":{"start":{"line":142,"column":2},"end":{"line":144,"column":24}},"35":{"start":{"line":143,"column":4},"end":{"line":143,"column":99}},"36":{"start":{"line":150,"column":0},"end":{"line":154,"column":1}},"37":{"start":{"line":151,"column":2},"end":{"line":151,"column":34}},"38":{"start":{"line":152,"column":2},"end":{"line":152,"column":24}},"39":{"start":{"line":153,"column":2},"end":{"line":153,"column":22}},"40":{"start":{"line":174,"column":0},"end":{"line":179,"column":2}},"41":{"start":{"line":176,"column":2},"end":{"line":178,"column":24}},"42":{"start":{"line":177,"column":4},"end":{"line":177,"column":115}},"43":{"start":{"line":195,"column":0},"end":{"line":207,"column":2}},"44":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"45":{"start":{"line":197,"column":4},"end":{"line":197,"column":89}},"46":{"start":{"line":199,"column":2},"end":{"line":202,"column":4}},"47":{"start":{"line":200,"column":4},"end":{"line":200,"column":37}},"48":{"start":{"line":201,"column":4},"end":{"line":201,"column":15}},"49":{"start":{"line":203,"column":2},"end":{"line":203,"column":42}},"50":{"start":{"line":204,"column":2},"end":{"line":204,"column":86}},"51":{"start":{"line":205,"column":2},"end":{"line":205,"column":71}},"52":{"start":{"line":206,"column":2},"end":{"line":206,"column":71}},"53":{"start":{"line":227,"column":0},"end":{"line":238,"column":2}},"54":{"start":{"line":229,"column":2},"end":{"line":232,"column":4}},"55":{"start":{"line":230,"column":4},"end":{"line":230,"column":27}},"56":{"start":{"line":231,"column":4},"end":{"line":231,"column":14}},"57":{"start":{"line":233,"column":2},"end":{"line":233,"column":36}},"58":{"start":{"line":234,"column":2},"end":{"line":234,"column":68}},"59":{"start":{"line":235,"column":2},"end":{"line":237,"column":24}},"60":{"start":{"line":236,"column":4},"end":{"line":236,"column":99}},"61":{"start":{"line":258,"column":0},"end":{"line":269,"column":2}},"62":{"start":{"line":260,"column":2},"end":{"line":263,"column":4}},"63":{"start":{"line":261,"column":4},"end":{"line":261,"column":27}},"64":{"start":{"line":262,"column":4},"end":{"line":262,"column":14}},"65":{"start":{"line":264,"column":2},"end":{"line":264,"column":36}},"66":{"start":{"line":265,"column":2},"end":{"line":265,"column":68}},"67":{"start":{"line":266,"column":2},"end":{"line":268,"column":24}},"68":{"start":{"line":267,"column":4},"end":{"line":267,"column":103}},"69":{"start":{"line":279,"column":0},"end":{"line":294,"column":2}},"70":{"start":{"line":280,"column":2},"end":{"line":282,"column":3}},"71":{"start":{"line":281,"column":4},"end":{"line":281,"column":89}},"72":{"start":{"line":283,"column":2},"end":{"line":289,"column":4}},"73":{"start":{"line":284,"column":4},"end":{"line":286,"column":5}},"74":{"start":{"line":285,"column":6},"end":{"line":285,"column":29}},"75":{"start":{"line":287,"column":4},"end":{"line":287,"column":27}},"76":{"start":{"line":288,"column":4},"end":{"line":288,"column":14}},"77":{"start":{"line":290,"column":2},"end":{"line":290,"column":36}},"78":{"start":{"line":291,"column":2},"end":{"line":291,"column":68}},"79":{"start":{"line":292,"column":2},"end":{"line":292,"column":59}},"80":{"start":{"line":293,"column":2},"end":{"line":293,"column":71}},"81":{"start":{"line":325,"column":0},"end":{"line":331,"column":2}},"82":{"start":{"line":328,"column":2},"end":{"line":330,"column":24}},"83":{"start":{"line":329,"column":4},"end":{"line":329,"column":99}},"84":{"start":{"line":342,"column":0},"end":{"line":346,"column":2}},"85":{"start":{"line":343,"column":2},"end":{"line":345,"column":24}},"86":{"start":{"line":344,"column":4},"end":{"line":344,"column":39}},"87":{"start":{"line":355,"column":0},"end":{"line":359,"column":2}},"88":{"start":{"line":356,"column":2},"end":{"line":356,"column":31}},"89":{"start":{"line":357,"column":2},"end":{"line":357,"column":65}},"90":{"start":{"line":358,"column":2},"end":{"line":358,"column":71}},"91":{"start":{"line":384,"column":0},"end":{"line":403,"column":2}},"92":{"start":{"line":385,"column":2},"end":{"line":388,"column":3}},"93":{"start":{"line":386,"column":4},"end":{"line":386,"column":23}},"94":{"start":{"line":387,"column":4},"end":{"line":387,"column":33}},"95":{"start":{"line":389,"column":2},"end":{"line":402,"column":24}},"96":{"start":{"line":390,"column":4},"end":{"line":390,"column":105}},"97":{"start":{"line":391,"column":4},"end":{"line":398,"column":7}},"98":{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},"99":{"start":{"line":393,"column":8},"end":{"line":393,"column":96}},"100":{"start":{"line":395,"column":6},"end":{"line":395,"column":43}},"101":{"start":{"line":396,"column":6},"end":{"line":396,"column":43}},"102":{"start":{"line":397,"column":6},"end":{"line":397,"column":16}},"103":{"start":{"line":399,"column":4},"end":{"line":399,"column":63}},"104":{"start":{"line":400,"column":4},"end":{"line":400,"column":51}},"105":{"start":{"line":401,"column":4},"end":{"line":401,"column":15}},"106":{"start":{"line":435,"column":0},"end":{"line":444,"column":2}},"107":{"start":{"line":436,"column":2},"end":{"line":439,"column":3}},"108":{"start":{"line":437,"column":4},"end":{"line":437,"column":23}},"109":{"start":{"line":438,"column":4},"end":{"line":438,"column":33}},"110":{"start":{"line":440,"column":2},"end":{"line":442,"column":3}},"111":{"start":{"line":441,"column":4},"end":{"line":441,"column":26}},"112":{"start":{"line":443,"column":2},"end":{"line":443,"column":92}},"113":{"start":{"line":457,"column":0},"end":{"line":460,"column":2}},"114":{"start":{"line":458,"column":2},"end":{"line":458,"column":59}},"115":{"start":{"line":459,"column":2},"end":{"line":459,"column":65}},"116":{"start":{"line":469,"column":0},"end":{"line":471,"column":2}},"117":{"start":{"line":470,"column":2},"end":{"line":470,"column":79}},"118":{"start":{"line":491,"column":0},"end":{"line":522,"column":2}},"119":{"start":{"line":492,"column":2},"end":{"line":495,"column":3}},"120":{"start":{"line":493,"column":4},"end":{"line":493,"column":23}},"121":{"start":{"line":494,"column":4},"end":{"line":494,"column":17}},"122":{"start":{"line":496,"column":2},"end":{"line":496,"column":33}},"123":{"start":{"line":497,"column":2},"end":{"line":512,"column":3}},"124":{"start":{"line":498,"column":4},"end":{"line":498,"column":18}},"125":{"start":{"line":499,"column":4},"end":{"line":501,"column":7}},"126":{"start":{"line":500,"column":6},"end":{"line":500,"column":19}},"127":{"start":{"line":502,"column":4},"end":{"line":504,"column":7}},"128":{"start":{"line":503,"column":6},"end":{"line":503,"column":63}},"129":{"start":{"line":506,"column":9},"end":{"line":512,"column":3}},"130":{"start":{"line":507,"column":4},"end":{"line":507,"column":50}},"131":{"start":{"line":508,"column":9},"end":{"line":512,"column":3}},"132":{"start":{"line":509,"column":4},"end":{"line":509,"column":31}},"133":{"start":{"line":511,"column":4},"end":{"line":511,"column":37}},"134":{"start":{"line":514,"column":2},"end":{"line":514,"column":18}},"135":{"start":{"line":515,"column":2},"end":{"line":520,"column":5}},"136":{"start":{"line":516,"column":4},"end":{"line":519,"column":17}},"137":{"start":{"line":521,"column":2},"end":{"line":521,"column":63}},"138":{"start":{"line":532,"column":0},"end":{"line":561,"column":2}},"139":{"start":{"line":533,"column":2},"end":{"line":538,"column":3}},"140":{"start":{"line":534,"column":4},"end":{"line":534,"column":38}},"141":{"start":{"line":536,"column":4},"end":{"line":536,"column":30}},"142":{"start":{"line":537,"column":4},"end":{"line":537,"column":27}},"143":{"start":{"line":539,"column":2},"end":{"line":560,"column":24}},"144":{"start":{"line":543,"column":4},"end":{"line":543,"column":35}},"145":{"start":{"line":544,"column":4},"end":{"line":544,"column":41}},"146":{"start":{"line":545,"column":4},"end":{"line":545,"column":45}},"147":{"start":{"line":546,"column":4},"end":{"line":548,"column":5}},"148":{"start":{"line":547,"column":6},"end":{"line":547,"column":57}},"149":{"start":{"line":549,"column":4},"end":{"line":551,"column":5}},"150":{"start":{"line":550,"column":6},"end":{"line":550,"column":59}},"151":{"start":{"line":552,"column":4},"end":{"line":552,"column":66}},"152":{"start":{"line":553,"column":4},"end":{"line":553,"column":72}},"153":{"start":{"line":554,"column":4},"end":{"line":554,"column":66}},"154":{"start":{"line":555,"column":4},"end":{"line":555,"column":56}},"155":{"start":{"line":556,"column":4},"end":{"line":556,"column":64}},"156":{"start":{"line":557,"column":4},"end":{"line":557,"column":56}},"157":{"start":{"line":559,"column":4},"end":{"line":559,"column":15}},"158":{"start":{"line":586,"column":0},"end":{"line":590,"column":2}},"159":{"start":{"line":587,"column":2},"end":{"line":587,"column":20}},"160":{"start":{"line":588,"column":2},"end":{"line":588,"column":26}},"161":{"start":{"line":589,"column":2},"end":{"line":589,"column":26}},"162":{"start":{"line":592,"column":0},"end":{"line":592,"column":50}},"163":{"start":{"line":602,"column":0},"end":{"line":618,"column":2}},"164":{"start":{"line":603,"column":2},"end":{"line":603,"column":18}},"165":{"start":{"line":604,"column":2},"end":{"line":617,"column":15}},"166":{"start":{"line":605,"column":4},"end":{"line":611,"column":6}},"167":{"start":{"line":606,"column":6},"end":{"line":608,"column":7}},"168":{"start":{"line":607,"column":8},"end":{"line":607,"column":20}},"169":{"start":{"line":609,"column":6},"end":{"line":609,"column":37}},"170":{"start":{"line":610,"column":6},"end":{"line":610,"column":17}},"171":{"start":{"line":612,"column":4},"end":{"line":612,"column":86}},"172":{"start":{"line":613,"column":4},"end":{"line":615,"column":5}},"173":{"start":{"line":614,"column":6},"end":{"line":614,"column":28}},"174":{"start":{"line":616,"column":4},"end":{"line":616,"column":30}},"175":{"start":{"line":626,"column":0},"end":{"line":636,"column":2}},"176":{"start":{"line":627,"column":2},"end":{"line":635,"column":12}},"177":{"start":{"line":628,"column":4},"end":{"line":630,"column":7}},"178":{"start":{"line":629,"column":6},"end":{"line":629,"column":26}},"179":{"start":{"line":632,"column":4},"end":{"line":634,"column":7}},"180":{"start":{"line":633,"column":6},"end":{"line":633,"column":20}},"181":{"start":{"line":645,"column":0},"end":{"line":653,"column":2}},"182":{"start":{"line":646,"column":2},"end":{"line":646,"column":18}},"183":{"start":{"line":647,"column":2},"end":{"line":647,"column":24}},"184":{"start":{"line":648,"column":2},"end":{"line":652,"column":24}},"185":{"start":{"line":649,"column":4},"end":{"line":649,"column":96}},"186":{"start":{"line":649,"column":65},"end":{"line":649,"column":79}},"187":{"start":{"line":650,"column":4},"end":{"line":650,"column":20}},"188":{"start":{"line":651,"column":4},"end":{"line":651,"column":33}},"189":{"start":{"line":662,"column":0},"end":{"line":695,"column":2}},"190":{"start":{"line":663,"column":2},"end":{"line":663,"column":18}},"191":{"start":{"line":664,"column":2},"end":{"line":664,"column":39}},"192":{"start":{"line":665,"column":2},"end":{"line":693,"column":4}},"193":{"start":{"line":666,"column":4},"end":{"line":666,"column":35}},"194":{"start":{"line":667,"column":4},"end":{"line":674,"column":5}},"195":{"start":{"line":668,"column":6},"end":{"line":668,"column":39}},"196":{"start":{"line":669,"column":6},"end":{"line":671,"column":7}},"197":{"start":{"line":670,"column":8},"end":{"line":670,"column":47}},"198":{"start":{"line":672,"column":6},"end":{"line":672,"column":44}},"199":{"start":{"line":673,"column":6},"end":{"line":673,"column":13}},"200":{"start":{"line":675,"column":4},"end":{"line":692,"column":7}},"201":{"start":{"line":676,"column":6},"end":{"line":676,"column":22}},"202":{"start":{"line":677,"column":6},"end":{"line":677,"column":65}},"203":{"start":{"line":678,"column":6},"end":{"line":684,"column":7}},"204":{"start":{"line":679,"column":8},"end":{"line":679,"column":34}},"205":{"start":{"line":680,"column":8},"end":{"line":683,"column":9}},"206":{"start":{"line":681,"column":10},"end":{"line":681,"column":40}},"207":{"start":{"line":682,"column":10},"end":{"line":682,"column":23}},"208":{"start":{"line":685,"column":6},"end":{"line":689,"column":7}},"209":{"start":{"line":686,"column":8},"end":{"line":686,"column":39}},"210":{"start":{"line":688,"column":8},"end":{"line":688,"column":35}},"211":{"start":{"line":691,"column":6},"end":{"line":691,"column":30}},"212":{"start":{"line":694,"column":2},"end":{"line":694,"column":29}},"213":{"start":{"line":704,"column":0},"end":{"line":715,"column":2}},"214":{"start":{"line":705,"column":2},"end":{"line":705,"column":33}},"215":{"start":{"line":706,"column":2},"end":{"line":708,"column":5}},"216":{"start":{"line":707,"column":4},"end":{"line":707,"column":30}},"217":{"start":{"line":709,"column":2},"end":{"line":711,"column":5}},"218":{"start":{"line":710,"column":4},"end":{"line":710,"column":25}},"219":{"start":{"line":712,"column":2},"end":{"line":712,"column":24}},"220":{"start":{"line":713,"column":2},"end":{"line":713,"column":49}},"221":{"start":{"line":714,"column":2},"end":{"line":714,"column":45}},"222":{"start":{"line":727,"column":0},"end":{"line":729,"column":2}},"223":{"start":{"line":728,"column":2},"end":{"line":728,"column":56}},"224":{"start":{"line":731,"column":0},"end":{"line":731,"column":52}},"225":{"start":{"line":749,"column":0},"end":{"line":754,"column":2}},"226":{"start":{"line":750,"column":2},"end":{"line":750,"column":24}},"227":{"start":{"line":751,"column":2},"end":{"line":753,"column":24}},"228":{"start":{"line":752,"column":4},"end":{"line":752,"column":47}},"229":{"start":{"line":762,"column":0},"end":{"line":779,"column":2}},"230":{"start":{"line":763,"column":2},"end":{"line":763,"column":18}},"231":{"start":{"line":764,"column":2},"end":{"line":764,"column":43}},"232":{"start":{"line":765,"column":2},"end":{"line":765,"column":22}},"233":{"start":{"line":766,"column":2},"end":{"line":777,"column":4}},"234":{"start":{"line":767,"column":4},"end":{"line":767,"column":28}},"235":{"start":{"line":767,"column":19},"end":{"line":767,"column":26}},"236":{"start":{"line":768,"column":4},"end":{"line":768,"column":19}},"237":{"start":{"line":769,"column":4},"end":{"line":776,"column":7}},"238":{"start":{"line":770,"column":6},"end":{"line":775,"column":7}},"239":{"start":{"line":771,"column":8},"end":{"line":771,"column":40}},"240":{"start":{"line":773,"column":8},"end":{"line":773,"column":64}},"241":{"start":{"line":774,"column":8},"end":{"line":774,"column":32}},"242":{"start":{"line":778,"column":2},"end":{"line":778,"column":22}},"243":{"start":{"line":791,"column":0},"end":{"line":793,"column":2}},"244":{"start":{"line":792,"column":2},"end":{"line":792,"column":54}},"245":{"start":{"line":795,"column":0},"end":{"line":795,"column":50}},"246":{"start":{"line":829,"column":0},"end":{"line":838,"column":2}},"247":{"start":{"line":830,"column":2},"end":{"line":833,"column":3}},"248":{"start":{"line":831,"column":4},"end":{"line":831,"column":30}},"249":{"start":{"line":832,"column":4},"end":{"line":832,"column":27}},"250":{"start":{"line":834,"column":2},"end":{"line":834,"column":24}},"251":{"start":{"line":835,"column":2},"end":{"line":837,"column":24}},"252":{"start":{"line":836,"column":4},"end":{"line":836,"column":61}},"253":{"start":{"line":845,"column":0},"end":{"line":847,"column":3}},"254":{"start":{"line":846,"column":2},"end":{"line":846,"column":37}}},"branchMap":{"1":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"2":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":23},"end":{"line":80,"column":47}},{"start":{"line":80,"column":50},"end":{"line":80,"column":67}}]},"3":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":23},"end":{"line":141,"column":47}},{"start":{"line":141,"column":50},"end":{"line":141,"column":67}}]},"4":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":32},"end":{"line":143,"column":67}},{"start":{"line":143,"column":70},"end":{"line":143,"column":98}}]},"5":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":36},"end":{"line":177,"column":77}},{"start":{"line":177,"column":80},"end":{"line":177,"column":114}}]},"6":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"7":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":29},"end":{"line":204,"column":59}},{"start":{"line":204,"column":62},"end":{"line":204,"column":85}}]},"8":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":23},"end":{"line":234,"column":47}},{"start":{"line":234,"column":50},"end":{"line":234,"column":67}}]},"9":{"line":236,"type":"cond-expr","locations":[{"start":{"line":236,"column":32},"end":{"line":236,"column":67}},{"start":{"line":236,"column":70},"end":{"line":236,"column":98}}]},"10":{"line":265,"type":"cond-expr","locations":[{"start":{"line":265,"column":23},"end":{"line":265,"column":47}},{"start":{"line":265,"column":50},"end":{"line":265,"column":67}}]},"11":{"line":267,"type":"cond-expr","locations":[{"start":{"line":267,"column":32},"end":{"line":267,"column":69}},{"start":{"line":267,"column":72},"end":{"line":267,"column":102}}]},"12":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"13":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"14":{"line":291,"type":"cond-expr","locations":[{"start":{"line":291,"column":23},"end":{"line":291,"column":47}},{"start":{"line":291,"column":50},"end":{"line":291,"column":67}}]},"15":{"line":329,"type":"cond-expr","locations":[{"start":{"line":329,"column":32},"end":{"line":329,"column":67}},{"start":{"line":329,"column":70},"end":{"line":329,"column":98}}]},"16":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"17":{"line":390,"type":"cond-expr","locations":[{"start":{"line":390,"column":59},"end":{"line":390,"column":78}},{"start":{"line":390,"column":81},"end":{"line":390,"column":104}}]},"18":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":6},"end":{"line":392,"column":6}},{"start":{"line":392,"column":6},"end":{"line":392,"column":6}}]},"19":{"line":393,"type":"cond-expr","locations":[{"start":{"line":393,"column":57},"end":{"line":393,"column":73}},{"start":{"line":393,"column":75},"end":{"line":393,"column":95}}]},"20":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":2},"end":{"line":436,"column":2}},{"start":{"line":436,"column":2},"end":{"line":436,"column":2}}]},"21":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":2},"end":{"line":440,"column":2}},{"start":{"line":440,"column":2},"end":{"line":440,"column":2}}]},"22":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":492,"column":2}},{"start":{"line":492,"column":2},"end":{"line":492,"column":2}}]},"23":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":6},"end":{"line":492,"column":14}},{"start":{"line":492,"column":18},"end":{"line":492,"column":39}}]},"24":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":2},"end":{"line":497,"column":2}},{"start":{"line":497,"column":2},"end":{"line":497,"column":2}}]},"25":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":6},"end":{"line":497,"column":26}},{"start":{"line":497,"column":30},"end":{"line":497,"column":57}}]},"26":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":9},"end":{"line":506,"column":9}},{"start":{"line":506,"column":9},"end":{"line":506,"column":9}}]},"27":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":9},"end":{"line":508,"column":9}},{"start":{"line":508,"column":9},"end":{"line":508,"column":9}}]},"28":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":13},"end":{"line":508,"column":39}},{"start":{"line":508,"column":43},"end":{"line":508,"column":71}}]},"29":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":2}},{"start":{"line":533,"column":2},"end":{"line":533,"column":2}}]},"30":{"line":533,"type":"binary-expr","locations":[{"start":{"line":533,"column":6},"end":{"line":533,"column":32}},{"start":{"line":533,"column":36},"end":{"line":533,"column":63}}]},"31":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":4},"end":{"line":546,"column":4}},{"start":{"line":546,"column":4},"end":{"line":546,"column":4}}]},"32":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":4},"end":{"line":549,"column":4}},{"start":{"line":549,"column":4},"end":{"line":549,"column":4}}]},"33":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":6},"end":{"line":606,"column":6}},{"start":{"line":606,"column":6},"end":{"line":606,"column":6}}]},"34":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":10},"end":{"line":606,"column":15}},{"start":{"line":606,"column":19},"end":{"line":606,"column":46}}]},"35":{"line":612,"type":"cond-expr","locations":[{"start":{"line":612,"column":35},"end":{"line":612,"column":62}},{"start":{"line":612,"column":65},"end":{"line":612,"column":85}}]},"36":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"37":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":8},"end":{"line":613,"column":21}},{"start":{"line":613,"column":25},"end":{"line":613,"column":44}}]},"38":{"line":627,"type":"cond-expr","locations":[{"start":{"line":627,"column":34},"end":{"line":635,"column":4}},{"start":{"line":635,"column":7},"end":{"line":635,"column":11}}]},"39":{"line":649,"type":"cond-expr","locations":[{"start":{"line":649,"column":35},"end":{"line":649,"column":82}},{"start":{"line":649,"column":85},"end":{"line":649,"column":95}}]},"40":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":4},"end":{"line":667,"column":4}},{"start":{"line":667,"column":4},"end":{"line":667,"column":4}}]},"41":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":6},"end":{"line":669,"column":6}},{"start":{"line":669,"column":6},"end":{"line":669,"column":6}}]},"42":{"line":677,"type":"cond-expr","locations":[{"start":{"line":677,"column":43},"end":{"line":677,"column":50}},{"start":{"line":677,"column":53},"end":{"line":677,"column":64}}]},"43":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":8},"end":{"line":680,"column":8}},{"start":{"line":680,"column":8},"end":{"line":680,"column":8}}]},"44":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":12},"end":{"line":680,"column":18}},{"start":{"line":680,"column":22},"end":{"line":680,"column":34}}]},"45":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":6},"end":{"line":685,"column":6}},{"start":{"line":685,"column":6},"end":{"line":685,"column":6}}]},"46":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":4},"end":{"line":767,"column":4}},{"start":{"line":767,"column":4},"end":{"line":767,"column":4}}]},"47":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":6},"end":{"line":770,"column":6}},{"start":{"line":770,"column":6},"end":{"line":770,"column":6}}]},"48":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":2},"end":{"line":830,"column":2}},{"start":{"line":830,"column":2},"end":{"line":830,"column":2}}]}},"code":["/*global process, Buffer */","/**"," * @file Manages Salesforce Metadata API"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var inherits = require('inherits'),","    events  = require('events'),","    stream  = require('readable-stream'),","    _       = require('lodash/core'),","    jsforce = require('../core'),","    Promise = require('../promise'),","    SOAP    = require('../soap');","","/*--------------------------------------------*/","/**"," * Class for Salesforce Metadata API"," *"," * @class"," * @param {Connection} conn - Connection object"," */","var Metadata = module.exports = function(conn) {","  this._conn = conn;","};","","","/**"," * Polling interval in milliseconds"," * @type {Number}"," */","Metadata.prototype.pollInterval = 1000;","","/**"," * Polling timeout in milliseconds"," * @type {Number}"," */","Metadata.prototype.pollTimeout = 10000;","","","/**"," * Call Metadata API SOAP endpoint"," *"," * @private"," */","Metadata.prototype._invoke = function(method, message, callback) {","  var soapEndpoint = new SOAP(this._conn, {","    xmlns: \"http://soap.sforce.com/2006/04/metadata\",","    endpointUrl: this._conn.instanceUrl + \"/services/Soap/m/\" + this._conn.version","  });","  return soapEndpoint.invoke(method, message).then(function(res) {","    return res.result;","  }).thenCall(callback);","};","","","/**"," * @typedef {Object} Metadata~MetadataInfo"," * @prop {String} fullName - The name of the component"," */","","/**"," * Asynchronously adds one or more new metadata components to the organization."," *"," * @param {String} type - The type of metadata to create"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create"," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Metadata~AsyncResultLocator}"," */","Metadata.prototype.createAsync = function(type, metadata, callback) {","  if (Number(this._conn.version) > 30) {","    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");","  }","  var convert = function(md) {","    md[\"@xsi:type\"] = type;","    return md;","  };","  var isArray = _.isArray(metadata);","  metadata = isArray ? _.map(metadata, convert) : convert(metadata);","  var res = this._invoke(\"create\", { metadata: metadata });","  return new AsyncResultLocator(this, res, isArray).thenCall(callback);","};","","/**"," * @typedef {Object} Metadata~SaveResult"," * @prop {Boolean} success - True if metadata is successfully saved"," * @prop {String} fullName - Full name of metadata object"," */","","/**"," * @private"," */","function convertToSaveResult(result) {","  var saveResult = _.clone(result);","  saveResult.success = saveResult.success === 'true';","  return saveResult;","}","","/**"," * @typedef {Object} Metadata~UpsertResult"," * @prop {Boolean} success - True if metadata is successfully saved"," * @prop {String} fullName - Full name of metadata object"," * @prop {Boolean} created - True if metadata is newly created"," */","","/**"," * @private"," */","function convertToUpsertResult(result) {","  var upsertResult = convertToSaveResult(result);","  upsertResult.created = upsertResult.created === 'true';","  return upsertResult;","}","","/**"," * Synonym of Metadata#create()."," *"," * @method Metadata#createSync"," * @param {String} type - The type of metadata to create"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create"," * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}"," */","/**"," * Synchronously adds one or more new metadata components to the organization."," *"," * @method Metadata#create"," * @param {String} type - The type of metadata to create"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create"," * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}"," */","Metadata.prototype.createSync =","Metadata.prototype.create = function(type, metadata, callback) {","  var convert = function(md) {","    md[\"@xsi:type\"] = type;","    return md;","  };","  var isArray = _.isArray(metadata);","  metadata = isArray ? _.map(metadata, convert) : convert(metadata);","  return this._invoke(\"createMetadata\", { metadata: metadata }).then(function(results) {","    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);","  }).thenCall(callback);","};","","/**"," * @private"," */","function convertToMetadataInfo(rec) {","  var metadataInfo = _.clone(rec);","  delete metadataInfo.$;","  return metadataInfo;","}","","/**"," * Synonym of Metadata#read()"," *"," * @method Metadata#readSync"," * @param {String} type - The type of metadata to read"," * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read"," * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}"," */","/**"," * Synchronously read specified metadata components in the organization."," *"," * @method Metadata#read"," * @param {String} type - The type of metadata to read"," * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read"," * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function"," * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}"," */","Metadata.prototype.readSync =","Metadata.prototype.read = function(type, fullNames, callback) {","  return this._invoke(\"readMetadata\", { type: type, fullNames: fullNames }).then(function(res) {","    return _.isArray(res.records) ? _.map(res.records, convertToMetadataInfo) : convertToMetadataInfo(res.records);","  }).thenCall(callback);","};","","/**"," * @typedef {Object} Metadata~UpdateMetadataInfo"," * @prop {String} currentName - The API name of the component or field before the update"," * @prop {Metadata~MetadataInfo} metadata - Full specification of the component or field you wish to update"," */","","/**"," * Asynchronously updates one or more metadata components in the organization."," *"," * @param {String} type - The type of metadata to update"," * @param {Metadata~UpdateMetadataInfo|Array.<Metadata~UpdateMetadataInfo>} updateMetadata - Updating metadata"," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Metadata~AsyncResultLocator}"," */","Metadata.prototype.updateAsync = function(type, updateMetadata, callback) {","  if (Number(this._conn.version) > 30) {","    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");","  }","  var convert = function(umd) {","    umd.metadata[\"@xsi:type\"] = type;","    return umd;","  };","  var isArray = _.isArray(updateMetadata);","  updateMetadata = isArray ? _.map(updateMetadata, convert) : convert(updateMetadata);","  var res = this._invoke(\"update\", { updateMetadata: updateMetadata });","  return new AsyncResultLocator(this, res, isArray).thenCall(callback);","};","","/**"," * Synonym of Metadata#update()."," *"," * @method Metadata#updateSync"," * @param {String} type - The type of metadata to update"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata"," * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}"," */","/**"," * Synchronously updates one or more metadata components in the organization."," *"," * @method Metadata#update"," * @param {String} type - The type of metadata to update"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata"," * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}"," */","Metadata.prototype.updateSync =","Metadata.prototype.update = function(type, metadata, callback) {","  var convert = function(md) {","    md[\"@xsi:type\"] = type;","    return md;","  };","  var isArray = _.isArray(metadata);","  metadata = isArray ? _.map(metadata, convert) : convert(metadata);","  return this._invoke(\"updateMetadata\", { metadata: metadata }).then(function(results) {","    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);","  }).thenCall(callback);","};","","/**"," * Synonym of Metadata#upsert()."," *"," * @method Metadata#upsertSync"," * @param {String} type - The type of metadata to upsert"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata"," * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}"," */","/**"," * Upserts one or more components in your organization's data."," *"," * @method Metadata#upsert"," * @param {String} type - The type of metadata to upsert"," * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata"," * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}"," */","Metadata.prototype.upsertSync =","Metadata.prototype.upsert = function(type, metadata, callback) {","  var convert = function(md) {","    md[\"@xsi:type\"] = type;","    return md;","  };","  var isArray = _.isArray(metadata);","  metadata = isArray ? _.map(metadata, convert) : convert(metadata);","  return this._invoke(\"upsertMetadata\", { metadata: metadata }).then(function(results) {","    return _.isArray(results) ? _.map(results, convertToUpsertResult) : convertToUpsertResult(results);","  }).thenCall(callback);","};","","/**"," * Asynchronously deletes specified metadata components in the organization."," *"," * @param {String} type - The type of metadata to delete"," * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty."," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Metadata~AsyncResultLocator}"," */","Metadata.prototype.deleteAsync = function(type, metadata, callback) {","  if (Number(this._conn.version) > 30) {","    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");","  }","  var convert = function(md) {","    if (_.isString(md)) {","      md = { fullName : md };","    }","    md[\"@xsi:type\"] = type;","    return md;","  };","  var isArray = _.isArray(metadata);","  metadata = isArray ? _.map(metadata, convert) : convert(metadata);","  var res = this._invoke(\"delete\", { metadata: metadata });","  return new AsyncResultLocator(this, res, isArray).thenCall(callback);","};","","/**"," * Synonym of Metadata#delete()."," *"," * @deprecated"," * @method Metadata#del"," * @param {String} [type] - The type of metadata to delete"," * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty."," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Metadata~AsyncResultLocator}"," */","/**"," * Synonym of Metadata#delete()."," *"," * @method Metadata#deleteSync"," * @param {String} type - The type of metadata to delete"," * @param {String|Array.<String>} fullNames - The fullName of metadata to delete."," * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}"," */","","/**"," * Synchronously deletes specified metadata components in the organization."," *"," * @method Metadata#delete"," * @param {String} type - The type of metadata to delete"," * @param {String|Array.<String>} fullNames - The fullName of metadata to delete."," * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}"," */","Metadata.prototype.del =","Metadata.prototype.deleteSync =","Metadata.prototype[\"delete\"] = function(type, fullNames, callback) {","  return this._invoke(\"deleteMetadata\", { type: type, fullNames: fullNames }).then(function(results) {","    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);","  }).thenCall(callback);","};","","/**"," * Rename fullname of a metadata component in the organization"," *"," * @param {String} type - The type of metadata to delete"," * @param {String} oldFullName - The original fullName of metadata"," * @param {String} newFullName - The new fullName of metadata"," * @param {Callback.<Metadata~SaveResult>} [callback] - Callback function"," * @returns {Promise.<Metadata~SaveResult>}"," */","Metadata.prototype.rename = function(type, oldFullName, newFullName, callback) {","  return this._invoke(\"renameMetadata\", { type: type, oldFullName: oldFullName, newFullName: newFullName }).then(function(result) {","    return convertToSaveResult(result);","  }).thenCall(callback);","};","","/**"," * Checks the status of asynchronous metadata calls"," *"," * @param {String|Array.<String>} ids - The asynchronous process ID(s)"," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Metadata~AsyncResultLocator}"," */","Metadata.prototype.checkStatus = function(ids, callback) {","  var isArray = _.isArray(ids);","  var res = this._invoke(\"checkStatus\", { asyncProcessId: ids });","  return new AsyncResultLocator(this, res, isArray).thenCall(callback);","};","","/**"," * @typedef {Object} Metadata~DescribeMetadataResult"," * @prop {Array.<Object>} metadataObjects - One or more metadata components and their attributes"," * @prop {Array.<String>} metadataObjects.childXmlNames - List of child sub-components for this component"," * @prop {String} metadataObjects.directoryName - The name of the directory in the .zip file that contains this component"," * @prop {Boolean} metadataObjects.inFolder - Indicates whether the component is in a folder or not"," * @prop {Boolean} metadataObjects.metaFile - Indicates whether the component requires an accompanying metadata file"," * @prop {String} metadataObjects.suffix - The file suffix for this component"," * @prop {String} metadataObjects.xmlName - The name of the root element in the metadata file for this component"," * @prop {String} organizationNamespace - The namespace of the organization"," * @prop {Boolean} partialSaveAllowed - Indicates whether rollbackOnError is allowed or not"," * @prop {Boolean} testRequired - Indicates whether tests are required or not"," */","","/**"," * Retrieves the metadata which describes your organization, including Apex classes and triggers,"," * custom objects, custom fields on standard objects, tab sets that define an app,"," * and many other components."," *"," * @param {String} [version] - The API version for which you want metadata; for example, 29.0"," * @param {Callback.<Metadata~DescribeMetadataResult>} [callback] - Callback function"," * @returns {Promise.<Metadata~DescribeMetadataResult>}"," */","Metadata.prototype.describe = function(version, callback) {","  if (!_.isString(version)) {","    callback = version;","    version = this._conn.version;","  }","  return this._invoke(\"describeMetadata\", { asOfVersion: version }).then(function(res) {","    res.metadataObjects = _.isArray(res.metadataObjects) ? res.metadataObjects : [ res.metadataObjects ];","    res.metadataObjects = _.map(res.metadataObjects, function(mo) {","      if (mo.childXmlNames) {","        mo.childXmlNames = _.isArray(mo.childXmlNames) ? mo.childXmlNames: [ mo.childXmlNames ];","      }","      mo.inFolder = mo.inFolder === 'true';","      mo.metaFile = mo.metaFile === 'true';","      return mo;","    });","    res.partialSaveAllowed = res.partialSaveAllowed === 'true';","    res.testRequired = res.testRequired === 'true';","    return res;","  }).thenCall(callback);","};","","/**"," * @typedef {Object} Metadata~ListMetadataQuery"," * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass"," * @prop {String} [folder] - The folder associated with the component."," */","","/**"," * @typedef {Object} Metadata~FileProperties"," * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass"," * @prop {String} createdById - ID of the user who created the file"," * @prop {String} createdByName - Name of the user who created the file"," * @prop {String} createdDate - Date and time when the file was created"," * @prop {String} fileName - Name of the file"," * @prop {String} fullName - The file developer name used as a unique identifier for API access"," * @prop {String} id - ID of the file"," * @prop {String} lastModifiedById - ID of the user who last modified the file"," * @prop {String} lastModifiedByName - Name of the user who last modified the file"," * @prop {String} lastModifiedDate - Date and time that the file was last modified"," * @prop {String} [manageableState] - Indicates the manageable state of the specified component if it is contained in a package"," * @prop {String} [namespacePrefix] - The namespace prefix of the component"," */","","/**"," * Retrieves property information about metadata components in your organization"," *"," * @param {Metadata~ListMetadataQuery|Array.<Metadata~ListMetadataQuery>} queries - The criteria object(s) specifing metadata to list"," * @param {String} [version] - The API version for which you want metadata; for example, 29.0"," * @param {Callback.<Array.<Metadata~FileProperties>>} [callback] - Callback function"," * @returns {Promise.<Array.<Metadata~FileProperties>>}"," */","Metadata.prototype.list = function(queries, version, callback) {","  if (!_.isString(version)) {","    callback = version;","    version = this._conn.version;","  }","  if (!_.isArray(queries)) {","    queries = [ queries ];","  }","  return this._invoke(\"listMetadata\", { queries: queries, asOfVersion: version }, callback);","};","","/**"," * @typedef {Object} Metadata~RetrieveRequest"," */","","/**"," * Retrieves XML file representations of components in an organization"," *"," * @param {Metadata~RetrieveRequest} request - Options for determining which packages or files are retrieved"," * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function"," * @returns {Metadata~RetrieveResultLocator}"," */","Metadata.prototype.retrieve = function(request, callback) {","  var res = this._invoke(\"retrieve\", { request: request });","  return new RetrieveResultLocator(this, res).thenCall(callback);","};","","/**"," * Checks the status of declarative metadata call retrieve() and returns the zip file contents"," *"," * @param {String} id - Async process id returned from previous retrieve request"," * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function"," * @returns {Promise.<Metadata~RetrieveResult>}"," */","Metadata.prototype.checkRetrieveStatus = function(id, callback) {","  return this._invoke(\"checkRetrieveStatus\", { asyncProcessId: id }, callback);","};","","/**"," * Deploy components into an organization using zipped file representations"," *"," * @param {stream.Stream|Buffer|String} zipInput - Zipped file input source in readable stream, binary buffer or Base64-encoded string"," * @param {Object} [options] - Options used in deployment"," * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not."," * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not."," * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true)."," * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false."," * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false)."," * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin."," * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false)."," * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run."," * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment."," * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false)."," * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function"," * @returns {Metadata~DeployResultLocator}"," */","Metadata.prototype.deploy = function(zipInput, options, callback) {","  if (!options || _.isFunction(options)) {","    callback = options;","    options = {};","  }","  var deferred = Promise.defer();","  if (_.isObject(zipInput) && _.isFunction(zipInput.pipe)) {","    var bufs = [];","    zipInput.on('data', function(d) {","      bufs.push(d);","    });","    zipInput.on('end', function() {","      deferred.resolve(Buffer.concat(bufs).toString('base64'));","    });","    // zipInput.resume();","  } else if (zipInput instanceof Buffer) {","    deferred.resolve(zipInput.toString('base64'));","  } else if (zipInput instanceof String || typeof zipInput === 'string') {","    deferred.resolve(zipInput);","  } else {","    throw \"Unexpected zipInput type\";","  }","","  var self = this;","  var res = deferred.promise.then(function(zipContentB64) {","    return self._invoke(\"deploy\", {","      ZipFile: zipContentB64,","      DeployOptions: options","    }, callback);","  });","  return new DeployResultLocator(this, res).thenCall(callback);","};","","/**"," * Checks the status of declarative metadata call deploy()"," *"," * @param {String} id - Async process id returned from previous deploy request"," * @param {Boolean} [includeDetails] - Sets the DeployResult object to include details information (default: false)"," * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function"," * @returns {Promise.<Metadata~DeployResult>}"," */","Metadata.prototype.checkDeployStatus = function(id, includeDetails, callback) {","  if (_.isObject(includeDetails) || _.isBoolean(includeDetails)) {","    includeDetails = !!includeDetails;","  } else {","    callback = includeDetails;","    includeDetails = false;","  }","  return this._invoke(\"checkDeployStatus\", {","    asyncProcessId: id,","    includeDetails : includeDetails","  }).then(function(res) {","    res.done = res.done === 'true';","    res.success = res.success === 'true';","    res.checkOnly = res.checkOnly === 'true';","    if (res.ignoreWarnings) {","      res.ignoreWarnings = res.ignoreWarnings === 'true';","    }","    if (res.rollbackOnError) {","      res.rollbackOnError = res.rollbackOnError === 'true';","    }","    res.numberComponentErrors = Number(res.numberComponentErrors);","    res.numberComponentsDeployed = Number(res.numberComponentsDeployed);","    res.numberComponentsTotal = Number(res.numberComponentsTotal);","    res.numberTestErrors = Number(res.numberTestErrors);","    res.numberTestsCompleted = Number(res.numberTestsCompleted);","    res.numberTestsTotal = Number(res.numberTestsTotal);","","    return res;","  }).thenCall(callback);","};","","","/*--------------------------------------------*/","","/**"," * @typedef {Object} Metadata~AsyncResult"," * @prop {Boolean} done - Indicates whether the call has completed or not"," * @prop {String} id - ID of the component being created, updated, deleted, deployed, or retrieved"," * @prop {String} state - The state four possible values: Queued, InProgress, Completed, and Error."," * @prop {String} [statusCode] - If an error occurred during the create(), update(), or delete() call, a status code is returned"," * @prop {String} [message] - Message corresponding to the statusCode field returned"," */","","/**"," * The locator class for Metadata API asynchronous call result"," *"," * @protected"," * @class Metadata~AsyncResultLocator"," * @extends events.EventEmitter"," * @implements Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>"," * @param {Metadata} meta - Metadata API object"," * @param {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} results - Promise object for async result info"," * @param {Boolean} [isArray] - Indicates whether the async request is given in array or single object"," */","var AsyncResultLocator = function(meta, results, isArray) {","  this._meta = meta;","  this._results = results;","  this._isArray = isArray;","};","","inherits(AsyncResultLocator, events.EventEmitter);","","/**"," * Promise/A+ interface"," * http://promises-aplus.github.io/promises-spec/"," *"," * Delegate to deferred promise, return promise instance for batch result"," *"," * @method Metadata~AsyncResultLocator#then"," */","AsyncResultLocator.prototype.then = function(onResolve, onReject) {","  var self = this;","  return this._results.then(function(results) {","    var convertType = function(res) {","      if (res.$ && res.$[\"xsi:nil\"] === 'true') {","        return null;","      }","      res.done = res.done === 'true';","      return res;","    };","    results = _.isArray(results) ? _.map(results, convertType) : convertType(results);","    if (self._isArray && !_.isArray(results)) {","      results = [ results ];","    }","    return onResolve(results);","  }, onReject);","};","","/**"," * Promise/A+ extension"," * Call \"then\" using given node-style callback function"," *"," * @method Metadata~AsyncResultLocator#thenCall"," */","AsyncResultLocator.prototype.thenCall = function(callback) {","  return _.isFunction(callback) ? this.then(function(res) {","    process.nextTick(function() {","      callback(null, res);","    });","  }, function(err) {","    process.nextTick(function() {","      callback(err);","    });","  }) : this;","};","","/**"," * Check the status of async request"," *"," * @method Metadata~AsyncResultLocator#check"," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}"," */","AsyncResultLocator.prototype.check = function(callback) {","  var self = this;","  var meta = this._meta;","  return this.then(function(results) {","    var ids = _.isArray(results) ? _.map(results, function(res){ return res.id; }) : results.id;","    self._ids = ids;","    return meta.checkStatus(ids);","  }).thenCall(callback);","};","","/**"," * Polling until async call status becomes complete or error"," *"," * @method Metadata~AsyncResultLocator#poll"," * @param {Number} interval - Polling interval in milliseconds"," * @param {Number} timeout - Polling timeout in milliseconds"," */","AsyncResultLocator.prototype.poll = function(interval, timeout) {","  var self = this;","  var startTime = new Date().getTime();","  var poll = function() {","    var now = new Date().getTime();","    if (startTime + timeout < now) {","      var errMsg = \"Polling time out.\";","      if (self._ids) {","        errMsg += \" Process Id = \" + self._ids;","      }","      self.emit('error', new Error(errMsg));","      return;","    }","    self.check().then(function(results) {","      var done = true;","      var resultArr = _.isArray(results) ? results : [ results ];","      for (var i=0, len=resultArr.length; i<len; i++) {","        var result = resultArr[i];","        if (result && !result.done) {","          self.emit('progress', result);","          done = false;","        }","      }","      if (done) {","        self.emit('complete', results);","      } else {","        setTimeout(poll, interval);","      }","    }, function(err) {","      self.emit('error', err);","    });","  };","  setTimeout(poll, interval);","};","","/**"," * Check and wait until the async requests become in completed status"," *"," * @method Metadata~AsyncResultLocator#complete"," * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function"," * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}"," */","AsyncResultLocator.prototype.complete = function(callback) {","  var deferred = Promise.defer();","  this.on('complete', function(results) {","    deferred.resolve(results);","  });","  this.on('error', function(err) {","    deferred.reject(err);","  });","  var meta = this._meta;","  this.poll(meta.pollInterval, meta.pollTimeout);","  return deferred.promise.thenCall(callback);","};","","/*--------------------------------------------*/","/**"," * The locator class to track retreive() Metadata API call result"," *"," * @protected"," * @class Metadata~RetrieveResultLocator"," * @extends Metadata~AsyncResultLocator"," * @param {Metadata} meta - Metadata API object"," * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of retrieve call()"," */","var RetrieveResultLocator = function(meta, result) {","  RetrieveResultLocator.super_.call(this, meta, result);","};","","inherits(RetrieveResultLocator, AsyncResultLocator);","","/**"," * @typedef {Object} Metadata~RetrieveResult"," * @prop {Array.<Metadata~FileProperties>} fileProperties - Contains information about the properties of each component in the .zip file, and the manifest file package.xml"," * @prop {String} id - ID of the component being retrieved"," * @prop {Array.<Object>} messages - Contains information about the success or failure of the retrieve() call"," * @prop {String} zipFile - The zip file returned by the retrieve request. Base 64-encoded binary data"," */","","/**"," * Check and wait until the async request becomes in completed status,"," * and retrieve the result data."," *"," * @memthod Metadata~RetrieveResultLocator#complete"," * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function"," * @returns {Promise.<Metadata~RetrieveResult>}"," */","RetrieveResultLocator.prototype.complete = function(callback) {","  var meta = this._meta;","  return RetrieveResultLocator.super_.prototype.complete.call(this).then(function(result) {","    return meta.checkRetrieveStatus(result.id);","  }).thenCall(callback);","};","","/**"," * Change the retrieved result to Node.js readable stream"," *"," * @method Metadata~RetrieveResultLocator#stream"," * @returns {stream.Readable}"," */","RetrieveResultLocator.prototype.stream = function() {","  var self = this;","  var resultStream = new stream.Readable();","  var reading = false;","  resultStream._read = function() {","    if (reading) { return; }","    reading = true;","    self.complete(function(err, result) {","      if (err) {","        resultStream.emit('error', err);","      } else {","        resultStream.push(new Buffer(result.zipFile, 'base64'));","        resultStream.push(null);","      }","    });","  };","  return resultStream;","};","","/*--------------------------------------------*/","/**"," * The locator class to track deploy() Metadata API call result"," *"," * @protected"," * @class Metadata~DeployResultLocator"," * @extends Metadata~AsyncResultLocator"," * @param {Metadata} meta - Metadata API object"," * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of deploy() call"," */","var DeployResultLocator = function(meta, result) {","  DeployResultLocator.super_.call(this, meta, result);","};","","inherits(DeployResultLocator, AsyncResultLocator);","","/**"," * @typedef {Object} Metadata~DeployResult"," * @prop {String} id - ID of the component being deployed"," * @prop {Boolean} checkOnly - Indicates whether this deployment is being used to check the validity of the deployed files without making any changes in the organization or not"," * @prop {String} completedDate - Timestamp for when the deployment process ended"," * @prop {String} createdDate - Timestamp for when the deploy() call was received"," * @prop {Array.<Object>} [details] - Provides the details of a deployment that is in-progress or ended, if includeDetails is set to true in checkDeployStatus() call"," * @prop {Boolean} done - Indicates whether the server finished processing the deploy() call for the specified id"," * @prop {String} [errorMessage] - Message corresponding to the values in the errorStatusCode field"," * @prop {String} [errorStatusCode] - If an error occurred during the deploy() call, a status code is returned, and the message corresponding to the status code is returned in the errorMessagefield"," * @prop {Boolean} [ignoreWarnings] - Specifies whether a deployment should continue even if the deployment generates warnings"," * @prop {String} lastModifiedDate - Timestamp of the last update for the deployment process"," * @prop {Number} numberComponentErrors - The number of components that generated errors during this deployment"," * @prop {Number} numberComponentsDeployed - The number of components deployed in the deployment process"," * @prop {Number} numberComponentsTotal - The total number of components in the deployment"," * @prop {Number} numberTestErrors - The number of Apex tests that have generated errors during this deployment"," * @prop {Number} numberTestsCompleted - The number of completedApex tests for this deployment"," * @prop {Number} numberTestsTotal - The total number of Apex tests for this deployment"," * @prop {Boolean} [rollbackOnError] - Indicates whether any failure causes a complete rollback or not. Default is true."," * @prop {String} startDate - Timestamp for when the deployment process began"," * @prop {String} status - Indicates the current state of the deployment"," * @prop {Boolean} success - Indicates whether the deployment was successful or not"," */","","/**"," * Check and wait until the async request becomes in completed status,"," * and retrieve the result data."," *"," * @method Metadata~DeployResultLocator#complete"," * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function"," * @returns {Promise.<Metadata~DeployResult>}"," */","DeployResultLocator.prototype.complete = function(includeDetails, callback) {","  if (_.isFunction(includeDetails)) {","    callback = includeDetails;","    includeDetails = false;","  }","  var meta = this._meta;","  return DeployResultLocator.super_.prototype.complete.call(this).then(function(result) {","    return meta.checkDeployStatus(result.id, includeDetails);","  }).thenCall(callback);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.metadata = new Metadata(conn);","});",""],"l":{"9":1,"24":1,"25":0,"33":1,"39":1,"47":1,"48":0,"52":0,"53":0,"71":1,"72":0,"73":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"82":0,"94":1,"95":0,"96":0,"97":0,"110":1,"111":0,"112":0,"113":0,"134":1,"136":0,"137":0,"138":0,"140":0,"141":0,"142":0,"143":0,"150":1,"151":0,"152":0,"153":0,"174":1,"176":0,"177":0,"195":1,"196":0,"197":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"227":1,"229":0,"230":0,"231":0,"233":0,"234":0,"235":0,"236":0,"258":1,"260":0,"261":0,"262":0,"264":0,"265":0,"266":0,"267":0,"279":1,"280":0,"281":0,"283":0,"284":0,"285":0,"287":0,"288":0,"290":0,"291":0,"292":0,"293":0,"325":1,"328":0,"329":0,"342":1,"343":0,"344":0,"355":1,"356":0,"357":0,"358":0,"384":1,"385":0,"386":0,"387":0,"389":0,"390":0,"391":0,"392":0,"393":0,"395":0,"396":0,"397":0,"399":0,"400":0,"401":0,"435":1,"436":0,"437":0,"438":0,"440":0,"441":0,"443":0,"457":1,"458":0,"459":0,"469":1,"470":0,"491":1,"492":0,"493":0,"494":0,"496":0,"497":0,"498":0,"499":0,"500":0,"502":0,"503":0,"506":0,"507":0,"508":0,"509":0,"511":0,"514":0,"515":0,"516":0,"521":0,"532":1,"533":0,"534":0,"536":0,"537":0,"539":0,"543":0,"544":0,"545":0,"546":0,"547":0,"549":0,"550":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"559":0,"586":1,"587":0,"588":0,"589":0,"592":1,"602":1,"603":0,"604":0,"605":0,"606":0,"607":0,"609":0,"610":0,"612":0,"613":0,"614":0,"616":0,"626":1,"627":0,"628":0,"629":0,"632":0,"633":0,"645":1,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"662":1,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"672":0,"673":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"685":0,"686":0,"688":0,"691":0,"694":0,"704":1,"705":0,"706":0,"707":0,"709":0,"710":0,"712":0,"713":0,"714":0,"727":1,"728":0,"731":1,"749":1,"750":0,"751":0,"752":0,"762":1,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"773":0,"774":0,"778":0,"791":1,"792":0,"795":1,"829":1,"830":0,"831":0,"832":0,"834":0,"835":0,"836":0,"845":1,"846":0}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/soap.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/soap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":1,"19":1,"20":0,"21":1,"22":1,"23":0,"24":1,"25":1,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0,"37":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":31},"end":{"line":18,"column":46}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":28},"end":{"line":26,"column":72}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":71},"end":{"line":31,"column":85}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":32},"end":{"line":68,"column":65}}},"5":{"name":"(anonymous_5)","line":102,"loc":{"start":{"line":102,"column":26},"end":{"line":102,"column":60}}},"6":{"name":"(anonymous_6)","line":128,"loc":{"start":{"line":128,"column":36},"end":{"line":128,"column":60}}},"7":{"name":"(anonymous_7)","line":164,"loc":{"start":{"line":164,"column":33},"end":{"line":164,"column":52}}},"8":{"name":"(anonymous_8)","line":205,"loc":{"start":{"line":205,"column":39},"end":{"line":205,"column":58}}},"9":{"name":"(anonymous_9)","line":243,"loc":{"start":{"line":243,"column":32},"end":{"line":243,"column":51}}},"10":{"name":"(anonymous_10)","line":279,"loc":{"start":{"line":279,"column":32},"end":{"line":279,"column":69}}},"11":{"name":"(anonymous_11)","line":295,"loc":{"start":{"line":295,"column":34},"end":{"line":295,"column":61}}},"12":{"name":"(anonymous_12)","line":304,"loc":{"start":{"line":304,"column":29},"end":{"line":304,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"4":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"6":{"start":{"line":26,"column":0},"end":{"line":34,"column":2}},"7":{"start":{"line":27,"column":2},"end":{"line":30,"column":5}},"8":{"start":{"line":31,"column":2},"end":{"line":33,"column":24}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":22}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":17}},"11":{"start":{"line":68,"column":0},"end":{"line":71,"column":2}},"12":{"start":{"line":69,"column":2},"end":{"line":69,"column":99}},"13":{"start":{"line":70,"column":2},"end":{"line":70,"column":87}},"14":{"start":{"line":72,"column":0},"end":{"line":79,"column":2}},"15":{"start":{"line":102,"column":0},"end":{"line":105,"column":2}},"16":{"start":{"line":103,"column":2},"end":{"line":103,"column":88}},"17":{"start":{"line":104,"column":2},"end":{"line":104,"column":83}},"18":{"start":{"line":106,"column":0},"end":{"line":112,"column":2}},"19":{"start":{"line":128,"column":0},"end":{"line":130,"column":2}},"20":{"start":{"line":129,"column":2},"end":{"line":129,"column":100}},"21":{"start":{"line":131,"column":0},"end":{"line":135,"column":2}},"22":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"23":{"start":{"line":165,"column":2},"end":{"line":165,"column":86}},"24":{"start":{"line":167,"column":0},"end":{"line":193,"column":2}},"25":{"start":{"line":205,"column":0},"end":{"line":207,"column":2}},"26":{"start":{"line":206,"column":2},"end":{"line":206,"column":92}},"27":{"start":{"line":208,"column":0},"end":{"line":210,"column":2}},"28":{"start":{"line":243,"column":0},"end":{"line":245,"column":2}},"29":{"start":{"line":244,"column":2},"end":{"line":244,"column":78}},"30":{"start":{"line":246,"column":0},"end":{"line":269,"column":2}},"31":{"start":{"line":279,"column":0},"end":{"line":281,"column":2}},"32":{"start":{"line":280,"column":2},"end":{"line":280,"column":87}},"33":{"start":{"line":295,"column":0},"end":{"line":297,"column":2}},"34":{"start":{"line":296,"column":2},"end":{"line":296,"column":69}},"35":{"start":{"line":304,"column":0},"end":{"line":306,"column":3}},"36":{"start":{"line":305,"column":2},"end":{"line":305,"column":32}},"37":{"start":{"line":309,"column":0},"end":{"line":309,"column":25}}},"branchMap":{"1":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":41},"end":{"line":69,"column":70}},{"start":{"line":69,"column":73},"end":{"line":69,"column":98}}]},"2":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":42},"end":{"line":103,"column":65}},{"start":{"line":103,"column":68},"end":{"line":103,"column":87}}]}},"code":["/**"," * @file Salesforce SOAP API"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _ = require('lodash/core');","var jsforce = require('../core');","var SOAP = require('../soap');","","/**"," * API class for Partner SOAP call"," *"," * @class"," * @param {Connection} conn - Connection"," */","var SoapApi = module.exports = function(conn) {","  this._conn = conn;","};","","/**"," * Call SOAP Api (Partner) endpoint"," * @private"," */","SoapApi.prototype._invoke = function(method, message, schema, callback) {","  var soapEndpoint = new SOAP(this._conn, {","    xmlns: \"urn:partner.soap.sforce.com\",","    endpointUrl: this._conn.instanceUrl + \"/services/Soap/u/\" + this._conn.version","  });","  return soapEndpoint.invoke(method, message, { result: schema }).then(function(res) {","    return res.result;","  }).thenCall(callback);","};","","","/* */","var Schemas = {};","","/**"," * @typedef SoapApi~LeadConvert"," * @prop {String} convertedStatus - Status of converted lead"," * @prop {String} leadId - Lead record Id to convert"," * @prop {String} [accountId] - Account record Id to assign the converted record"," * @prop {String} [contactId] - Contact record Id to assign the converted record"," * @prop {Boolean} [doNotCreateOpportunity] - True if you don't want to create a new opportunity"," * @prop {String} [opportunityName] - Name of opportunity to create"," * @prop {Boolean} [overwriteLeadSource] - True if overwriting lead source"," * @prop {String} [ownerId] - Owner Id"," * @prop {Boolean} [sendNotificationEmail] - True if send notification email"," */","/**"," * @typedef SoapApi~LeadConvertResult"," * @prop {String} leadId - Lead record Id to convert"," * @prop {String} [accountId] - Account record Id of converted lead"," * @prop {String} [contactId] - Contact record Id of converted lead"," * @prop {String} [opportunityId] - Opportunity record Id created in conversion"," * @prop {Boolean} success - True if successfully converted"," * @prop {Array.<Object>} errors - Error"," */","/**"," * Converts a Lead into an Account, Contact, or (optionally) an Opportunity."," *"," * @param {SoapApi~LeadConvert|Array.<SoapApi~LeadConvert>} leadConverts"," * @param {Callback.<SoapApi~LeadConvertResult|Array.<SoapApi~LeadConvertResult>>} [callback] - Callback function"," * @returns {Promise.<SoapApi~LeadConvertResult|Array.<SoapApi~LeadConvertResult>>}"," */","SoapApi.prototype.convertLead = function(leadConverts, callback) {","  var schema = _.isArray(leadConverts) ? [ Schemas.LeadConvertResult ] : Schemas.LeadConvertResult;","  return this._invoke(\"convertLead\", { leadConverts: leadConverts }, schema, callback);","};","Schemas.LeadConvertResult = {","  success: 'boolean',","  errors: [],","  leadId: 'string',","  accountId: 'string',","  contactId: 'string',","  opportunityId: 'string'","};","","/**"," * @typedef SoapApi~MergeRequest"," * @prop {Object} masterRecord - The merge destination record"," * @prop {Array.<String>} recordToMergeIds - Ids of records to merge"," */","/**"," * @typedef SoapApi~MergeResult"," * @prop {Boolean} success - True if successfully merged"," * @prop {Array.<Object>} errors - Error"," * @prop {String} id - ID of the master record"," * @prop {Array.<String>} mergedRecordIds - ID of the records that were merged into the master record"," * @prop {Array.<String>} updatedRelatedIds - ID of all related records that were moved (re-parented) as a result of the merge"," */","","/**"," * Merge up to three records into one"," *"," * @param {SoapApi~MergeRequest|Array.<SoapApi~MergeRequest>} mergeRequests"," * @param {Callback.<SoapApi~MergeResult|Array.<SoapApi~MergeResult>>} [callback] - Callback function"," * @returns {Promise.<SoapApi~MergeResult|Array.<SoapApi~MergeResult>>}"," */","SoapApi.prototype.merge = function(mergeRequests, callback) {","  var schema = _.isArray(mergeRequests) ? [ Schemas.MergeResult ] : Schemas.MergeResult;","  return this._invoke(\"merge\", { mergeRequests: mergeRequests }, schema, callback);","};","Schemas.MergeResult = {","  success: 'boolean',","  errors: [],","  id: 'string',","  mergedRecordIds: ['string'],","  updatedRelatedIds: ['string']","};","","","/**"," * @typedef SoapApi~EmptyRecycleBinResult"," * @prop {String} id - ID of an sObject that you attempted to delete from the Recycle Bin"," * @prop {Boolean} success - Whether the call succeeded (true) or not (false) for this record"," * @prop {Array.<Object>} errors - Errors"," */","/**"," * Delete records from the recycle bin immediately"," *"," * @param {Array.<String>} ids - Record ids to empty from recycle bin"," * @param {Callback.<Array.<SoapApi~EmptyRecycleBinResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<SoapApi~EmptyRecycleBinResult>>}"," */","SoapApi.prototype.emptyRecycleBin = function(ids, callback) {","  return this._invoke(\"emptyRecycleBin\", { ids: ids }, [ Schemas.EmptyRecycleBinResult ], callback);","};","Schemas.EmptyRecycleBinResult = {","  id: 'string',","  success: 'boolean',","  errors: []","};","","","/**"," * @typedef SoapApi~DescribeTabSetResult"," * @prop {String} label - The display label for this standard or custom app"," * @prop {String} logoUrl - A fully qualified URL to the logo image associated with the standard or custom app"," * @prop {String} namespace - Namespace of application package"," * @prop {Boolean} selected - If true, then this standard or custom app is the user’s currently selected app"," * @prop {Array.<SoapApi~DescribeTab>} tabs - An array of tabs that are displayed for the specified standard app or custom app"," */","/**"," * @typedef SoapApi~DescribeTab"," * @prop {Array.<Object>} colors - Array of color information used for a tab"," * @prop {Boolean} custom - true if this is a custom tab"," * @prop {String} iconUrl - The URL for the main 32 x 32 pixel icon for a tab"," * @prop {Array.<Object>} icons - Array of icon information used for a tab"," * @prop {String} label - The display label for this tab"," * @prop {String} miniIconUrl - The URL for the 16 x 16 pixel icon that represents a tab"," * @prop {String} name - The API name of the tab"," * @prop {String} sobjectName - The name of the sObject that is primarily displayed on this tab"," * @prop {String} url - A fully qualified URL for viewing this tab"," */","/**"," * Returns information about the standard and custom apps available to the logged-in user"," *"," * @param {Callback.<Array.<SoapApi~DescribeTabSetResult>>} [callback] - Callback function"," * @returns {Promise.<Array.<SoapApi~DescribeTabSetResult>>}"," */","SoapApi.prototype.describeTabs = function(callback) {","  return this._invoke(\"describeTabs\", {}, [ Schemas.DescribeTabSetResult ], callback);","};","Schemas.DescribeTabSetResult = {","  label: 'string',","  logoUrl: 'string',","  namespace: 'string',","  selected: 'boolean',","  tabs: [{","    colors: [{","      theme: 'string',","      color: 'string',","      context: 'string'","    }],","    iconUrl: 'string',","    icons: [{","      theme: 'string',","      height: 'number',","      width: 'number',","      url: 'string',","      contentType: 'string'","    }],","    label: 'string',","    custom: 'boolean',","    miniIconUrl: 'string',","    name: 'string',","    sobjectName: 'string',","    url: 'string'","  }]","};","","/**"," * Retrieves the current system timestamp (Coordinated Universal Time (UTC) time zone) from the API"," *"," * @typedef SoapApi~ServerTimestampResult"," * @prop {String} timestamp - Timestamp"," */","/**"," * @param {Callback.<SoapApi~ServerTimestampResult>} [callback] - Callback function"," * @returns {Promise.<SoapApi~ServerTimestampResult>}"," */","SoapApi.prototype.getServerTimestamp = function(callback) {","  return this._invoke(\"getServerTimestamp\", {}, Schemas.GetServerTimestampResult, callback);","};","Schemas.GetServerTimestampResult = {","  timestamp: 'string'","};","","/**"," * @typedef SoapApi~UserInfoResult"," * @prop {Boolean} accessibilityMode"," * @prop {String} currencySymbol"," * @prop {Number} orgAttachmentFileSizeLimit"," * @prop {String} orgDefaultCurrencyIsoCode"," * @prop {String} orgDisallowHtmlAttachments"," * @prop {Boolean} orgHasPersonAccounts"," * @prop {String} organizationId"," * @prop {Boolean} organizationMultiCurrency"," * @prop {String} organizationName"," * @prop {String} profileId"," * @prop {String} roleId"," * @prop {Number} sessionSecondsValid"," * @prop {String} userDefaultCurrencyIsoCode"," * @prop {String} userEmail"," * @prop {String} userFullName"," * @prop {String} userId"," * @prop {String} userLanguage"," * @prop {String} userLocale"," * @prop {String} userName"," * @prop {String} userTimeZone"," * @prop {String} userType"," * @prop {String} userUiSkin"," */","/**"," * Retrieves personal information for the user associated with the current session"," *"," * @param {Callback.<SoapApi~UserInfoResult>} [callback] - Callback function"," * @returns {Promise.<SoapApi~UserInfoResult>}"," */","SoapApi.prototype.getUserInfo = function(callback) {","  return this._invoke(\"getUserInfo\", {}, Schemas.GetUserInfoResult, callback);","};","Schemas.GetUserInfoResult = {","  accessibilityMode: 'boolean',","  currencySymbol: 'string',","  orgAttachmentFileSizeLimit: 'number',","  orgDefaultCurrencyIsoCode: 'string',","  orgDisallowHtmlAttachments: 'boolean',","  orgHasPersonAccounts: 'boolean',","  organizationId: 'string',","  organizationMultiCurrency: 'boolean',","  organizationName: 'string',","  profileId: 'string',","  roleId: 'string',","  sessionSecondsValid: 'number',","  userDefaultCurrencyIsoCode: 'string',","  userEmail: 'string',","  userFullName: 'string',","  userId: 'string',","  userLanguage: 'string',","  userLocale: 'string',","  userName: 'string',","  userTimeZone: 'string',","  userType: 'string',","  userUiSkin: 'string'","};","","/**"," * Sets the specified user’s password to the specified value"," *"," * @param {String} userId - User Id to set password"," * @param {String} password - New password"," * @param {Callback.<String>} [callback] - Callback function"," * @returns {Promise.<String>}"," */","SoapApi.prototype.setPassword = function(userId, password, callback) {","  return this._invoke(\"setPassword\", { userId: userId, password: password }, callback);","};","","/**"," * @typedef SoapApi~ResetPasswordResult"," * @prop {String} password"," */","/**"," * Resets the specified user’s password"," *"," * @param {String} userId - User Id to set password"," * @param {String} password - New password"," * @param {Callback.<SoapApi~ResetPasswordResult>} [callback] - Callback function"," * @returns {Promise.<SoapApi~ResetPasswordResult>}"," */","SoapApi.prototype.resetPassword = function(userId, callback) {","  return this._invoke(\"resetPassword\", { userId: userId }, callback);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.soap = new SoapApi(conn);","});","","","module.exports = SoapApi;",""],"l":{"8":1,"9":1,"10":1,"18":1,"19":0,"26":1,"27":0,"31":0,"32":0,"38":1,"68":1,"69":0,"70":0,"72":1,"102":1,"103":0,"104":0,"106":1,"128":1,"129":0,"131":1,"164":1,"165":0,"167":1,"205":1,"206":0,"208":1,"243":1,"244":0,"246":1,"279":1,"280":0,"295":1,"296":0,"304":1,"305":0,"309":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/streaming.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/streaming.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":38}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":28},"end":{"line":39,"column":47}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":30},"end":{"line":50,"column":49}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":14},"end":{"line":64,"column":40}}},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":30},"end":{"line":75,"column":49}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":32},"end":{"line":79,"column":51}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":25},"end":{"line":84,"column":52}}},"8":{"name":"(anonymous_8)","line":90,"loc":{"start":{"line":90,"column":12},"end":{"line":90,"column":26}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":23},"end":{"line":92,"column":36}}},"10":{"name":"(anonymous_10)","line":95,"loc":{"start":{"line":95,"column":10},"end":{"line":95,"column":25}}},"11":{"name":"(anonymous_11)","line":109,"loc":{"start":{"line":109,"column":16},"end":{"line":109,"column":31}}},"12":{"name":"(anonymous_12)","line":116,"loc":{"start":{"line":116,"column":36},"end":{"line":116,"column":53}}},"13":{"name":"(anonymous_13)","line":130,"loc":{"start":{"line":130,"column":37},"end":{"line":130,"column":59}}},"14":{"name":"(anonymous_14)","line":152,"loc":{"start":{"line":152,"column":28},"end":{"line":152,"column":43}}},"15":{"name":"(anonymous_15)","line":164,"loc":{"start":{"line":164,"column":30},"end":{"line":164,"column":50}}},"16":{"name":"(anonymous_16)","line":175,"loc":{"start":{"line":175,"column":32},"end":{"line":175,"column":57}}},"17":{"name":"(anonymous_17)","line":188,"loc":{"start":{"line":188,"column":34},"end":{"line":188,"column":59}}},"18":{"name":"(anonymous_18)","line":200,"loc":{"start":{"line":200,"column":29},"end":{"line":200,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":12,"column":33}},"2":{"start":{"line":21,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":30}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"5":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"6":{"start":{"line":40,"column":2},"end":{"line":40,"column":56}},"7":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"8":{"start":{"line":51,"column":2},"end":{"line":51,"column":51}},"9":{"start":{"line":52,"column":2},"end":{"line":52,"column":14}},"10":{"start":{"line":64,"column":0},"end":{"line":67,"column":2}},"11":{"start":{"line":65,"column":2},"end":{"line":65,"column":30}},"12":{"start":{"line":66,"column":2},"end":{"line":66,"column":20}},"13":{"start":{"line":75,"column":0},"end":{"line":77,"column":2}},"14":{"start":{"line":76,"column":2},"end":{"line":76,"column":57}},"15":{"start":{"line":79,"column":0},"end":{"line":82,"column":2}},"16":{"start":{"line":80,"column":2},"end":{"line":80,"column":52}},"17":{"start":{"line":81,"column":2},"end":{"line":81,"column":14}},"18":{"start":{"line":84,"column":0},"end":{"line":98,"column":2}},"19":{"start":{"line":85,"column":2},"end":{"line":85,"column":34}},"20":{"start":{"line":86,"column":2},"end":{"line":86,"column":41}},"21":{"start":{"line":87,"column":2},"end":{"line":87,"column":35}},"22":{"start":{"line":88,"column":2},"end":{"line":91,"column":3}},"23":{"start":{"line":89,"column":4},"end":{"line":90,"column":45}},"24":{"start":{"line":90,"column":28},"end":{"line":90,"column":42}},"25":{"start":{"line":92,"column":2},"end":{"line":97,"column":24}},"26":{"start":{"line":93,"column":4},"end":{"line":93,"column":66}},"27":{"start":{"line":94,"column":4},"end":{"line":94,"column":64}},"28":{"start":{"line":96,"column":4},"end":{"line":96,"column":36}},"29":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"30":{"start":{"line":110,"column":2},"end":{"line":110,"column":20}},"31":{"start":{"line":113,"column":0},"end":{"line":113,"column":41}},"32":{"start":{"line":116,"column":0},"end":{"line":127,"column":2}},"33":{"start":{"line":117,"column":2},"end":{"line":123,"column":14}},"34":{"start":{"line":124,"column":2},"end":{"line":124,"column":52}},"35":{"start":{"line":125,"column":2},"end":{"line":125,"column":73}},"36":{"start":{"line":126,"column":2},"end":{"line":126,"column":20}},"37":{"start":{"line":130,"column":0},"end":{"line":143,"column":2}},"38":{"start":{"line":131,"column":2},"end":{"line":131,"column":51}},"39":{"start":{"line":132,"column":2},"end":{"line":132,"column":55}},"40":{"start":{"line":133,"column":2},"end":{"line":141,"column":3}},"41":{"start":{"line":134,"column":4},"end":{"line":134,"column":48}},"42":{"start":{"line":135,"column":4},"end":{"line":135,"column":66}},"43":{"start":{"line":136,"column":4},"end":{"line":140,"column":5}},"44":{"start":{"line":138,"column":6},"end":{"line":138,"column":80}},"45":{"start":{"line":139,"column":6},"end":{"line":139,"column":76}},"46":{"start":{"line":142,"column":2},"end":{"line":142,"column":39}},"47":{"start":{"line":152,"column":0},"end":{"line":157,"column":2}},"48":{"start":{"line":153,"column":2},"end":{"line":153,"column":36}},"49":{"start":{"line":154,"column":2},"end":{"line":155,"column":48}},"50":{"start":{"line":156,"column":2},"end":{"line":156,"column":15}},"51":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"52":{"start":{"line":165,"column":2},"end":{"line":165,"column":38}},"53":{"start":{"line":175,"column":0},"end":{"line":179,"column":2}},"54":{"start":{"line":176,"column":2},"end":{"line":176,"column":70}},"55":{"start":{"line":177,"column":2},"end":{"line":177,"column":52}},"56":{"start":{"line":178,"column":2},"end":{"line":178,"column":53}},"57":{"start":{"line":188,"column":0},"end":{"line":193,"column":2}},"58":{"start":{"line":189,"column":2},"end":{"line":189,"column":70}},"59":{"start":{"line":190,"column":2},"end":{"line":190,"column":52}},"60":{"start":{"line":191,"column":2},"end":{"line":191,"column":48}},"61":{"start":{"line":192,"column":2},"end":{"line":192,"column":14}},"62":{"start":{"line":200,"column":0},"end":{"line":202,"column":3}},"63":{"start":{"line":201,"column":2},"end":{"line":201,"column":39}},"64":{"start":{"line":205,"column":0},"end":{"line":205,"column":27}}},"branchMap":{"1":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":21},"end":{"line":86,"column":27}},{"start":{"line":86,"column":30},"end":{"line":86,"column":40}}]},"2":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"3":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":21},"end":{"line":96,"column":25}},{"start":{"line":96,"column":28},"end":{"line":96,"column":35}}]},"4":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":58},"end":{"line":121,"column":67}},{"start":{"line":121,"column":70},"end":{"line":121,"column":72}}]},"5":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":16},"end":{"line":121,"column":22}},{"start":{"line":121,"column":26},"end":{"line":121,"column":55}}]},"6":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":31},"end":{"line":132,"column":40}},{"start":{"line":132,"column":43},"end":{"line":132,"column":54}}]},"7":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"8":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":24}},{"start":{"line":133,"column":28},"end":{"line":133,"column":58}}]},"9":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":24},"end":{"line":134,"column":41}},{"start":{"line":134,"column":45},"end":{"line":134,"column":47}}]},"10":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"11":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":17},"end":{"line":153,"column":29}},{"start":{"line":153,"column":33},"end":{"line":153,"column":35}}]},"12":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":22}},{"start":{"line":155,"column":26},"end":{"line":155,"column":47}}]},"13":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":46},"end":{"line":176,"column":50}},{"start":{"line":176,"column":53},"end":{"line":176,"column":69}}]},"14":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":46},"end":{"line":189,"column":50}},{"start":{"line":189,"column":53},"end":{"line":189,"column":69}}]}},"code":["/**"," * @file Manages Streaming APIs"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var events = require('events'),","    inherits = require('inherits'),","    _ = require('lodash/core'),","    Faye   = require('faye'),","    jsforce = require('../core');","","/**"," * Streaming API topic class"," *"," * @class Streaming~Topic"," * @param {Streaming} steaming - Streaming API object"," * @param {String} name - Topic name"," */","var Topic = function(streaming, name) {","  this._streaming = streaming;","  this.name = name;","};","","/**"," * @typedef {Object} Streaming~StreamingMessage"," * @prop {Object} event"," * @prop {Object} event.type - Event type"," * @prop {Record} sobject - Record information"," */","/**"," * Subscribe listener to topic"," *"," * @method Streaming~Topic#subscribe"," * @param {Callback.<Streaming~StreamingMesasge>} listener - Streaming message listener"," * @returns {Subscription} - Faye subscription object"," */","Topic.prototype.subscribe = function(listener) {","  return this._streaming.subscribe(this.name, listener);","};","","/**"," * Unsubscribe listener from topic"," *"," * @method Streaming~Topic#unsubscribe"," * @param {Callback.<Streaming~StreamingMesasge>} listener - Streaming message listener"," * @returns {Streaming~Topic}"," */","Topic.prototype.unsubscribe = function(listener) {","  this._streaming.unsubscribe(this.name, listener);","  return this;","};","","/*--------------------------------------------*/","","/**"," * Streaming API Generic Streaming Channel"," *"," * @class Streaming~Channel"," * @param {Streaming} steaming - Streaming API object"," * @param {String} name - Channel name (starts with \"/u/\")"," */","var Channel = function(streaming, name) {","  this._streaming = streaming;","  this._name = name;","};","","/**"," * Subscribe to hannel"," *"," * @param {Callback.<Streaming~StreamingMessage>} listener - Streaming message listener"," * @returns {Subscription} - Faye subscription object"," */","Channel.prototype.subscribe = function(listener) {","  return this._streaming.subscribe(this._name, listener);","};","","Channel.prototype.unsubscribe = function(listener) {","  this._streaming.unsubscribe(this._name, listener);","  return this;","};","","Channel.prototype.push = function(events, callback) {","  var isArray = _.isArray(events);","  events = isArray ? events : [ events ];","  var conn = this._streaming._conn;","  if (!this._id) {","    this._id = conn.sobject('StreamingChannel').findOne({ Name: this._name }, 'Id')","      .then(function(rec) { return rec.Id });","  }","  return this._id.then(function(id) {","    var channelUrl = '/sobjects/StreamingChannel/' + id + '/push';","    return conn.requestPost(channelUrl, { pushEvents: events });","  }).then(function(rets) {","    return isArray ? rets : rets[0];","  }).thenCall(callback);","};","","/*--------------------------------------------*/","","/**"," * Streaming API class"," *"," * @class"," * @extends events.EventEmitter"," * @param {Connection} conn - Connection object"," */","var Streaming = function(conn) {","  this._conn = conn;","};","","inherits(Streaming, events.EventEmitter);","","/** @private **/","Streaming.prototype._createClient = function(replay) {","  var endpointUrl = [","    this._conn.instanceUrl,","    // special endpoint \"/cometd/replay/xx.x\" is only available in 36.0.","    // See https://releasenotes.docs.salesforce.com/en-us/summer16/release-notes/rn_api_streaming_classic_replay.htm","    \"cometd\" + (replay && this._conn.version === \"36.0\" ? \"/replay\" : \"\"),","    this._conn.version","  ].join('/');","  var fayeClient = new Faye.Client(endpointUrl, {});","  fayeClient.setHeader('Authorization', 'OAuth '+this._conn.accessToken);","  return fayeClient;","};","","/** @private **/","Streaming.prototype._getFayeClient = function(channelName) {","  var isGeneric = channelName.indexOf('/u/') === 0;","  var clientType = isGeneric ? 'generic' : 'pushTopic';","  if (!this._fayeClients || !this._fayeClients[clientType]) {","    this._fayeClients = this._fayeClients || {};","    this._fayeClients[clientType] = this._createClient(isGeneric);","    if (this._fayeClients[clientType]._dispatcher.getConnectionTypes().indexOf('callback-polling') === -1) {","      // prevent streaming API server error","      this._fayeClients[clientType]._dispatcher.selectTransport('long-polling');","      this._fayeClients[clientType]._dispatcher._transport.batching = false;","    }","  }","  return this._fayeClients[clientType];","};","","","/**"," * Get named topic"," *"," * @param {String} name - Topic name"," * @returns {Streaming~Topic}"," */","Streaming.prototype.topic = function(name) {","  this._topics = this._topics || {};","  var topic = this._topics[name] =","    this._topics[name] || new Topic(this, name);","  return topic;","};","","/**"," * Get Channel for Id"," * @param {String} channelId - Id of StreamingChannel object"," * @returns {Streaming~Channel}"," */","Streaming.prototype.channel = function(channelId) {","  return new Channel(this, channelId);","};","","/**"," * Subscribe topic/channel"," *"," * @param {String} name - Topic name"," * @param {Callback.<Streaming~StreamingMessage>} listener - Streaming message listener"," * @returns {Subscription} - Faye subscription object"," */","Streaming.prototype.subscribe = function(name, listener) {","  var channelName = name.indexOf('/') === 0 ? name : '/topic/' + name;","  var fayeClient = this._getFayeClient(channelName);","  return fayeClient.subscribe(channelName, listener);","};","","/**"," * Unsubscribe topic"," *"," * @param {String} name - Topic name"," * @param {Callback.<Streaming~StreamingMessage>} listener - Streaming message listener"," * @returns {Streaming}"," */","Streaming.prototype.unsubscribe = function(name, listener) {","  var channelName = name.indexOf('/') === 0 ? name : '/topic/' + name;","  var fayeClient = this._getFayeClient(channelName);","  fayeClient.unsubscribe(channelName, listener);","  return this;","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.streaming = new Streaming(conn);","});","","","module.exports = Streaming;",""],"l":{"8":1,"21":1,"22":0,"23":0,"39":1,"40":0,"50":1,"51":0,"52":0,"64":1,"65":0,"66":0,"75":1,"76":0,"79":1,"80":0,"81":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"94":0,"96":0,"109":1,"110":0,"113":1,"116":1,"117":0,"124":0,"125":0,"126":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"138":0,"139":0,"142":0,"152":1,"153":0,"154":0,"156":0,"164":1,"165":0,"175":1,"176":0,"177":0,"178":0,"188":1,"189":0,"190":0,"191":0,"192":0,"200":1,"201":0,"205":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/tooling.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/api/tooling.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":29}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":20},"end":{"line":36,"column":37}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":9},"end":{"line":43,"column":24}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":31},"end":{"line":61,"column":42}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":54},"end":{"line":64,"column":68}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":45},"end":{"line":66,"column":58}}},"7":{"name":"(anonymous_7)","line":75,"loc":{"start":{"line":75,"column":29},"end":{"line":75,"column":40}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":28},"end":{"line":82,"column":39}}},"9":{"name":"(anonymous_9)","line":229,"loc":{"start":{"line":229,"column":37},"end":{"line":229,"column":62}}},"10":{"name":"(anonymous_10)","line":241,"loc":{"start":{"line":241,"column":41},"end":{"line":241,"column":70}}},"11":{"name":"(anonymous_11)","line":253,"loc":{"start":{"line":253,"column":40},"end":{"line":253,"column":71}}},"12":{"name":"(anonymous_12)","line":269,"loc":{"start":{"line":269,"column":32},"end":{"line":269,"column":57}}},"13":{"name":"(anonymous_13)","line":283,"loc":{"start":{"line":283,"column":29},"end":{"line":283,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":32}},"2":{"start":{"line":18,"column":0},"end":{"line":55,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":30}},"5":{"start":{"line":21,"column":2},"end":{"line":35,"column":4}},"6":{"start":{"line":36,"column":2},"end":{"line":38,"column":11}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":54}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"9":{"start":{"line":42,"column":2},"end":{"line":44,"column":4}},"10":{"start":{"line":43,"column":26},"end":{"line":43,"column":72}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":79}},"12":{"start":{"line":46,"column":2},"end":{"line":46,"column":86}},"13":{"start":{"line":47,"column":2},"end":{"line":47,"column":41}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":39}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":43}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":91}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":98}},"18":{"start":{"line":54,"column":2},"end":{"line":54,"column":20}},"19":{"start":{"line":61,"column":0},"end":{"line":70,"column":2}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":21}},"21":{"start":{"line":63,"column":2},"end":{"line":63,"column":21}},"22":{"start":{"line":64,"column":2},"end":{"line":69,"column":12}},"23":{"start":{"line":65,"column":4},"end":{"line":68,"column":5}},"24":{"start":{"line":66,"column":6},"end":{"line":66,"column":79}},"25":{"start":{"line":66,"column":60},"end":{"line":66,"column":75}},"26":{"start":{"line":67,"column":6},"end":{"line":67,"column":40}},"27":{"start":{"line":75,"column":0},"end":{"line":77,"column":2}},"28":{"start":{"line":76,"column":2},"end":{"line":76,"column":44}},"29":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"30":{"start":{"line":83,"column":2},"end":{"line":83,"column":57}},"31":{"start":{"line":229,"column":0},"end":{"line":232,"column":2}},"32":{"start":{"line":230,"column":2},"end":{"line":230,"column":92}},"33":{"start":{"line":231,"column":2},"end":{"line":231,"column":46}},"34":{"start":{"line":241,"column":0},"end":{"line":244,"column":2}},"35":{"start":{"line":242,"column":2},"end":{"line":242,"column":55}},"36":{"start":{"line":243,"column":2},"end":{"line":243,"column":91}},"37":{"start":{"line":253,"column":0},"end":{"line":256,"column":2}},"38":{"start":{"line":254,"column":2},"end":{"line":254,"column":54}},"39":{"start":{"line":255,"column":2},"end":{"line":255,"column":95}},"40":{"start":{"line":269,"column":0},"end":{"line":276,"column":2}},"41":{"start":{"line":270,"column":2},"end":{"line":273,"column":3}},"42":{"start":{"line":271,"column":4},"end":{"line":271,"column":20}},"43":{"start":{"line":272,"column":4},"end":{"line":272,"column":18}},"44":{"start":{"line":274,"column":2},"end":{"line":274,"column":78}},"45":{"start":{"line":275,"column":2},"end":{"line":275,"column":46}},"46":{"start":{"line":283,"column":0},"end":{"line":285,"column":3}},"47":{"start":{"line":284,"column":2},"end":{"line":284,"column":35}},"48":{"start":{"line":288,"column":0},"end":{"line":288,"column":25}}},"branchMap":{"1":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":40},"end":{"line":43,"column":58}},{"start":{"line":43,"column":61},"end":{"line":43,"column":71}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"3":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":2},"end":{"line":270,"column":2}},{"start":{"line":270,"column":2},"end":{"line":270,"column":2}}]}},"code":["/**"," * @file Manages Tooling APIs"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var jsforce = require('../core'),","    _     = require('lodash/core'),","    Cache = require('../cache');","","/**"," * API class for Tooling API call"," *"," * @class"," * @param {Connection} conn - Connection"," */","var Tooling = function(conn) {","  this._conn = conn;","  this._logger = conn._logger;","  var delegates = [","    \"query\",","    \"queryMore\",","    \"create\",","    \"insert\",","    \"retrieve\",","    \"update\",","    \"upsert\",","    \"del\",","    \"delete\",","    \"destroy\",","    \"describe\",","    \"describeGlobal\",","    \"sobject\"","  ];","  delegates.forEach(function(method) {","    this[method] = conn.constructor.prototype[method];","  }, this);","","  this.cache = new Cache();","","  var cacheOptions = {","    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }","  };","  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);","  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);","  this.describeSObject$ = this.describe$;","  this.describeSObject = this.describe;","","  cacheOptions = { key: 'describeGlobal' };","  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);","  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);","","  this.initialize();","};","","/**"," * Initialize tooling API"," * @protected"," */","Tooling.prototype.initialize = function() {","  this.sobjects = {};","  this.cache.clear();","  this.cache.get('describeGlobal').on('value', _.bind(function(res) {","    if (res.result) {","      var types = _.map(res.result.sobjects, function(so) { return so.name; });","      types.forEach(this.sobject, this);","    }","  }, this));","};","","/**"," * @private"," */","Tooling.prototype._baseUrl = function() {","  return this._conn._baseUrl() + \"/tooling\";","};","","/**"," * @private"," */","Tooling.prototype.request = function() {","  return this._conn.request.apply(this._conn, arguments);","};","","/**"," * Execute query by using SOQL"," *"," * @param {String} soql - SOQL string"," * @param {Callback.<QueryResult>} [callback] - Callback function"," * @returns {Query.<QueryResult>}"," */","/**"," * Query next record set by using query locator"," *"," * @method Tooling#query"," * @param {String} locator - Next record set locator"," * @param {Callback.<QueryResult>} [callback] - Callback function"," * @returns {Query.<QueryResult>}"," */","/**"," * Retrieve specified records"," *"," * @method Tooling#queryMore"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A record ID or array of record IDs"," * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function"," * @returns {Promise.<Record|Array.<Record>>}"," */","","/**"," * Synonym of Tooling#create()"," *"," * @method Tooling#insert"," * @param {String} type - SObject Type"," * @param {Object|Array.<Object>} records - A record or array of records to create"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Create records"," *"," * @method Tooling#create"," * @param {String} type - SObject Type"," * @param {Record|Array.<Record>} records - A record or array of records to create"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","","/**"," * Update records"," *"," * @method Tooling#update"," * @param {String} type - SObject Type"," * @param {Record|Array.<Record>} records - A record or array of records to update"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","","/**"," * Upsert records"," *"," * @method Tooling#upsert"," * @param {String} type - SObject Type"," * @param {Record|Array.<Record>} records - Record or array of records to upsert"," * @param {String} extIdField - External ID field name"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","","/**"," * Synonym of Tooling#destroy()"," *"," * @method Tooling#delete"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Synonym of Tooling#destroy()"," *"," * @method Tooling#del"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","/**"," * Delete records"," *"," * @method Tooling#destroy"," * @param {String} type - SObject Type"," * @param {String|Array.<String>} ids - A ID or array of IDs to delete"," * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback"," * @returns {Promise.<RecordResult|Array.<RecordResult>>}"," */","","/**"," * Synonym of Tooling#describe()"," *"," * @method Tooling#describeSObject"," * @param {String} type - SObject Type"," * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function"," * @returns {Promise.<DescribeSObjectResult>}"," */","/**"," * Describe SObject metadata"," *"," * @method Tooling#describe"," * @param {String} type - SObject Type"," * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function"," * @returns {Promise.<DescribeSObjectResult>}"," */","","/**"," * Describe global SObjects"," *"," * @method Tooling#describeGlobal"," * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function"," * @returns {Promise.<DescribeGlobalResult>}"," */","","/**"," * Get SObject instance"," *"," * @method Tooling#sobject"," * @param {String} type - SObject Type"," * @returns {SObject}"," */","","/**"," * @typedef {Object} Tooling~ExecuteAnonymousResult"," * @prop {Boolean} compiled - Flag if the query is compiled successfully"," * @prop {String} compileProblem - Error reason in compilation"," * @prop {Boolean} success - Flag if the code is executed successfully"," * @prop {Number} line - Line number for the error"," * @prop {Number} column - Column number for the error"," * @prop {String} exceptionMessage - Exception message"," * @prop {String} exceptionStackTrace - Exception stack trace"," */","/**"," * Executes Apex code anonymously"," *"," * @param {String} body - Anonymous Apex code"," * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function"," * @returns {Promise.<Tooling~ExecuteAnonymousResult>}"," */","Tooling.prototype.executeAnonymous = function(body, callback) {","  var url = this._baseUrl() + \"/executeAnonymous?anonymousBody=\" + encodeURIComponent(body);","  return this.request(url).thenCall(callback);","};","","/**"," * Executes Apex tests asynchronously"," *"," * @param {Array.<String>} classids - Comma separated list of class IDs"," * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function"," * @returns {Promise.<Tooling~ExecuteAnonymousResult>}"," */","Tooling.prototype.runTestsAsynchronous = function(classids, callback) {","  var url = this._baseUrl() + \"/runTestsAsynchronous/\";","  return this._conn.requestPost(url, {classids : classids.join(',')}, undefined, callback);","};","","/**"," * Executes Apex tests synchronously"," *"," * @param {Array.<String>} classnames - Comma separated list of class Names"," * @param {Callback.<Tooling~ExecuteAnonymousResult>} [callback] - Callback function"," * @returns {Promise.<Tooling~ExecuteAnonymousResult>}"," */","Tooling.prototype.runTestsSynchronous = function(classnames, callback) {","  var url = this._baseUrl() + \"/runTestsSynchronous/\";","  return this._conn.requestPost(url, {classnames : classnames.join(',')}, undefined, callback);","};","","/**"," * @typedef {Object} Tooling~CompletionsResult"," * @prop {Object} publicDeclarations"," */","/**"," * Retrieves available code completions of the referenced type"," *"," * @param {String} [type] - completion type (default 'apex')"," * @param {Callback.<Tooling~CompletionsResult>} [callback] - Callback function"," * @returns {Promise.<Tooling~CompletionsResult>}"," */","Tooling.prototype.completions = function(type, callback) {","  if (!_.isString(type)) {","    callback = type;","    type = 'apex';","  }","  var url = this._baseUrl() + \"/completions?type=\" + encodeURIComponent(type);","  return this.request(url).thenCall(callback);","};","","","/*--------------------------------------------*/","/*"," * Register hook in connection instantiation for dynamically adding this API module features"," */","jsforce.on('connection:new', function(conn) {","  conn.tooling = new Tooling(conn);","});","","","module.exports = Tooling;",""],"l":{"8":1,"18":1,"19":0,"20":0,"21":0,"36":0,"37":0,"40":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"52":0,"54":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"75":1,"76":0,"82":1,"83":0,"229":1,"230":0,"231":0,"241":1,"242":0,"243":0,"253":1,"254":0,"255":0,"269":1,"270":0,"271":0,"272":0,"274":0,"275":0,"283":1,"284":0,"288":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/registry/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/registry/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}}},"branchMap":{},"code":["var jsforce = require('../core');","var FileRegistry = require('./file-registry');","jsforce.registry = new FileRegistry();",""],"l":{"1":1,"2":1,"3":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/registry/file-registry.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/registry/file-registry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[1,1],"2":[0,1]},"f":{"1":1,"2":1,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":19},"end":{"line":8,"column":44}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":51},"end":{"line":22,"column":62}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":15,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":33}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":76}},"8":{"start":{"line":11,"column":2},"end":{"line":14,"column":15}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":44}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"12":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":85}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":40}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":36}},"16":{"start":{"line":31,"column":0},"end":{"line":43,"column":2}},"17":{"start":{"line":32,"column":2},"end":{"line":32,"column":59}},"18":{"start":{"line":33,"column":2},"end":{"line":42,"column":3}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":49}},"20":{"start":{"line":35,"column":4},"end":{"line":35,"column":46}},"21":{"start":{"line":37,"column":4},"end":{"line":37,"column":55}},"22":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"23":{"start":{"line":39,"column":4},"end":{"line":39,"column":35}},"24":{"start":{"line":40,"column":4},"end":{"line":40,"column":49}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":46}},"26":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":25},"end":{"line":10,"column":39}},{"start":{"line":10,"column":43},"end":{"line":10,"column":75}}]},"2":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":61},"end":{"line":23,"column":74}},{"start":{"line":23,"column":77},"end":{"line":23,"column":83}}]}},"code":["var inherits = require('inherits');","var fs = require('fs');","var path = require('path');","var Registry = require('./registry');","","/* ------------------------------------------------------------------------- */","","var FileRegistry = function(configFilePath) {","  FileRegistry.super_.call(this);","  this._configFilePath = configFilePath || this._getDefaultConfigFilePath();","  try {","    var data = fs.readFileSync(this._configFilePath, 'utf-8');","    this._registryConfig = JSON.parse(data);","  } catch(e) {}","};","","inherits(FileRegistry, Registry);","","/**"," *"," */","FileRegistry.prototype._getDefaultConfigFilePath = function() {","  var homeDir = process.env[(process.platform === 'win32') ? 'USERPROFILE' : 'HOME'];","  var configDir = homeDir + \"/.jsforce\";","  return configDir + \"/config.json\";","};","","/**"," * @private"," */","FileRegistry.prototype._saveConfig = function() {","  var data = JSON.stringify(this._registryConfig, null, 4);","  try {","    fs.writeFileSync(this._configFilePath, data);","    fs.chmodSync(this._configFilePath, \"600\");","  } catch(e) {","    var configDir = path.dirname(this._configFilePath);","    fs.mkdirSync(configDir);","    fs.chmodSync(configDir, \"700\");","    fs.writeFileSync(this._configFilePath, data);","    fs.chmodSync(this._configFilePath, \"600\");","  }","};","","/**"," *"," */","module.exports = FileRegistry;",""],"l":{"1":1,"2":1,"3":1,"4":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"17":1,"22":1,"23":1,"24":1,"25":1,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/registry/registry.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/lib/registry/registry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":0,"58":0,"59":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":40}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":33},"end":{"line":21,"column":44}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":33},"end":{"line":25,"column":44}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":37},"end":{"line":29,"column":48}}},"5":{"name":"(anonymous_5)","line":33,"loc":{"start":{"line":33,"column":40},"end":{"line":33,"column":51}}},"6":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":50}}},"7":{"name":"(anonymous_7)","line":41,"loc":{"start":{"line":41,"column":41},"end":{"line":41,"column":56}}},"8":{"name":"(anonymous_8)","line":55,"loc":{"start":{"line":55,"column":42},"end":{"line":55,"column":69}}},"9":{"name":"(anonymous_9)","line":69,"loc":{"start":{"line":69,"column":37},"end":{"line":69,"column":60}}},"10":{"name":"(anonymous_10)","line":81,"loc":{"start":{"line":81,"column":42},"end":{"line":81,"column":57}}},"11":{"name":"(anonymous_11)","line":86,"loc":{"start":{"line":86,"column":44},"end":{"line":86,"column":59}}},"12":{"name":"(anonymous_12)","line":92,"loc":{"start":{"line":92,"column":31},"end":{"line":92,"column":46}}},"13":{"name":"(anonymous_13)","line":97,"loc":{"start":{"line":97,"column":36},"end":{"line":97,"column":47}}},"14":{"name":"(anonymous_14)","line":101,"loc":{"start":{"line":101,"column":36},"end":{"line":101,"column":65}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"3":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":28}},"5":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":65}},"7":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":77}},"9":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":85}},"11":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":45}},"13":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"14":{"start":{"line":38,"column":2},"end":{"line":38,"column":56}},"15":{"start":{"line":41,"column":0},"end":{"line":53,"column":2}},"16":{"start":{"line":42,"column":2},"end":{"line":42,"column":56}},"17":{"start":{"line":42,"column":15},"end":{"line":42,"column":54}},"18":{"start":{"line":43,"column":2},"end":{"line":43,"column":43}},"19":{"start":{"line":44,"column":2},"end":{"line":44,"column":37}},"20":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":37}},"22":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"23":{"start":{"line":48,"column":6},"end":{"line":48,"column":69}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"25":{"start":{"line":52,"column":2},"end":{"line":52,"column":20}},"26":{"start":{"line":55,"column":0},"end":{"line":67,"column":2}},"27":{"start":{"line":56,"column":2},"end":{"line":56,"column":43}},"28":{"start":{"line":57,"column":2},"end":{"line":57,"column":35}},"29":{"start":{"line":58,"column":2},"end":{"line":64,"column":3}},"30":{"start":{"line":59,"column":4},"end":{"line":59,"column":61}},"31":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"32":{"start":{"line":61,"column":6},"end":{"line":61,"column":37}},"33":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}},"34":{"start":{"line":65,"column":2},"end":{"line":65,"column":33}},"35":{"start":{"line":66,"column":2},"end":{"line":66,"column":21}},"36":{"start":{"line":69,"column":0},"end":{"line":79,"column":2}},"37":{"start":{"line":70,"column":2},"end":{"line":70,"column":35}},"38":{"start":{"line":71,"column":2},"end":{"line":77,"column":3}},"39":{"start":{"line":72,"column":4},"end":{"line":72,"column":31}},"40":{"start":{"line":73,"column":4},"end":{"line":76,"column":5}},"41":{"start":{"line":75,"column":6},"end":{"line":75,"column":18}},"42":{"start":{"line":78,"column":2},"end":{"line":78,"column":14}},"43":{"start":{"line":81,"column":0},"end":{"line":84,"column":2}},"44":{"start":{"line":82,"column":2},"end":{"line":82,"column":41}},"45":{"start":{"line":83,"column":2},"end":{"line":83,"column":21}},"46":{"start":{"line":86,"column":0},"end":{"line":90,"column":2}},"47":{"start":{"line":87,"column":2},"end":{"line":87,"column":43}},"48":{"start":{"line":88,"column":2},"end":{"line":88,"column":27}},"49":{"start":{"line":89,"column":2},"end":{"line":89,"column":21}},"50":{"start":{"line":92,"column":0},"end":{"line":95,"column":2}},"51":{"start":{"line":93,"column":2},"end":{"line":93,"column":46}},"52":{"start":{"line":94,"column":2},"end":{"line":94,"column":47}},"53":{"start":{"line":97,"column":0},"end":{"line":99,"column":2}},"54":{"start":{"line":98,"column":2},"end":{"line":98,"column":41}},"55":{"start":{"line":101,"column":0},"end":{"line":105,"column":2}},"56":{"start":{"line":102,"column":2},"end":{"line":102,"column":35}},"57":{"start":{"line":103,"column":2},"end":{"line":103,"column":31}},"58":{"start":{"line":104,"column":2},"end":{"line":104,"column":21}},"59":{"start":{"line":111,"column":0},"end":{"line":111,"column":26}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":37}},{"start":{"line":26,"column":42},"end":{"line":26,"column":75}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":41}},{"start":{"line":30,"column":46},"end":{"line":30,"column":83}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"9":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":49}},{"start":{"line":74,"column":8},"end":{"line":74,"column":85}}]},"10":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":9},"end":{"line":74,"column":24}},{"start":{"line":74,"column":28},"end":{"line":74,"column":58}}]},"11":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":9},"end":{"line":94,"column":21}},{"start":{"line":94,"column":25},"end":{"line":94,"column":46}}]}},"code":["/*global process */","/**"," * @file Registry for connection information, cached in local file system"," * @author Shinichi Tomita <shinichi.tomita@gmail.com>"," */","","'use strict';","","var _  = require('lodash/core');","var Connection = require('../connection');","","/*  */","var Registry = function(configFilePath) {","  this._registryConfig = {};","};","","/**"," * @private"," * @override"," */","Registry.prototype._saveConfig = function() {","  throw new Error('_saveConfig must be implemented in subclass');","};","","Registry.prototype._getClients = function() {","  return this._registryConfig.clients || (this._registryConfig.clients = {});","};","","Registry.prototype._getConnections = function() {","  return this._registryConfig.connections || (this._registryConfig.connections = {});","};","","Registry.prototype.getConnectionNames = function() {","  return Object.keys(this._getConnections());","};","","Registry.prototype.getConnection = function(name) {","  return new Connection(this.getConnectionConfig(name));","};","","Registry.prototype.getConnectionConfig = function(name) {","  if (!name) { name = this._registryConfig[\"default\"]; }","  var connections = this._getConnections();","  var connConfig = connections[name];","  if (connConfig) {","    connConfig = _.clone(connConfig);","    if (connConfig.client) {","      connConfig.oauth2 = _.clone(this.getClient(connConfig.client));","    }","    delete connConfig.client;","  }","  return connConfig;","};","","Registry.prototype.saveConnectionConfig = function(name, connConfig) {","  var connections = this._getConnections();","  connConfig = _.clone(connConfig);","  if (connConfig.oauth2) {","    var clientName = this._findClientName(connConfig.oauth2);","    if (clientName) {","      connConfig.client = clientName;","    }","    delete connConfig.oauth2;","  }","  connections[name] = connConfig;","  this._saveConfig();","};","","Registry.prototype._findClientName = function(clientConfig) {","  var clients = this._getClients();","  for (var name in clients) {","    var client = clients[name];","    if (client.clientId === clientConfig.clientId &&","        (client.loginUrl || 'https://login.salesforce.com') === clientConfig.loginUrl) {","      return name;","    }","  }","  return null;","};","","Registry.prototype.setDefaultConnection = function(name) {","  this._registryConfig[\"default\"] = name;","  this._saveConfig();","};","","Registry.prototype.removeConnectionConfig = function(name) {","  var connections = this._getConnections();","  delete connections[name];","  this._saveConfig();","};","","Registry.prototype.getClient = function(name) {","  var clientConfig = this._getClients()[name];","  return clientConfig && _.clone(clientConfig);","};","","Registry.prototype.getClientNames = function() {","  return Object.keys(this._getClients());","};","","Registry.prototype.registerClient = function(name, clientConfig) {","  var clients = this._getClients();","  clients[name] = clientConfig;","  this._saveConfig();","};","","","","/* ------------------------------------------------------------------------- */","","module.exports = Registry;",""],"l":{"9":1,"10":1,"13":1,"14":1,"21":1,"22":0,"25":1,"26":0,"29":1,"30":0,"33":1,"34":0,"37":1,"38":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"65":0,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"75":0,"78":0,"81":1,"82":0,"83":0,"86":1,"87":0,"88":0,"89":0,"92":1,"93":0,"94":0,"97":1,"98":0,"101":1,"102":0,"103":0,"104":0,"111":1}},"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-jsforce/node_modules/jsforce/core.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}}},"branchMap":{},"code":["module.exports = require('./lib/core');",""],"l":{"1":1}}}